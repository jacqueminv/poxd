<?xml version="1.0" encoding="UTF-8"?> 
<rss version="2.0">
   <channel>
      <title>PoXd</title>
      <link>http://www.poxd.org//</link>
      <description></description>
      <language>fr</language>
      <docs>http://blogs.law.harvard.edu/tech/rss</docs>
      <generator>Hyde</generator>
      <webMaster>jacqueminv@gmail.com (Valentin Jacquemin)</webMaster>
          
      <item>
         <title>Soft-Shake, conférence Java, iPhone et bien plus à Genève</title>
         <link>http://www.poxd.org/blog/soft-shake.html</link>
         <guid>http://www.poxd.org/blog/soft-shake.html</guid>
         <description><![CDATA[

<p>Agilité, iPhone et Java voilà les trois thèmes de la conférence
<a href="http://www.soft-shake.ch">Soft-Shake</a> qui se tiendra pour la toute première fois le 18
octobre à Genève. La conférence est organisée en commun par l&#8217;Agile
Tour de Genève, le Groupe des Développeurs iPhone de Suisse et le
Geneva&nbsp;<span class="caps">JUG</span>.</p>
<p>Le programme sera donc varié avec déjà des sessions qui me tiennent à
coeur: &#8220;La Tequila du développement Web&#8221; par Nicolas Martignole à
propos du framework Play!&#8221;, &#8220;Les <span class="caps">DVCS</span> sont vos amis&#8221; par Sébastien
Douche, &#8220;The feel of Scala&#8221; par Mario Fusco et toutes les sessions du
track&nbsp;iPhone&#8230;</p>
<p>Autant le dire, je ne pourrai pas assister à toutes les sessions qui
m&#8217;intéressent mais comme le programme n&#8217;est pas encore publié je ne
peux pas me faire une idée claire de ma&nbsp;journée&#8230; </p>
<p>Chose importante: le prix <strong>est très raisonnable</strong>. 100 <span class="caps">CHF</span> pour une
journée de conférences et le repas de midi inclus. A ce prix-là autant
en profiter, <a href="http://www.soft-shake.ch/index.php?page=attendee-fr">inscrivez-vous</a>!</p>
<p>C&#8217;est à ma connaissance le tout premier événement de cette importance
tourné vers Java (et autres dans le cas présent) à Genève et c&#8217;est
super&nbsp;excitant!</p>
]]></description>
         <pubDate>03 Oct 10 00:00 GMT</pubDate>
         <author>jacqueminv@gmail.com (Valentin Jacquemin)</author>
      </item>    
      <item>
         <title>Introduction aux DCVS et git particulièrement</title>
         <link>http://www.poxd.org/blog/introduction-aux-dcvs-et-git-particulierement.html</link>
         <guid>http://www.poxd.org/blog/introduction-aux-dcvs-et-git-particulierement.html</guid>
         <description><![CDATA[

<p><small><i>Cet article a pour objectif d&#8217;être une introduction ou une
description de ce qu&#8217;est et ce qu&#8217;apporte git par rapport à un passif
svn. Je n&#8217;utilise git que depuis peu donc si toi lecteur tu décèles
une erreur ou une imprécision dans mes dires n&#8217;hésite pas,
exprime-toi!</i></small></p>
<p>Bien souvent en entreprise on ne se pose même pas la question: la
gestion des sources d&#8217;un projet se fera avec svn. Pourtant les
alternatives existent et non sans offrir tout un lot de
fonctionnalités bien pratiques. Je m&#8217;arrête aujourd&#8217;hui sur ce qui
pourrait être &#8212; selon <a href="http://joelonsoftware.com/items/2010/03/17.html">Joel Spolsky</a> &#8212; la plus grande avancée
dans le domaine du développement logiciel des 10 dernières années: la
gestion distribuée du code source. Avec un accent particulier sur git
l&#8217;un des
<abbr title="Distributed Version Control
System"><span class="caps">DVCS</span></abbr> les plus utilisés à ce&nbsp;jour.</p>
<h1 id="gestionnaires-de-code-source-distribues">Gestionnaires de code source&nbsp;distribués</h1>
<p>Svn existe maintenant depuis une dizaine d&#8217;années et il a plus ou
moins succédé à <span class="caps">CVS</span>.  L&#8217;un comme l&#8217;autre proposent un système
centralisé ce qui veut dire que pour chaque opération, le serveur est
interrogé. Le serveur est un Dieu par qui toute décision doit&nbsp;passer.</p>
<p>De son côté git propose une approche <em>peer-to-peer</em> à l&#8217;instar de
mercurial (python powa!), bazarr, Darcs et bien d&#8217;autres. Pour info,
bien qu&#8217;initialisé en 2005, git n&#8217;est pas le premier à suivre ce
modèle puisque son créateur &#8212; Linus Torvalds &#8212; s&#8217;est inspiré
directement d&#8217;un concurrent: <a href="http://www.bitkeeper.com/">BitKeeper</a><sup id="fnref:1"><a href="#fn:1" rel="footnote">1</a></sup>.</p>
<p>L&#8217;idée est de ne plus s&#8217;appuyer sur un serveur faisant office de
machine à tout faire mais plutôt de distribuer la gestion des sources
parmi tous les terminaux contribuant au projet. Sachant cela,
plusieurs fonctionnalités peuvent voir alors le&nbsp;jour&#8230;</p>
<p>Par exemple, chaque terminal possède tout l&#8217;historique du dépôt
(<em>repository</em>) et donc pas besoin d&#8217;interroger un serveur pour
parcourir l&#8217;évolution des <em>commits</em> du projet. Bénéfice collatéral: un
gain de performance brute. Cela vaut pour un parcours de l&#8217;historique
mais également pour tout autre opération qu&#8217;offre un gestionnaire de
code source: <code>commit</code>, <code>diff</code>, <code>merge</code>, créer et supprimer des
branches toutes ces fonctionnalités se feront en premier lieu
localement sur votre machine. En fait git n&#8217;aura besoin d&#8217;accéder au
réseau qu&#8217;à partir du moment où l&#8217;on voudra <em>pousser</em> (push) du code
vers un autre terminal ou bien à l&#8217;inverse en <em>récupérer</em> (pull). Si
vous vous êtes déjà amusé à faire une série de merge avec svn, vous
comprendrez rapidement à quel point le gain de performance fourni par
git est&nbsp;agréable.</p>
<p>En plus des performances, le fait de décentraliser la gestion des
sources ouvre la porte à une &#8220;assurance vie&#8221; plus robuste que bien des
stratégies de sauvegardes mises en place par un service <span class="caps">IT</span>. Oui
puisque je le répète, chaque terminal possède tout le contenu du
dépôt! Bien que ce soit à quelques exceptions près &#8212; un terminal ne
stockera pas par exemple les différents&#8221;hooks&#8221; que peut fournir un
serveur git &#8212; le plus important, les données, sont répliquées sur
tous les terminaux. Sacré&nbsp;avantage!</p>
<p>Dans la théorie le système est donc bien différent (et il y aurait
encore beaucoup de choses à dire)&#8230; et dans la pratique? Jetons un
coup d&#8217;oeil à ce que ça&nbsp;donne.</p>
<h1 id="faire-de-git-un-nouvel-outil-dans-son-eventail">Faire de git un nouvel outil dans son&nbsp;éventail</h1>
<p>Une fois <a href="http://git-scm.com/download">téléchargé</a>, démarrer le <em>versionnage</em> d&#8217;un projet se fait
simplement au moyen de la commande&nbsp;suivante:</p>
<p><code>git init</code></p>
<p>C&#8217;est tout. Une fraction de seconde après avoir exécuté cette
commande, le répertoire <code>.git</code> est créé dans le dossier courant. C&#8217;est
une nouvelle différence avec svn, les données gérées par git ne sont
stockées qu&#8217;à la racine et non plus dans chacun des dossiers du&nbsp;projet.</p>
<p>Après avoir initialisé le projet, parmi les commandes les plus
couramment utilisées vous avez <code>git add</code>, <code>git commit</code>, <code>git status</code>,
<code>git log</code> et certaines autres mais je vous laisse gentiment découvrir
tout ça. Baladez-vous sur les quelques liens en fin d&#8217;article pour
vraiment débuter votre&nbsp;apprentissage&#8230;</p>
<p>Attention, bien que le vocabulaire soit étrangement similaire à ce
qu&#8217;on retrouve sous svn, il faudra tout de même faire un effort de
bien comprendre ce que fait chaque commande parce que les différences
sont bien réelles. Comparez par exemple ce que vous savez de <code>svn
commit</code> avec <code>git commit</code>.</p>
<h2 id="quelques-notions-nouvelles">Quelques notions&nbsp;nouvelles</h2>
<p>Au delà du vocabulaire il faut noter qu&#8217;il existe 3 états possibles
pour un fichier versionné : commited, modified, staged. Ces 3 états
sont en relation avec 3 zones: le <em>working directory</em>, la <em>staging
area</em> et le <em>git directory</em>. Un fichier versionné et non modifié se
trouve dans la zone dite <em>working directory</em> et lorsque vous faites
<code>git add &lt;chemin_du_fichier&gt;</code> celui-ci entre dans la <em>staging area</em> qui
est une zone regroupant tout ce qui va être commité dans le <em>git
directory</em>.  Toute la gestion des sources se fait grâce à ces 3 zones
localement sur votre&nbsp;machine.</p>
<p class="centered">
  <img src="http://progit.org/figures/ch1/18333fig0106-tn.png"
  alt="Git est formé de 3 zones: le working directory, la staging area
  et le git directory."/>
</p>

<p>En en apprenant davantage sur git vous découvrirez la flexibilité
qu&#8217;apporte la <em>staging area</em>. Du bonheur en perspective je vous le&nbsp;garantis.</p>
<p>Outre ces 3 états il est aussi à noter que git pousse à commiter
souvent. Release early, release often comme le veut la tradition. Et
bien git facilite beaucoup cette méthode grâce à son atout principal:
la gestion des&nbsp;branches&#8230;</p>
<h2 id="repenser-sa-facon-de-travailler">Repenser sa façon de&nbsp;travailler</h2>
<p>S&#8217;il y a quelque chose de terrible à faire sur un projet géré par svn
c&#8217;est bien de merger deux branches.  Si on veut garder l&#8217;historique il
va falloir répliquer chaque commit à la mano (même si maintenant il
existe une option à <code>svn log</code> pour récupérer l&#8217;historique d&#8217;une
branche intégrée par merge c&#8217;est pas super) mais surtout c&#8217;est lent,
méchamment&nbsp;lent!</p>
<p>Non seulement avec git c&#8217;est bien plus rapide mais surtout le
développement utilisant les branches fait parti intégrante du workflow
d&#8217;un développeur utilisant git. Pour essayer de résumer le concept, la
branche principale &#8212; appelée master &#8212; sera la base stable de
l&#8217;applicatif et chacune des nouvelles fonctionnalités, chaque
résolution de bug pourront faire office de branche. Chaque branche
partant de la base stable progressera de manière isolée sans impacter
les autres développements. Le concept n&#8217;est étranger à aucun
développeur certainement (même ceux utilisant svn) mais ce qui change
par contre c&#8217;est la transparence, la simplicité et l&#8217;efficacité avec
lesquelles git gère le tout. Mis bout à bout le concept devient <em>réel</em>
pour la première fois dans ma petite expérience de&nbsp;développeur.</p>
<p>Pour dire la même chose, Linus lui <a href="http://marc.info/?l=git&amp;m=116129092117475">dira plutôt</a>:</p>
<blockquote>
<p>Git branches are branches done right. I just don&#8217;t see how you
  <em>could</em> do them&nbsp;better.</p>
</blockquote>
<h1 id="pour-en-savoir-plus">Pour en savoir&nbsp;plus</h1>
<p>Git s&#8217;utilise aujourd&#8217;hui de plus en plus, particulièrement dans le
monde open source. Il faut dire qu&#8217;une plate-forme comme github
favorise son adoption. Si vous ne connaissez pas encore ce réseau
social dédié au développement je vous encourage à prendre <a href="http://github.com/">5 minutes
pour voir ce que ça donne</a>. Vous aurez certainement l&#8217;opportunité
de retrouver des codeurs plus talentueux que vous ce qui est une
formidable opportunité d&#8217;apprendre. Pour pouvoir intégrer le site il
va falloir vous faire à git et c&#8217;est &#8212; selon moi &#8212; le meilleur moyen
<a href="http://help.github.com/">d&#8217;apprendre</a> ce qu&#8217;il peut vous&nbsp;apporter.</p>
<p>Il existe <a href="http://www.amazon.fr/gp/product/1934356158?ie=UTF8&amp;tag=thpowo-21&amp;linkCode=as2&amp;camp=1642&amp;creative=19458&amp;creativeASIN=1934356158">également</a> <a href="http://www.amazon.fr/gp/product/0596520123?ie=UTF8&amp;tag=thpowo-21&amp;linkCode=as2&amp;camp=1642&amp;creative=19458&amp;creativeASIN=0596520123">plusieurs</a> <a href="http://www.amazon.fr/gp/product/1934356727?ie=UTF8&amp;tag=thpowo-21&amp;linkCode=as2&amp;camp=1642&amp;creative=19458&amp;creativeASIN=1934356727">bouquins</a> sur le sujet. J&#8217;ai pour ma part
lu <a href="http://progit.org/">Pro Git</a> qui est d&#8217;excellente qualité. Bonne progression dans
le sujet, beaucoup d&#8217;exemples et aussi une section &#8220;les mains dans le
cambouis&#8221; (pour reprendre la formule aux CastCoders) au chapitre 9 qui
est vraiment intéressante si ça vous intéresse d&#8217;en savoir un peu plus
sur comment git s&#8217;organise pour retrouver ses petits. Notez également
que le livre est disponible sous format <a href="https://github.s3.amazonaws.com/media/progit.epub">ebook gratuitement</a>.</p>
<p>Pour rester au niveau introduction je peux encore vous rediriger vers
la vidéo suivante où Linus Torvalds, avec son petit (ou pas si petit
que ça en fait) air prétentieux, nous fait part de son aversion envers
le système centralisé suivi par svn et de ce qui a été fait sur git
pour tenter d&#8217;y apporter une&nbsp;solution.</p>
<p class="centered">
<object width="500" height="405">
   <param name="movie" value="http://www.youtube.com/v/4XpnKHJAok8?fs=1&amp;hl=en_US&amp;border=1"></param>;
   <param name="allowFullScreen" value="true"></param>
   <param name="allowscriptaccess" value="always"></param>
   <embed src="http://www.youtube.com/v/4XpnKHJAok8?fs=1&amp;hl=en_US&amp;border=1";;
      type="application/x-shockwave-flash" allowscriptaccess="always"
      allowfullscreen="true" width="500" height="405">
   </embed>
</object>
</p>

<p>Je ne sais pas si il faut dire prétentieux ou honnête. Vous diriez
quoi vous après l&#8217;extrait suivant de la source <em>sus-linkée</em>?</p>
<blockquote>
<p>That should tell people something. It&#8217;s pretty much the fastest <span class="caps">SCM</span>
  out there (and yeah, that&#8217;s on almost any operation you can name),
  it still has the smallest disk footprint I&#8217;ve ever heard of, and it
  hasn&#8217;t had the&#8221;format of the week&#8221; disease that every other project
  seems to go&nbsp;through.</p>
</blockquote>
<p>Quoiqu&#8217;il en soit si vous aussi svn vous voudriez davantage l&#8217;utiliser
pour gérer des branches, si vous aussi les temps de latences vous font
parfois péter un plomb, prenez le temps de jeter un oeil à git. Git
vous rendra ce&nbsp;temps.</p>
]]></description>
         <pubDate>30 Sep 10 00:00 GMT</pubDate>
         <author>jacqueminv@gmail.com (Valentin Jacquemin)</author>
      </item>    
      <item>
         <title>Mon retour sur Jazoon</title>
         <link>http://www.poxd.org/blog/mon-retour-sur-jazoon.html</link>
         <guid>http://www.poxd.org/blog/mon-retour-sur-jazoon.html</guid>
         <description><![CDATA[

<p>C&#8217;est dans le complexe cinématographique Arena Filmcity de Zürich que
j&#8217;ai participé à ma toute première conférence internationale sur
Java. Sur une durée de trois jours, c&#8217;est comme un petit gamin
émerveillé par un mur de bonbons que j&#8217;ai navigué de session en
session dont voici un aperçu<sup id="fnref:1"><a href="#fn:1" rel="footnote">1</a></sup>. La conférence s&#8217;est déroulée du 1 au
3 juin j&#8217;ai donc plus d&#8217;un mois de retard sur les faits mais ça prend
du temps tout de même d&#8217;écrire un article pareil, non&nbsp;mais!</p>
<p>Toutes les présentations dans un zip <a href="http://jazoon.com/Portals/0/Content/downloads/Jazoon%2710_Presentation_Slides.zip">ici</a></p>
<div class="toc">
<ul>
<li><a href="#le-mardi">Le mardi</a><ul>
<li><a href="#java-se-and-javafx-the-road-ahead">Java <span class="caps">SE</span> and JavaFX: The Road&nbsp;Ahead</a></li>
<li><a href="#the-java-ee-6-platform-powerful-productive-extensible">The Java <span class="caps">EE</span> 6 Platform: Powerful, Productive, Extensible</a><ul>
<li><a href="#web-profile">Web&nbsp;Profile</a></li>
<li><a href="#packaging">Packaging</a></li>
<li><a href="#jax-rs-11"><span class="caps">JAX</span>-<span class="caps">RS</span>&nbsp;1.1</a></li>
<li><a href="#ejb"><span class="caps">EJB</span></a></li>
<li><a href="#bean-validation">Bean&nbsp;Validation</a></li>
<li><a href="#di-dependency-injection"><span class="caps">DI</span> &#8212; <em>Dependency&nbsp;Injection</em></a></li>
<li><a href="#et-encore">Et&nbsp;encore&#8230;</a></li>
</ul>
</li>
<li><a href="#cdi-seam-resteasy-you-havent-seen-rest-yet"><span class="caps">CDI</span>, Seam <span class="amp">&amp;</span> RESTEasy: You haven&#8217;t seen <span class="caps">REST</span>&nbsp;yet</a></li>
<li><a href="#objects-of-value">Objects of&nbsp;Value</a></li>
<li><a href="#server-side-osgi-with-apache-sling">Server-side OSGi with Apache&nbsp;Sling</a></li>
<li><a href="#servlet-30-asynchronous-extensibility-ease-of-development">Servlet 3.0 &#8212; Asynchronous, extensibility, ease of&nbsp;development</a></li>
<li><a href="#97-things-every-programmer-should-know">97 Things Every Programmer Should&nbsp;Know</a></li>
</ul>
</li>
<li><a href="#le-mercredi">Le mercredi</a><ul>
<li><a href="#total-cost-of-ownership-and-return-on-investment">Total cost of ownership and return on&nbsp;investment</a></li>
<li><a href="#iphoneipad-development-from-the-java-perspective">iPhone/iPad development from the Java perspective</a><ul>
<li><a href="#lexperience-utilisateur">L&#8217;expérience&nbsp;utilisateur</a></li>
<li><a href="#lecosysteme">L&#8217;écosystème</a></li>
<li><a href="#le-cote-hype">Le côté <em>hype</em></a></li>
<li><a href="#a-se-rememorer">A se&nbsp;remémorer</a></li>
<li><a href="#et-lipad">Et&nbsp;l&#8217;iPad?</a></li>
<li><a href="#les-outils">Les&nbsp;outils</a></li>
</ul>
</li>
<li><a href="#whats-new-in-hibernate-a-jpa-2-perspective">What&#8217;s new in Hibernate: a <span class="caps">JPA</span> 2 perspective</a><ul>
<li><a href="#envers">Envers</a></li>
<li><a href="#recherche">Recherche</a></li>
<li><a href="#et-aussi">Et&nbsp;aussi</a></li>
</ul>
</li>
<li><a href="#java-persistence-criteria-api">Java persistence criteria&nbsp;<span class="caps">API</span></a></li>
<li><a href="#patterns-in-practices-in-hibernate">Patterns in practices in&nbsp;Hibernate</a></li>
<li><a href="#how-java-powers-large-online-retail-sites">How Java powers large online retail sites</a><ul>
<li><a href="#quelques-conseils-darchitecture">Quelques conseils&nbsp;d&#8217;architecture</a></li>
</ul>
</li>
<li><a href="#la-deuxieme-journee-se-termine">La deuxième journée se&nbsp;termine&#8230;</a></li>
</ul>
</li>
<li><a href="#le-jeudi">Le jeudi</a><ul>
<li><a href="#the-gaia-satellite-and-data-processing">The Gaia satellite and data&nbsp;processing</a></li>
<li><a href="#essentials-of-testing-the-tools-you-need-to-know">Essentials of testing: the tools you need to&nbsp;know</a></li>
<li><a href="#rapid-application-development-with-apache-wicket">Rapid application development with Apache&nbsp;Wicket</a></li>
<li><a href="#exploring-html5-with-javaserver-faces-20">Exploring <span class="caps">HTML5</span> with JavaServer Faces&nbsp;2.0</a></li>
<li><a href="#search-find-classify-a-short-tour-through-apache-solr">Search, Find, Classify - A short tour through Apache&nbsp;Solr</a></li>
<li><a href="#real-java-ee-testing-with-arquillian">Real Java <span class="caps">EE</span> testing with&nbsp;Arquillian</a></li>
</ul>
</li>
<li><a href="#mon-retour-final">Mon retour&nbsp;final</a></li>
</ul>
</div>
<h1 id="le-mardi">Le&nbsp;mardi</h1>
<p>Ce premier jour restera mon préféré. De bonnes session d&#8217;introduction
et de conclusion, un apéro bien sympa en fin d&#8217;après-midi et la
découverte d&#8217;une conférence super bien organisée. Bien accueilli, bien
nourri, tout est quasi&nbsp;parfait.</p>
<h2 id="java-se-and-javafx-the-road-ahead">Java <span class="caps">SE</span> and JavaFX: The Road&nbsp;Ahead</h2>
<p>La toute première présentation est donnée par Danny Coward, <em>Chief
Architect for Client Software</em> chez Oracle. Membre du <span class="caps">JCP</span>, présent sur
Java depuis la version 1.0, il a notamment mené la standardisation de
l&#8217;api servlet. Il en connaît donc un&nbsp;bout.</p>
<p>Avec son accent british, l&#8217;orateur nous rappelle que Java a 15 ans,
qu&#8217;il y a aujourd&#8217;hui 7 millions de développeurs Java et que Java se
trouve partout des smartcards jusqu&#8217;aux téléviseurs. Petit clin d&#8217;oeil
au <em>green project</em> avec un iphone des années 1990 dans les labos de Sun<sup id="fnref:2"><a href="#fn:2" rel="footnote">2</a></sup>.</p>
<p>En revenant sur l&#8217;actualité il parle ensuite des divers évolutions
actuellement en cours de discussion au sein du jcp pour la version 7
du jdk. Il pointe du doigt pour commencer sur l&#8217;effort de
refactorisation et de modularisation. Le jdk7 sera modulaire grâce à
un système de <em>class loading</em> plus efficace en chargeant uniquement
les classes&nbsp;nécessaires.</p>
<p>L&#8217;accent est ensuite mis sur le parallélisme. La version 7 du jdk
améliorera les choses de ce côté-là notamment grâce à un <em>garbage
collector</em> amélioré tournant selon les dire de Danny Coward quasiment
en même temps que l&#8217;application. Un <em>framework</em> Fork/Join<sup id="fnref:3"><a href="#fn:3" rel="footnote">3</a></sup> fera
également son apparition permettant de séparer des tâches en petit
bouts, les exécuter en parallèle et ensuite rassembler les résultats
pour ainsi profiter de la présence de tous les processeurs de la
machine. Ce framework est une extension du package
<code>java.util.concurrent</code> apparu dans la version 5 du&nbsp;jdk.</p>
<p>La machine virtuelle étant l&#8217;un des grands atouts de Java, il existe
aujourd&#8217;hui plus de 200 langages pouvant s&#8217;exécuter sur celle-ci. Le
jdk7 apportera également des améliorations à ce niveau-là notamment en
terme de&nbsp;performances.</p>
<p>Finalement concernant le code produit par les développeurs au jour le
jour Danny Coward explique qu&#8217;ajouter de nouvelles fonctionnalités à ce
niveau-là est pris très au sérieux et bien réfléchi car une fois
ajoutées, ces nouvelles fonctionnalités restent présentes à jamais. On
pourra néanmoins retrouver plusieurs&nbsp;ajouts:</p>
<ul>
<li><em>diamond type inference</em> : déclarations utilisant les <em>generics</em>&nbsp;simplifiées</li>
<li><em>exception handling</em> : possibilité d&#8217;avoir plusieurs exceptions dans un seul <code>catch</code></li>
<li><code>try(&lt;closeable resource){}</code> : utilisation simplifiée des ressources devant être &#8216;fermées&#8217; (ex: les flux&nbsp;d&#8217;entrée-sortie)</li>
<li><code>switch</code> sur des <code>String</code></li>
<li>closures : gros sujet de discussions, aucune syntaxe n&#8217;a clairement été choisie&nbsp;aujourd&#8217;hui</li>
</ul>
<p>Le but étant clairement d&#8217;alléger notre code, de le rendre plus
lisible. On retrouve plusieurs idées venant du monde des langages&nbsp;dynamiques&#8230;</p>
<p>Pour finir Danny Coward nous parle de <a href="http://javafx.com/">JavaFX</a>. Une démo de ce qui
a été fait pour le site des jeux olympiques de Vancouver, des
composants compatibles du mobile à la tv, des performances améliorées,
etc. Oracle ne lache donc pas le morceau concernant sa plateforme
<span class="caps">RIA</span>. JavaFX fait d&#8217;ailleurs le sujet pas moins de six&nbsp;sessions.</p>
<p>Très bonne présentation donnée par Danny Coward, la conférence
commence alors très&nbsp;fort.</p>
<p><a href="http://jazoon.com/Portals/0/Content/slides/tu_a5_0930-1030_coward_keynote.pdf">Télécharger les slides de la&nbsp;présentation</a></p>
<h2 id="the-java-ee-6-platform-powerful-productive-extensible">The Java <span class="caps">EE</span> 6 Platform: Powerful, Productive,&nbsp;Extensible</h2>
<p>Cette session présentée par Jérome Docher et Alexis Moussine-Pouchkine
est là pour nous parler des nouveautés de <span class="caps">JEE</span> 6. Une nouvelle notion
de profile, de nouvelles annotations, une api <span class="caps">REST</span>, un système de
<em>packaging</em> simplifié et une version <em>lite</em> des <span class="caps">EJB</span> font notamment
leur&nbsp;apparition.</p>
<h3 id="web-profile">Web&nbsp;Profile</h3>
<p>La spécification de <span class="caps">JEE</span> 6 fait mention d&#8217;un sous-ensemble d&#8217;api<sup id="fnref:4"><a href="#fn:4" rel="footnote">4</a></sup>
disponible dans ce qui est appelé le web profile. Ce profile comme le
démontre la liste des api disponibles fourni le nécessaire pour la
plupart des applications entreprises sans inclure toutes les api
entreprises existantes comme par exemple <span class="caps">EJB</span> 3.1. La notion de
profile est extensible et tout un chacun peut créer son propre&nbsp;profile.</p>
<h3 id="packaging">Packaging</h3>
<p>Il n&#8217;est dorénavant plus impératif de créer un <code>ear</code> dès lors qu&#8217;un
projet contient des <span class="caps">EJB</span>. Tout composant peut se retrouver dans une
archive <code>war</code>. Une notion de <em>web fragment</em> apparaît également
permettant une meilleure intégration des librairies dans les projets
<span class="caps">JEE</span>. A noter également que le fichier <code>web.xml</code> n&#8217;est dorénavant plus
obligatoire grâce notamment à l&#8217;ajout d&#8217;annotations telles que
<code>@WebServlet</code> et <code>@WebFilter</code>. En parlant d&#8217;annotations une autre
nouveauté intéressante: l&#8217;annotation <code>@HandlesTypes</code>qui permet
d&#8217;ajouter depuis le code des mapping &#8212; entre autre &#8212; à chaud dans le&nbsp;container.</p>
<h3 id="jax-rs-11"><span class="caps">JAX</span>-<span class="caps">RS</span>&nbsp;1.1</h3>
<p>L&#8217;implémentation de <em>RESTful web services</em> se fait grâce à la
spécification <span class="caps">JAX</span>-<span class="caps">RS</span> à partir de <span class="caps">JEE</span> 6. Basée sur des annotations mais
proposant également une api disponible depuis le code,
l&#8217;implémentation de référence se nomme Jersey et elle est disponible
conjointement avec&nbsp;glassfish.</p>
<h3 id="ejb"><span class="caps">EJB</span></h3>
<p>Une nouvelle version mineure fait son apparition avec en nouveauté
quelques annotations: <code>@Singleton</code>, <code>@Startup</code> et <code>@Asynchronous</code> mais
également comme évoqué plus haut la possibilité dorénavant de créer un
<span class="caps">EJB</span> au sein même d&#8217;une application web. Plus besoin forcément d&#8217;un
<code>ear</code>.</p>
<p>L&#8217;<code>EJBContainer</code> voit également le jour permettant de lancer une
instance d&#8217;un container <span class="caps">EJB</span> localement. Ce nouveau composant devrait
notamment faciliter grandement les tests d&#8217;<span class="caps">EJB</span> mais aussi permettre
aux applications jse d&#8217;acceuillir des <span class="caps">EJB</span> en leur&nbsp;sein.</p>
<p>La contrainte pour la version <em>lite</em> évoquée plus haut se trouve au
niveau du type d&#8217;<span class="caps">EJB</span> qu&#8217;il est permis de déployer dans cette
version. Uniquement les <span class="caps">EJB</span> de type local sont&nbsp;permis.</p>
<h3 id="bean-validation">Bean&nbsp;Validation</h3>
<p>Cette spécification permet la validation des propriétés au sein des
beans au moyen soit d&#8217;annotations (ex: <code>@NotNull</code>) soit au moyen d&#8217;une
api disponible. A noter également que cette api n&#8217;est pas dépendante
du container, il est possible de l&#8217;utiliser depuis n&#8217;importe quel type&nbsp;d&#8217;applications.</p>
<h3 id="di-dependency-injection"><span class="caps">DI</span> &#8212; <em>Dependency&nbsp;Injection</em></h3>
<p>La notion d&#8217;injection de dépendances est maintenant prise en charge
par le container. Ca va un peu plus loin que ce que fait par exemple
Spring dans le sens que le container peut gérer la portée des
propriétés injectées (ex: session, requête, etc.). L&#8217;annotation
<code>@Resource</code> permet toujours d&#8217;injecter les composants configurés sur
le serveur comme les ressources <span class="caps">JNDI</span> par exemple. <code>@Inject</code> fait son
arrivée en proposant l&#8217;injection <em>type safe</em>. Autre arrivée: les
<em>qualifier</em> qui sont des annotations définies par le développeur
lui-même dans le but de spécifier quel type d&#8217;instance injecter. Les
slides prennent comme exemple un objet <code>User</code> devant être injecté dans
un <code>CheckoutHandler</code> et le <em>qualifier</em> <code>LoggedIn</code> permet de s&#8217;assurer
que l&#8217;instance injectée sera l&#8217;utilisateur identifié à l&#8217;application
dans ce&nbsp;contexte-ci.</p>
<p>Une autre possibilité de gérer les dépendances avec <span class="caps">JEE</span> 6 c&#8217;est avec
les événements qui font leur arrivée avec l&#8217;annotation <code>@Observe</code>.</p>
<h3 id="et-encore">Et&nbsp;encore&#8230;</h3>
<p>Des nouveautés aussi côté <span class="caps">JSF</span> avec support simplifié d&#8217;ajax, des
événements systèmes mais aussi côté <span class="caps">JPA</span> avec l&#8217;arrivée d&#8217;une api
<em>Criteria</em> permettant la création de requête <em>type-safe</em> et plus
uniquement une suite de <code>String</code> source d&#8217;erreur à&nbsp;l&#8217;exécution.</p>
<p>La présentation se termine avec une démo utilisant glassfish
l&#8217;implémentation de référence de <span class="caps">JEE</span> 6. Petit détail intéressant
révélé durant la démo: la possibilité de redémarer une application
tout en gardant la session dans le même état. Pour plus de détail
n&#8217;hésitez pas à consulter les slides ou bientôt la session directement
puisque cette session s&#8217;est déroulée dans la salle 5 qui était&nbsp;filmée.</p>
<p><a href="http://jazoon.com/Portals/0/Content/slides/tu_a5_1100-1150_dochez.pdf">Télécharger les slides de la&nbsp;présentation</a></p>
<h2 id="cdi-seam-resteasy-you-havent-seen-rest-yet"><span class="caps">CDI</span>, Seam <span class="amp">&amp;</span> RESTEasy: You haven&#8217;t seen <span class="caps">REST</span>&nbsp;yet</h2>
<p>Dan Allen reprend ici les principes de <span class="caps">REST</span> tout d&#8217;abord en expliquant
en trois points les aspects essentiels d&#8217;une architecture centrée sur
les&nbsp;ressources:</p>
<ol>
<li>Uniforme: architecturer les <span class="caps">URL</span> pour adresser les besoins, les
méthodes adressent les opérations (<span class="caps">GET</span>, <span class="caps">PUT</span>, <span class="caps">DELETE</span>,&nbsp;<span class="caps">POST</span>)</li>
<li>Orienté&nbsp;représentation</li>
<li>Communication sans état: plus <em>scalable</em> et plus cohérent avec le
protocol&nbsp;<span class="caps">HTTP</span></li>
</ol>
<p>S&#8217;ensuit quelques extraits de code avec explications utilisant <span class="caps">JAX</span>-<span class="caps">RS</span>
comme base de référence. Il termine par une démo de RESTEasy qui se
trouve être l&#8217;implémentation de <span class="caps">JAX</span>-<span class="caps">RS</span> par JBoss. Cette implémentation
propose entre autre l&#8217;avantage d&#8217;avoir un serveur embarqué pour les
tests et une forte intégration au framework&nbsp;Seam.</p>
<p>Dan Allen résume finalement en citant les principaux bénéfices de&nbsp;<span class="caps">REST</span>:</p>
<ol>
<li>Respect du protocole&nbsp;<span class="caps">HTTP</span></li>
<li>Simplicité</li>
<li>Exposition des données au travers d&#8217;une <span class="caps">API</span>&nbsp;standardisée</li>
</ol>
<p><a href="http://jazoon.com/Portals/0/Content/slides/tu_a3_1200-1250_allen.pdf">Télécharger la&nbsp;présentation</a></p>
<h2 id="objects-of-value">Objects of&nbsp;Value</h2>
<p>Après un bon lunch je continue avec cette session présentée par Kevlin
Henney. Si vous avez l&#8217;occasion de le voir à une conférence ça vaut le
coup. C&#8217;est vraiment un excellent&nbsp;présentateur.</p>
<p>Il nous a parlé ici un peu philosophiquement de l&#8217;importance que nos
objets aient une identité clairement définie. Trop souvent les
<code>String</code> font office de&nbsp;fourre-tout.</p>
<p><a href="http://jazoon.com/Portals/0/Content/slides/tu_a5_1400-1450_henney.pdf">Télécharger la&nbsp;présentation</a></p>
<h2 id="server-side-osgi-with-apache-sling">Server-side OSGi with Apache&nbsp;Sling</h2>
<p>Le présentateur était malheureusement pas assez à l&#8217;aise pour rendre
le sujet intéressant. Soporifique à souhait, la pause café s&#8217;est faite&nbsp;désirer&#8230;</p>
<p>Le principe de Sling est de <em>mapper</em> une <span class="caps">URL</span> à une ressource et d&#8217;y
apposer un script de traitement. Les ressources en question sont
hierarchiquement disposées dans un <em>repository</em> <span class="caps">JCR</span>. Tout ça fournit
une base solide à l&#8217;implémentation d&#8217;un <span class="caps">CMS</span> personalisable, d&#8217;ailleurs
utilisé par Day Software au travers de leur solution commerciale&nbsp;<span class="caps">CQ</span>.</p>
<p><a href="http://jazoon.com/Portals/0/Content/slides/tu_a7_1500-1550_meschberger.pdf">Télécharger la&nbsp;présentation</a></p>
<h2 id="servlet-30-asynchronous-extensibility-ease-of-development">Servlet 3.0 &#8212; Asynchronous, extensibility, ease of&nbsp;development</h2>
<p>La version 3 de l&#8217;api servlet &#8212; intégrée à <span class="caps">JEE</span> 6 &#8212; est vantée par
Rajiv Mordani dans cette session suivie par une démo par Arun&nbsp;Gupta.</p>
<p>Extensibilité et asynchronicité sont donc les maîtres mots de cette
nouvelle mouture. Il est dorénavant possible &#8212; comme vu plus haut &#8212;
d&#8217;ajouter dynamiquement depuis le code de nouveau composants au
container de servlet. Pour parler d&#8217;extensibilité la notion de
fragment fait aussi son arrivée. Cela devrait faciliter la vie du
développeur notamment lors de l&#8217;utilisation de frameworks tiers. En
effet ces frameworks pourront se configurer d&#8217;eux-mêmes au sein de
l&#8217;application, plus besoin de définir le nécessaire pour configurer un
framework au sein du fichier <code>web.xml</code>.</p>
<p>En plus de ces points forts, l&#8217;arrivée de plusieurs annotations
devraient également faciliter notre vie&#8230; Voir la présentation The
Java <span class="caps">EE</span> 6 Platform: Powerful, Productive, Extensible pour plus&nbsp;d&#8217;info.</p>
<p>A noter finalement la possibilité de se passer complètement du fichier
<code>web.xml</code> à partir de cette nouvelle&nbsp;version.</p>
<p><a href="http://jazoon.com/Portals/0/Content/slides/tu_a3_1630-1720_mordani.pdf">Télécharger la&nbsp;présentation</a></p>
<h2 id="97-things-every-programmer-should-know">97 Things Every Programmer Should&nbsp;Know</h2>
<p>A nouveau une présentation par Kevlin Henney et à nouveau un vrai
régal. Pour cette dernière session de la journée on est tous
rassemblée dans la salle principale. Et plus d&#8217;une fois les rires ont
émergé de l&#8217;assistance, Kevlin est vraiment un bon&nbsp;orateur&#8230;</p>
<p>Cette session-ci présentait son dernier livre portant le même nom que
la session. Ce livre est une compilation d&#8217;avis d&#8217;une ribambelle
d&#8217;experts sollicités par&nbsp;Kevlin.</p>
<p>Comme conseils on a pu retrouver par&nbsp;exemple:</p>
<ul>
<li>
<p>Apprender à estimer: on négocie les objectifs, mais pas les&nbsp;estimations</p>
</li>
<li>
<p>Commenter uniquement ce que le code ne dit pas: un bon code nécessitera moins de commentaire qu&#8217;un mauvais&nbsp;code.</p>
</li>
<li>
<p>Ecrire les tests pour être lus par des humains: de bon tests font acte de&nbsp;documentation</p>
</li>
<li>
<p>Préférer des objets ayant une signification métier plutôt que d&#8217;utiliser des types primitifs. J&#8217;ai particulièrement aimé l&#8217;idée d&#8217;utiliser un <em>tag cloud</em> sur le code d&#8217;un projet. Après génération de ce <em>tag cloud</em>, si on a une idée de quoi on parle c&#8217;est mieux&#8230; L&#8217;idée est initialement présentée sur <a href="http://fragmental.tw/2009/04/29/tag-clouds-see-how-noisy-your-code-is/">cet article</a>.</p>
</li>
</ul>
<p><a href="http://jazoon.com/Portals/0/Content/slides/tu_a5_1740-1830_henney_keynote.pdf">Télécharger la&nbsp;présentation</a></p>
<h1 id="le-mercredi">Le&nbsp;mercredi</h1>
<p>Que ce soit pour ce deuxième jour ou le troisième et dernier je serai
certainement moins prolixe. Moins enthousiaste, moins de sessions de&nbsp;qualité&#8230;</p>
<h2 id="total-cost-of-ownership-and-return-on-investment">Total cost of ownership and return on&nbsp;investment</h2>
<p>Ken Schwaber, co-créateur de la méthodologie Scrum, est l&#8217;orateur de
cette première session du matin. L&#8217;idée est de pointer du doigt les
méthodes traditionnelles de développement ne prenant pas forcément en
compte les coûts à long terme d&#8217;un projet&nbsp;logiciel.</p>
<p>Cette session aura été la toute première à nous faire participer
puisque durant celle-ci, l&#8217;orateur nous demande d&#8217;échanger entre
assistants notre conception de ce qu&#8217;est &#8220;<em>done</em>&#8220;. Autrement dit que
doit contenir un projet terminé. Les tests d&#8217;intégrations doivent en
faire partie? Les tests de performance? De&nbsp;charge?</p>
<p>Si la notion de <em>done</em> n&#8217;est pas complète toute une série de travail à
faire est reporté en fin de projet ou du moins à plus tard. Si l&#8217;on
reporte trop de choses à plus tard &#8212; dû à une mauvaise notion de ce
qui est <em>done</em> &#8212; forcément qu&#8217;un gros boulot restera à faire. Cela
ressort bien de la slide&nbsp;12:</p>
<blockquote>
<p>Stabilization is when you do all the &#8220;undone&#8221;&nbsp;work</p>
</blockquote>
<p>La suite de la session n&#8217;est que publicité pour le nouveau cours scrum
disponible. Si cela vous intéresse rendez-vous sur le site officiel: <a href="http://www.scrum.org/">http://www.scrum.org/</a></p>
<p><a href="http://jazoon.com/Portals/0/Content/slides/we_a5_0900-1000_schwaber_keynote.pdf">Télécharger la&nbsp;présentation</a></p>
<h2 id="iphoneipad-development-from-the-java-perspective">iPhone/iPad development from the Java&nbsp;perspective</h2>
<p>Carrément impatient d&#8217;assister à cette présentation, je ne suis
visiblement pas le seul vu l&#8217;assistance en nombre venue pour écouter
Ognen Ivanovski prodiguer ses conseils sur le développement&nbsp;iPhone/iPad.</p>
<h3 id="lexperience-utilisateur">L&#8217;expérience&nbsp;utilisateur</h3>
<p>Premier élément évoqué: le hardware. Développer sur mobile signifie
davantage de contraintes à ce niveau-là par rapport à du développement
<span class="caps">JEE</span> sur de gros serveurs. Petit récapitulatif provenant de la&nbsp;présentation:</p>
<table>
<tr>
   <td>iPhone</td><td><span class="caps">ARM11</span> ~<span class="caps">400MHZ</span></td>
</tr>
<tr>   
   <td>iPhone 3G</td><td><span class="caps">128MB</span> <span class="caps">RAM</span> (~<span class="caps">50MB</span> for an application)</td>
</tr>
<tr>   
   <td>iPod Touch</td><td>Hardware Graphics Accelerator</td>
</tr>
<tr>   
   <td>iPod Touch 2nd generation</td><td>slightly faster</td>
</tr>
<tr>   
   <td>iPhone <span class="caps">3GS</span></td><td><span class="caps">ARM</span> Cortex V8 ~600MHz / <span class="caps">256MB</span> <span class="caps">RAM</span></td>
</tr>
<tr>   
   <td>iPad</td><td>Apple A4 SoC (<span class="caps">ARM</span>) ~1GHz / <span class="caps">256MB</span> <span class="caps">RAM</span></td>               
</tr>
</table>

<p>Si les contraintes au niveau matériel sont bien réelles il faudra
également reconsidérer nos préconceptions par rapport à l&#8217;utilisation
de l&#8217;application. Une application sur iPhone qui demande beaucoup
d&#8217;interactions avec l&#8217;utilisateur pour atteindre un résultat n&#8217;est pas
une bonne application. L&#8217;iPhone s&#8217;utilise dans le bus, en marchant,
dans l&#8217;ascenseur, le canapé, dans quasiment toutes situations si ce
n&#8217;est à un bureau, tout l&#8217;inverse des applications dont on a
l&#8217;habitude de développer. Il faudra par conséquent bien réfléchir
l&#8217;interaction utilisateur, qu&#8217;elle se fasse le plus simplement
possible et ce avec le minimum d&#8217;information entrée par
l&#8217;utilisateur. Lorsqu&#8217;il se doit d&#8217;interagir, il faut aussi penser à
afficher des contrôles suffisamment grands, l&#8217;utilisateur entre les
données avec ses doigts et non plus avec une souris&#8230; Autre
préconception à s&#8217;enlever de la&nbsp;tête.</p>
<p>Une bonne utilisation du <em>multi-touch</em> et des animations permettront
également de rendre l&#8217;application plus <em>responsive</em> et de faire
comprendre à l&#8217;utilisateur où il en est, ce qu&#8217;il peut faire et
comment. Même si l&#8217;on peut y être un peu habitué au sein des
applications web au travers par exemple des progrès réalisés au sein
des frameworks javascript, l&#8217;iPhone pousse l&#8217;expérience encore plus&nbsp;loin.</p>
<h3 id="lecosysteme">L&#8217;écosystème</h3>
<p>L&#8217;image du <em>Walled Garden</em> est bien connue lorsqu&#8217;on parle d&#8217;Apple et
on y revient automatiquement dès lors que l&#8217;orateur commence à nous
parler de l&#8217;écosystème d&#8217;un développement pour iPhone. Des licences
qu&#8217;il faut garder à l&#8217;oeil du fait de leurs variations incessantes, un
risque de rejet de son application dès le départ ou encore sur une
évolution ultérieure, tels sont quelques points à risque lors qu&#8217;on
attaque ce marché. Une des dernières évolutions de licence en dates
ayant fait le plus de bruit a été l&#8217;interdiction pur et simple
d&#8217;utiliser des outils de <em>cross-compilation</em> permettant de développer
une application par exemple sous Flash pour au final fonctionner en
Objective-C le langage d&#8217;Apple. Par rapport au processus de validation
l&#8217;orateur en faisant part de son expérience nous explique que
l&#8217;approbation est d&#8217;habitude prévisible. A noter tout de même que ce
processus de validation à un côté très positif: l&#8217;utilisateur donne
une grande confiance aux applications présentes dans&nbsp;l&#8217;AppStore.</p>
<h3 id="le-cote-hype">Le côté <em>hype</em></h3>
<p>Pouvoir proposer ses solutions au travers de l&#8217;AppStore ajoute un côté
marketing certain aujourd&#8217;hui avec tout l&#8217;effet de mode auprès du
grand public que l&#8217;iPhone a pu engendrer. Dès lors si le produit est
bon tout ça peut devenir une mine d&#8217;or, par contre un solution bancale
risque de faire mal à l&#8217;image de&nbsp;marque.</p>
<h3 id="a-se-rememorer">A se&nbsp;remémorer</h3>
<p>Une bonne application iPhone devra répondre à un besoin typique
d&#8217;utilisateur <strong>mobile</strong>. Typiquement vérifier les horaires de train
fera une très bonne application du moment qu&#8217;elle est pensée de
manière ergonomique (notion de <em>minimum input/maximum output</em>). L&#8217;idée
sera donc d&#8217;identifier ces situations où une utilisation de manière
mobile d&#8217;une application pourrait combler un&nbsp;besoin.</p>
<p>L&#8217;idée vraiment ressortie durant cette session c&#8217;est de se rappeler
que sur un appareil de ce type les contraintes mémoires sont à prendre
bien plus au sérieux par rapport à un développement sur serveur ou
machine de bureau. Autre point important, réfléchir à l&#8217;utilisation
mobile faite par l&#8217;utilisateur. L&#8217;utilisateur n&#8217;est pas assis devant
son écran. Il ne faut pas manquer également la phase de test réelle
sur l&#8217;appareil directement. Les tests sur émulateur pouvant
effectivement être parfois&nbsp;trompeurs&#8230;</p>
<h3 id="et-lipad">Et&nbsp;l&#8217;iPad?</h3>
<p>Vu le titre de la session je m&#8217;attendais à un peu plus de contenu
concernant l&#8217;iPad mais c&#8217;est vrai que début juin il était vraiment à
peine sorti en Suisse. Malgré cela l&#8217;orateur en a tout de même parlé
succinctement en mentionnant un projet qu&#8217;ils ont pu mener avant même
que l&#8217;iPad soit sorti. Pour s&#8217;en sortir ils ont sorti des maquettes
1:1 par rapport à la résolution de l&#8217;appareil. On en saura pas&nbsp;plus.</p>
<h3 id="les-outils">Les&nbsp;outils</h3>
<p>Sur la fin de la session, les outils permettant le développement
d&#8217;applications iPhone nous sont succintements présentés ainsi qu&#8217;un
petit aperçu de ce à quoi ressemble Objective&nbsp;C.</p>
<p><a href="http://jazoon.com/Portals/0/Content/slides/we_a3_1030-1130_ivanovski.pdf">Télécharger la&nbsp;présentation</a></p>
<h2 id="whats-new-in-hibernate-a-jpa-2-perspective">What&#8217;s new in Hibernate: a <span class="caps">JPA</span> 2&nbsp;perspective</h2>
<p>Emmanuel Bernard prend place dans la salle numéro 5 pour nous parler
des nouveautés sur Hibernate. Session intéressante par l&#8217;initiateur du
podcast des Cast Codeurs j&#8217;y ai appris une chose ou deux vraiment&nbsp;intéressantes.</p>
<h3 id="envers">Envers</h3>
<p>La première chose c&#8217;est le projet
<a href="http://www.jboss.org/envers">envers</a>. Ce projet a pour but de fournir
une historisation automatique des entités gérées par Hibernate. Pour
se faire, Hibernate crée un nouveau schéma en parallèle complètement
géré par Hibernate et permettant de stocker toutes les différentes
versions de chaque entité. Le produit permettra de remonter dans le
temps sur ses entités. Bigrement&nbsp;intéressant!</p>
<h3 id="recherche">Recherche</h3>
<p>Deuxième point super intéressant, la possibilité dorénavant de faire
une recherche <em>fulltext</em> sur le schéma d&#8217;entités. Cette fonctionnalité
s&#8217;appuie sur le projet Lucene d&#8217;Apache. L&#8217;avantage étant que le
développeur n&#8217;a pas besoin de configurer ce dernier, Hibernate prend
tout en charge au travers du sous-projet Hibernate&nbsp;Search.</p>
<h3 id="et-aussi">Et&nbsp;aussi</h3>
<p><em>Clustering</em> amélioré, de nouvelles possibilités de mapping,
 compatibilité <span class="caps">JPA</span> 2.0, la validation, tels sont d&#8217;autres sujets
 abordés durant cette&nbsp;présentation.</p>
<p><a href="http://jazoon.com/Portals/0/Content/slides/we_a5_1130-1220_bernard.pdf">Télécharger la&nbsp;présentation</a></p>
<h2 id="java-persistence-criteria-api">Java persistence criteria&nbsp;<span class="caps">API</span></h2>
<p>Après le repas, très dur d&#8217;assister à cette présentation pour faire
poli&#8230;&nbsp;Soporiphique.</p>
<p>Je n&#8217;ai pas grand chose à dire sur cette présentation puisque
l&#8217;oratrice n&#8217;a pas apporté de réelle plus-value par rapport aux slides
de la&nbsp;présentation.</p>
<p>En résumé la Criteria <span class="caps">API</span> permet au développeur de créer une requête
typée. Autrement dit pas de type <code>String</code> comme le sont les requêtes
<span class="caps">JPQL</span>. L&#8217;avantage de cette solution c&#8217;est qu&#8217;une erreur sera
directement découverte à la compilation et non plus uniquement au
moment de&nbsp;l&#8217;exécution.</p>
<p>Pour plus de détails, jetez un oeil aux&nbsp;slides.</p>
<p><a href="http://jazoon.com/Portals/0/Content/slides/we_a3_1330-1420_demichiel.pdf">Télécharger la&nbsp;présentation</a></p>
<h2 id="patterns-in-practices-in-hibernate">Patterns in practices in&nbsp;Hibernate</h2>
<p>Dans ma lancée j&#8217;assiste à nouveau à une présentation plutôt
désagréable. La session a été inlassablement obstruée par des
&#8220;eeeeee&#8221;, &#8220;aaaaaaa&#8221;, &#8220;meeeeeuuuuuuu&#8221;, typiquement le genre de choses
qui me fait péter un&nbsp;plomb!</p>
<p>Bref du coup j&#8217;ai eu pas mal de peine à suivre. Cette session avait
pour but de démontrer quelques pièges à éviter lors de l&#8217;utilisation&nbsp;d&#8217;Hibernate.</p>
<p>Je ne peux malheureusement rien ajouter de plus par rapport à ce que
disent directement les&nbsp;slides.</p>
<p><a href="http://jazoon.com/Portals/0/Content/slides/we_a3_1430-1520_wegrzynowicz.pdf">Télécharger la&nbsp;présentation</a></p>
<h2 id="how-java-powers-large-online-retail-sites">How Java powers large online retail&nbsp;sites</h2>
<p>Retour d&#8217;expérience intéressant du <span class="caps">CEO</span> de <span class="caps">ATG</span> gros fournisseur de
solutions e-commerce. L&#8217;orateur nous explique son expérience avec Java
qui a été choisi dès le début pour leur solution. On parle ici de gros
système e-commerce traitant (cf slides) plus d&#8217;un million de visiteurs
par jour et des dizaines de milliers de commandes par&nbsp;jour.</p>
<p>Que ce soit la partie <em>content management</em>, la partie <em>analytics</em>, les
interfaces de paiement, l&#8217;intégration <em>back-office</em> avec la gestion du
stock, des commandes d&#8217;approvisionnement etc. ou encore les différents
systèmes service clients toute partie fait bon sujet à implémentation
avec Java selon&nbsp;l&#8217;orateur.</p>
<p>Durant la session, les composantes mobiles et sociales ont été
identifiées également comme tendances de marchés. Oui, du social même
dans le e-commerce, jetez un oeil par exemple à
<a href="http://tor.com/">tor.com</a> pour vous en convaincre. Ou encore ce
système qui permet aux commerçants de proposer directement sur la
vitrine de leur boutique un barcode qui lorsqu&#8217;il est scanné par un
mobile type Android ou iPhone redirigera directement sur la page
google personnalisée de la boutique où le client pourra critiquer les
produits et partager avec la toile entière ses impressions et bons
plans&#8230; <em>The Web is watching&nbsp;you!</em></p>
<p>Bref, intéressante session avec ces retours d&#8217;expérience et cette
vérité toujours évidente que Java est bien un langage, une plateforme
même qui tient un bon&nbsp;avenir.</p>
<h3 id="quelques-conseils-darchitecture">Quelques conseils&nbsp;d&#8217;architecture</h3>
<p>Durant sa présentation on sent le besoin de définir une bonne
architecture pour tenir la route sur ce genre de produit si l&#8217;on veut
supporter la&nbsp;masse.</p>
<p>Sur de tels système, il conseil d&#8217;avoir des experts plus ou moins par
domaine ou par composant (ex. catalogue, profiles utilisateurs, etc.)
et de fournir des composants réutilisables. Rien de révolutionnaire
mais certainement d&#8217;autant plus important sur un produit devant
supporter autant de&nbsp;charge.</p>
<p>Autre point important: garder un modèle de données propre et simple
afin de permettre des performances acceptable et une bonne gestion et
une possibilité facilitée de&nbsp;grandir.</p>
<p>Il a également donné plusieurs conseils d&#8217;architecture physique en
parlant notamment du sujet bouillant u moment, le
<em>cloud</em>. Référez-vous aux slides pour plus d&#8217;infos sur le&nbsp;sujet.</p>
<p><a href="http://jazoon.com/Portals/0/Content/slides/we_a5_1600-1650_brazile.pdf">Télécharger la&nbsp;présentation</a></p>
<h2 id="la-deuxieme-journee-se-termine">La deuxième journée se&nbsp;termine&#8230;</h2>
<p>Avec les présentation <em>rookies</em> mettant en scène des jeunes de moins
de 26 ans qui ont l&#8217;opportunité d&#8217;appréhender pour la première fois la
scène. Une grande chance d&#8217;autant plus qu&#8217;ils ont pu profiter des
critiques d&#8217;un jury de professionnels<sup id="fnref:5"><a href="#fn:5" rel="footnote">5</a></sup>. Le contenu a été
intéressant et j&#8217;ai impressionné par la qualité de leur prestance. Ca
valait bien certaines sessions&nbsp;officielles.</p>
<ul>
<li>1ère présentation rookie: <a href="http://jazoon.com/Portals/0/Content/slides/we_a5_1710-1730_hofmann.pdf">OpenSocial done right - Integrating OpenSocial for 16 million&nbsp;users</a></li>
<li>2ème présentation : <a href="http://jazoon.com/Portals/0/Content/slides/we_a5_1740-1800_Ion.pdf">End-to-End Security: Accounting for the User Factor - A Real Case of Application&nbsp;Development</a></li>
<li>3ème présentation (le gagnant): <a href="http://jazoon.com/Portals/0/Content/slides/we_a5_1810-1830_muskalla.pdf">Analyze Heapdumps in a Web Browser - Single Sourcing in&nbsp;Practice</a></li>
</ul>
<h1 id="le-jeudi">Le&nbsp;jeudi</h1>
<h2 id="the-gaia-satellite-and-data-processing">The Gaia satellite and data&nbsp;processing</h2>
<p>Présentation vraiment dur à suivre au sortir du lit. William O&#8217;Mullane
a présenté ici le projet de de l&#8217;European Space Astronomy Centre avec
un zoom sur la partie développement bien&nbsp;sûr.</p>
<p>Java est aussi utilisé dans le domaine de la recherche spatiale et
cette session en a donné un joli&nbsp;aperçu.</p>
<p>Je vous suggère de voir les slides si le sujet vous intéresse ou bien
d&#8217;attendre la publication de la vidéo sur
<a href="http://parleys.com">parleys.com</a></p>
<p><a href="http://jazoon.com/Portals/0/Content/slides/th_a5_0900-1000_o&apos;mullane_keynote.pdf">Télécharger la&nbsp;présentation</a></p>
<h2 id="essentials-of-testing-the-tools-you-need-to-know">Essentials of testing: the tools you need to&nbsp;know</h2>
<p>Beaucoup de monde pour cette session, à tel point qu&#8217;il n&#8217;y avait pas
assez de sièges&nbsp;disponibles.</p>
<p>Cette session avait pour objectif d&#8217;offrir un retour d&#8217;expérience
partagé par deux expert de gestion qualité à propos du challenge de
mettre en place et de garder à jour un ensemble d&#8217;outils permettant
d&#8217;améliorer la qualité d&#8217;un projet de&nbsp;développement.</p>
<p>Une série d&#8217;outils étant à disposition et ce pour chaque couche d&#8217;un
logiciel il peut devenir difficile de faire son choix et ensuite de
les intégrer tous ensemble. Ces employés d&#8217;AdNovum ont donc passé
cette session à présenter tout d&#8217;abord la liste des outils disponibles
par couche logiciel et ensuite ce qu&#8217;il est possible de faire avec ces
outils notamment au travers de quelques&nbsp;démos.</p>
<p>Premier conseil d&#8217;importance: la notion de pyramide que l&#8217;on retrouve
en slide 11. Cette pyramide encourage une large part de tests
unitaires. Ces tests succins et dirigés clairement sur une fonction
précise doivent être rapidement exécutables et devraient faire partie
du livrable de l&#8217;application. Vous vous rappelez de la notion du
<em>done</em> défendue dans la session sur Scrum? Les tests unitaires doivent
être inclus à part égale avec le code applicatif. Concernant les tests
d&#8217;intégration, fonctionnels et d&#8217;interface graphique bien qu&#8217;ils
soient aussi très importants leur lourdeur demandera davantage de
temps à développer et à exécuter un équilibre sera donc de mise pour
mettre en oeuvre une batterie de tests couvrant tous les cas et
donnant le plus de garantie possibles au client que tout est sous&nbsp;contrôle.</p>
<p>La slide numéro 13 vaut également le détour offrant une petite vue
d&#8217;ensemble de la solution qu&#8217;ils ont choisi avec la possibilité de
voir quelles couches sont testées avec quels outils. Au delà de ça je
trouve vraiment bien que les notions de qualités et plus
particulièrement de tests fasse l&#8217;objet de sujet de conférences. Bien
trop souvent dans les projets, parler de tests applicatifs rime
uniquement avec tests unitaires. Aujourd&#8217;hui il est possible de
pousser bien plus loin et la qualité de nos projets augmentera j&#8217;en
suis certain si l&#8217;on fait l&#8217;effort de démocratiser ce genre de&nbsp;connaissances.</p>
<p>D&#8217;un point de vue technique les orateurs ont pu dire que HtmlUnit est
bien plus rapide que Selenium, à tester, je ne connaissais pas ce&nbsp;framework&#8230;</p>
<p>D&#8217;autres notions intéressantes ont été abordées, je vous laisse
visionner les slides pour plus&nbsp;d&#8217;informations.</p>
<p><a href="http://jazoon.com/Portals/0/Content/slides/th_a6_1030-1120_polasek.pdf">Télécharger la&nbsp;présentation</a></p>
<h2 id="rapid-application-development-with-apache-wicket">Rapid application development with Apache&nbsp;Wicket</h2>
<p>Wicket est un framework né en 2005 proposant de faire du développement
web un peu à la manière d&#8217;un développement Swing. Ce projet profite
d&#8217;une communauté très active et d&#8217;une certaine simplicité
rafraîchissante. Rien qu&#8217;à voir comment on commence un projet wicket:
un jar wicket et slf4j pour le logging et c&#8217;est parti! Maven propose
d&#8217;ailleurs un archetype de démarrage, tout semble fait pour du simple
et&nbsp;efficace.</p>
<p>L&#8217;idée donc derrière ce framework est de proposer des composants
réutilisables et de les insérer dans des pages html grâce à des
attributs spécifiques au éléments formant la page mais sans jamais
utiliser de langages particulier. On s&#8217;appuie uniquement sur des
attributs html. Pas de langage <span class="caps">EL</span> ou autre, rien. Cela peut être un
sacré atout dès lors que l&#8217;on veuille travailler avec des webdesigners
ne connaissant justement pas toutes les particularités du
développement java et en particulier le langage <span class="caps">EL</span> ou autre scriplets&nbsp;(beurk).</p>
<p>Après avoir défendu ces quelques avantages et d&#8217;autres encore que j&#8217;ai
certainement oublié de noter, plusieurs démo s&#8217;en sont suivies et je
dois dire que c&#8217;est plutôt séduisant comme&nbsp;idée&#8230;</p>
<p><a href="http://jazoon.com/Portals/0/Content/slides/th_a3_1130-1220_lombardi.pdf">Télécharger la&nbsp;présentation</a></p>
<h2 id="exploring-html5-with-javaserver-faces-20">Exploring <span class="caps">HTML5</span> with JavaServer Faces&nbsp;2.0</h2>
<p>Après un nouveau bon lunch je retrouve une session sur <span class="caps">HTML5</span> et&nbsp;<span class="caps">JSF2</span>.</p>
<p>Connaissant un peu les nouveautés de <span class="caps">HTML5</span>, enfin les grandes
nouveautés en tout cas avec l&#8217;arrivée des tags <code>audio</code>, <code>video</code> et
d&#8217;autres plus sémantiques comme <code>section</code> ou encore <code>article</code> le début
de session ne m&#8217;a rien appris à ce sujet. Je fondais alors mes espoirs
sur ce qu&#8217;allais nous apprendre l&#8217;orateur sur <span class="caps">JSF2</span> à ce&nbsp;niveau-là.</p>
<p>Malheureusement j&#8217;ai été un peu déçu puisqu&#8217;il a majoritairement parlé
de ce qui était possible de faire avec <span class="caps">HTML5</span> et ensuite s&#8217;est
visiblement aperçu qu&#8217;il avait pris trop de temps à le faire pour
finalement parler qu&#8217;en vitesse de l&#8217;intégration à <span class="caps">JSF2</span>. Ce qui au
final semble donc être simplement des composants composites utilisant
les tags <span class="caps">HTML5</span> derrière, rien de bien passionnant&nbsp;donc.</p>
<p><a href="http://jazoon.com/Portals/0/Content/slides/th_a7_1330-1420_kitain.pdf">Télécharger la&nbsp;présentation</a></p>
<h2 id="search-find-classify-a-short-tour-through-apache-solr">Search, Find, Classify - A short tour through Apache&nbsp;Solr</h2>
<p>Un orateur tout simplement pitoyable, j&#8217;ai quitté la session tellement
c&#8217;était agaçant à écouté, à nouveau des &#8220;mmmmmm&#8221;, &#8220;aaaaaa&#8221;. Pas bon
pour moi en plus je commence à fatiguer après toutes ces sessions à me
concentrer à comprendre ce qu&#8217;on dit en anglais&#8230;. Je pars assister à
la session sur les hautes performances en accès aux bases de données
relationnelles avec comme contenu la présentation de la librairie
cliente de MySQL ClusterJ. Plusieurs benchmarks et quelques chiffres
intéressants, cette librairie n&#8217;utilise pas <span class="caps">JDBC</span> mais optimise de son
côté les accès aux bases donc MySQL. Intéressant, si le sujet vous
intéresse n&#8217;hésitez pas à consulter les&nbsp;slides.</p>
<p><a href="http://jazoon.com/Portals/0/Content/slides/th_a5_1430-1520_maurmann.pdf">Télécharger la présentation</a>
<a href="http://jazoon.com/Portals/0/Content/slides/th_a6_1430-1520_russell.pdf">Télécharger la présentation sur les performances d&#8217;accès aux bases de données&nbsp;relationnelles</a></p>
<h2 id="real-java-ee-testing-with-arquillian">Real Java <span class="caps">EE</span> testing with&nbsp;Arquillian</h2>
<p>Cette dernière session à laquelle j&#8217;assiste est une session programmée
sur 20 minutes faite quasiment uniquement de&nbsp;démos.</p>
<p>En deux mots, Arquillian est un framework développé au sein de JBoss permettant d&#8217;effectuer ses tests au sein d&#8217;un container distant ou embarqué. Le projet en est à ses débuts, les démos ont démontré en tout cas que cela fonctionne mais ça me fait quand même furieusement rappeler le projet <a href="http://cargo.codehaus.org/Maven2+plugin">cargo</a>, je me&nbsp;trompe?</p>
<p><a href="http://jazoon.com/Portals/0/Content/slides/th_a7_1600-1620_knutsen.pdf">Télécharger la&nbsp;présentation</a></p>
<h1 id="mon-retour-final">Mon retour&nbsp;final</h1>
<p>Je finis ces trois jours de session fatigué. Fatigué par le fait que
je dois encore trop me concentrer pour comprendre ce que disent les
orateurs. C&#8217;est pas encore assez fluide dans mon esprit pour pouvoir
le faire plus librement, avec moins&nbsp;d&#8217;énergie.</p>
<p>Je rentre donc un peu fatigué mais au-delà de ça j&#8217;ai passé 3 jours
exceptionnels, c&#8217;était ma toute première conférence de ce genre et
j&#8217;ai été servi en contenu et en rencontres. Entre les lunchs et apéros
offerts par Jazoon, j&#8217;ai pu rencontrer plusieurs développeurs sympas
partageants la même passion. Je peux assurément encore faire des
efforts pour dépasser ma timidité et aller encore plus à la rencontre
des autres mais j&#8217;ai tout de même fait la connaissance de plusieurs
gars bien&nbsp;sympas!</p>
<p>Autre point super positif, l&#8217;organisation. Lunchs, apéros, sessions
intéressantes, wifi (même si un peu récalcitrant le 1er jour) tout
était quasiment parfait. Tout ça dans un complexe de cinémas, c&#8217;est
génial! J&#8217;ai pu découvrir un peu plus la ville de Zürich et ça vaut le
coup de visiter, c&#8217;est aussi ça qui n&#8217;a peut-être pas arrangé le coup
de fatigue du jeudi&nbsp;:)</p>
<p>Bref je suis vraiment super content d&#8217;avoir pu profiter de cette
opportunité de rencontres et de veille technologique parce que c&#8217;est
vrai ce genre de conférence permet merveilleusement de voir ce qu&#8217;il
se fait dans beaucoup de domaines, c&#8217;est très enrichissant et je ne
peux qu&#8217;encourager tout à chacun à tenter&nbsp;l&#8217;expérience.</p>
]]></description>
         <pubDate>11 Jul 10 00:00 GMT</pubDate>
         <author>jacqueminv@gmail.com (Valentin Jacquemin)</author>
      </item>    
      <item>
         <title>SICP en version epub</title>
         <link>http://www.poxd.org/blog/sicp-en-version-epub.html</link>
         <guid>http://www.poxd.org/blog/sicp-en-version-epub.html</guid>
         <description><![CDATA[

<p>Après avoir terminé la lecture de la biographie de Richard Stallman
j&#8217;ai été un peu plus séduit par le format epub. Le confort
d&#8217;utilisation est supérieur à ce que je pensais et plusieurs
fonctionalités offertes par un <em>e-reader</em> sont fort
sympathiques&#8230; J&#8217;y reviendrai lors d&#8217;une prochaine critique de la bio&nbsp;susmentionnée.</p>
<p>Pour l&#8217;instant le sujet de ce billet, c&#8217;est la publication de <a href="http://mitpress.mit.edu/sicp/"><span class="caps">SICP</span></a> en
version epub<sup id="fnref:1"><a href="#fn:1" rel="footnote">1</a></sup>. A ma surprise elle n&#8217;existait pas encore ou en tout cas
je ne l&#8217;ai pas trouvée. Si je me trompe donnez-moi un lien&nbsp;please!</p>
<p>Je possède <span class="caps">SICP</span> en version papier mais de l&#8217;avoir en version ebook sur
mon iphone<sup id="fnref:2"><a href="#fn:2" rel="footnote">2</a></sup> est un confort supplémentaire non&nbsp;négligeable.</p>
<p>Bref si vous êtes intéressé c&#8217;est par là:
<a href="http://db.tt/ryenOj">http://db.tt/ryenOj</a></p>
<p>Copiez simplement cette url dans votre <em>e-reader</em> et hop après
téléchargement plongez-vous confortablement dans ce livre&nbsp;incroyable!</p>
<p>Pour les intéressés voici le snippet en python que j&#8217;ai utilisé pour
convertir le livre en ligne en un seul fichier html. J&#8217;ai ensuite
utilisé le logiciel <a href="http://calibre-ebook.com/">Calibre</a> pour la conversion en format epub ce
qui nous donne au final un ebook fonctionnel. Oui fonctionnel, sans
plus mais moi ça me convient très bien. Certains liens ne fonctionnent
pas depuis la table des matières, d&#8217;autres marchent&#8230; Je n&#8217;ai pas
cherché à comprendre pourquoi (vous vous rappelez <a href="http://www.poxd.org/blog/adopter-le-assez-bien.html"><em>Adopter le &#8220;assez
bien&#8221;</em></a> ?). Si quelqu&#8217;un a une piste qu&#8217;il n&#8217;hésite pas à me
prodiguer ses&nbsp;lumières.</p>
<div class="syntax"><pre><span class="kn">import</span> <span class="nn">urllib2</span> <span class="kn">as</span> <span class="nn">urllib</span>
<span class="kn">import</span> <span class="nn">re</span>

<p><span class="n">url</span> <span class="o">=</span> <span class="s">&quot;http://mitpress.mit.edu/sicp/full-text/book/book.html&quot;</span>
<span class="n">base</span> <span class="o">=</span> <span class="s">&quot;http://mitpress.mit.edu/sicp/full-text/book/&quot;</span>
<span class="n">navigation</span> <span class="o">=</span> <span class="n">re</span><span class="o">.</span><span class="n">compile</span><span class="p">(</span><span class="s">&quot;&lt;p&gt;&lt;div class=navigation.+?&lt;p&gt;&quot;</span><span class="p">)</span>
<span class="n">href</span> <span class="o">=</span> <span class="n">re</span><span class="o">.</span><span class="n">compile</span><span class="p">(</span><span class="s">&quot;&lt;a(.+)href=</span><span class="se">&amp;quot;</span><span class="s">(?!http://).+.html#(.+?)</span><span class="se">&amp;quot;</span><span class="s">&quot;</span><span class="p">)</span>
<span class="n">body</span> <span class="o">=</span> <span class="n">re</span><span class="o">.</span><span class="n">compile</span><span class="p">(</span><span class="s">&quot;.*&lt;body&gt;(.+)&lt;/body&gt;&quot;</span><span class="p">,</span> <span class="n">re</span><span class="o">.</span><span class="n"><span class="caps">DOTALL</span></span><span class="p">)</span></p>
<p><span class="k">def</span> <span class="nf">download_resources</span><span class="p">(</span><span class="n">content</span><span class="p">):</span>
    <span class="k">def</span> <span class="nf">_load</span><span class="p">(</span><span class="n">url</span><span class="p">):</span>
        <span class="n">resource</span> <span class="o">=</span> <span class="n">urllib</span><span class="o">.</span><span class="n">urlopen</span><span class="p">(</span><span class="n">url</span><span class="p">)</span>
        <span class="n">resource_content</span> <span class="o">=</span> <span class="n">resource</span><span class="o">.</span><span class="n">read</span><span class="p">()</span>
        <span class="n">resource</span><span class="o">.</span><span class="n">close</span><span class="p">()</span>
        <span class="k">return</span> <span class="n">resource_content</span>
    <span class="k">def</span> <span class="nf">_write</span><span class="p">(</span><span class="n">local_url</span><span class="p">,</span> <span class="n">content</span><span class="p">,</span> <span class="n">binary</span><span class="o">=</span><span class="bp">False</span><span class="p">):</span>
        <span class="n">mode</span> <span class="o">=</span> <span class="s">&quot;w&quot;</span>
        <span class="k">if</span> <span class="n">binary</span><span class="p">:</span>
            <span class="n">mode</span> <span class="o">+=</span> <span class="s">&quot;b&quot;</span>
        <span class="k">with</span> <span class="nb">open</span><span class="p">(</span><span class="n">local_url</span><span class="p">,</span> <span class="n">mode</span><span class="p">)</span> <span class="k">as</span> <span class="n">local_resource</span><span class="p">:</span>
            <span class="n">local_resource</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="n">content</span><span class="p">)</span>      <br />
    <span class="c">#1 load css </span>
    <span class="n">links</span> <span class="o">=</span> <span class="n">re</span><span class="o">.</span><span class="n">search</span><span class="p">(</span><span class="s">&#39;&lt;link .<em> href=&quot;(.+)&quot;&#39;</span><span class="p">,</span> <span class="n">content</span><span class="p">)</span>
    <span class="k">if</span> <span class="n">links</span><span class="p">:</span>
        <span class="n">resource_url</span> <span class="o">=</span> <span class="n">links</span><span class="o">.</span><span class="n">groups</span><span class="p">()[</span><span class="mi">0</span><span class="p">]</span>
        <span class="n">resource_content</span> <span class="o">=</span> <span class="n">_load</span><span class="p">(</span><span class="n">base</span> <span class="o">+</span> <span class="n">resource_url</span><span class="p">)</span>
        <span class="n">_write</span><span class="p">(</span><span class="n">resource_url</span><span class="p">,</span> <span class="n">resource_content</span><span class="p">)</span>
    <span class="c">#2 load images</span>
    <span class="n">img_set</span> <span class="o">=</span> <span class="nb">set</span><span class="p">()</span>
    <span class="k">for</span> <span class="n">img</span> <span class="ow">in</span> <span class="n">re</span><span class="o">.</span><span class="n">finditer</span><span class="p">(</span><span class="s">&#39;&lt;img.+?src=<a href="?!http"></span><span class="se">&#39;</span><span class="s">&quot;</a>(.+?)[</span><span class="se">&amp;#39;</span><span class="s">&quot;].</em>?&gt;&#39;</span><span class="p">,</span> <span class="n">content</span><span class="p">):</span>
        <span class="n">img_url</span> <span class="o">=</span> <span class="n">img</span><span class="o">.</span><span class="n">groups</span><span class="p">()[</span><span class="mi">0</span><span class="p">]</span>
        <span class="n">img_set</span><span class="o">.</span><span class="n">add</span><span class="p">(</span><span class="n">base</span> <span class="o">+</span> <span class="n">img_url</span><span class="p">)</span>
    <span class="k">for</span> <span class="n">url</span> <span class="ow">in</span> <span class="n">img_set</span><span class="p">:</span>
        <span class="n">resource_content</span> <span class="o">=</span> <span class="n">_load</span><span class="p">(</span><span class="n">url</span><span class="p">)</span>
        <span class="n">_write</span><span class="p">(</span><span class="n">url</span><span class="p">[</span><span class="nb">len</span><span class="p">(</span><span class="n">base</span><span class="p">):],</span> <span class="n">resource_content</span><span class="p">,</span> <span class="bp">True</span><span class="p">)</span></p>
<p><span class="c">#initial content</span>
<span class="n">content</span> <span class="o">=</span> <span class="n">urllib</span><span class="o">.</span><span class="n">urlopen</span><span class="p">(</span><span class="n">url</span><span class="p">)</span>
<span class="n">content</span> <span class="o">=</span> <span class="n">content</span><span class="o">.</span><span class="n">read</span><span class="p">()</span>
<span class="n">head</span> <span class="o">=</span> <span class="n">re</span><span class="o">.</span><span class="n">match</span><span class="p">(</span><span class="s">&quot;(&lt;!doctype.+)&lt;body&gt;&quot;</span><span class="p">,</span> <span class="n">content</span><span class="p">,</span> <span class="n">re</span><span class="o">.</span><span class="n"><span class="caps">DOTALL</span></span><span class="p">)</span>
<span class="n">head</span> <span class="o">=</span> <span class="n">head</span><span class="o">.</span><span class="n">groups</span><span class="p">()[</span><span class="mi">0</span><span class="p">]</span>
<span class="n">content</span> <span class="o">=</span> <span class="n">body</span><span class="o">.</span><span class="n">match</span><span class="p">(</span><span class="n">content</span><span class="p">)</span><span class="o">.</span><span class="n">groups</span><span class="p">()[</span><span class="mi">0</span><span class="p">]</span></p>
<p><span class="c">#loop through the book until no &#39;next&#39; url is found</span>
<span class="k">while</span> <span class="bp">True</span><span class="p">:</span>
    <span class="n">next_url</span> <span class="o">=</span> <span class="n">get_next_url</span><span class="p">(</span><span class="n">content</span><span class="p">)</span>
    <span class="k">if</span> <span class="n">next_url</span> <span class="ow">is</span> <span class="bp">None</span><span class="p">:</span>
        <span class="k">break</span>
    <span class="n">next_url</span> <span class="o">=</span> <span class="s">&quot;http://mitpress.mit.edu/sicp/full-text/book/</span><span class="si">%s</span><span class="s">&quot;</span> <span class="o">%</span> <span class="n">next_url</span>
    <span class="n">content</span> <span class="o">=</span> <span class="n">re</span><span class="o">.</span><span class="n">sub</span><span class="p">(</span><span class="n">navigation</span><span class="p">,</span> <span class="s">&quot;&quot;</span><span class="p">,</span> <span class="n">content</span><span class="p">)</span>
    <span class="n">c</span> <span class="o">=</span> <span class="n">get_content</span><span class="p">(</span><span class="n">next_url</span><span class="p">)</span>
    <span class="n">content</span> <span class="o">=</span> <span class="n">content</span> <span class="o">+</span> <span class="n">c</span></p>
<p><span class="k">def</span> <span class="nf">sanitize</span><span class="p">(</span><span class="n">match</span><span class="p">):</span>
    <span class="n">name</span> <span class="o">=</span> <span class="n">match</span><span class="o">.</span><span class="n">groups</span><span class="p">()[</span><span class="mi">0</span><span class="p">]</span>
    <span class="n">name</span> <span class="o">=</span> <span class="n">name</span><span class="o">.</span><span class="n">replace</span><span class="p">(</span><span class="s">&quot;%&quot;</span><span class="p">,</span><span class="s">&quot;&quot;</span><span class="p">)</span>
    <span class="n">href</span> <span class="o">=</span> <span class="n">match</span><span class="o">.</span><span class="n">groups</span><span class="p">()[</span><span class="mi">1</span><span class="p">]</span>
    <span class="n">href</span> <span class="o">=</span> <span class="n">href</span><span class="o">.</span><span class="n">replace</span><span class="p">(</span><span class="s">&quot;%&quot;</span><span class="p">,</span><span class="s">&quot;&quot;</span><span class="p">)</span>
    <span class="k">return</span> <span class="s">&quot;&lt;a </span><span class="si">%s</span><span class="s"> href=&#39;#</span><span class="si">%s</span><span class="s">&#39;&quot;</span> <span class="o">%</span> <span class="p">(</span><span class="n">name</span><span class="p">,</span> <span class="n">href</span><span class="p">)</span></p>
<p><span class="n">content</span> <span class="o">=</span> <span class="n">re</span><span class="o">.</span><span class="n">sub</span><span class="p">(</span><span class="n">href</span><span class="p">,</span> <span class="n">sanitize</span><span class="p">,</span> <span class="n">content</span><span class="p">)</span>
<span class="n">content</span> <span class="o">=</span> <span class="n">re</span><span class="o">.</span><span class="n">sub</span><span class="p">(</span><span class="s">&#39;&lt;a name=&quot;(.+)&quot;&#39;</span><span class="p">,</span> <span class="k">lambda</span> <span class="n">m</span><span class="p">:</span> <span class="s">&#39;&lt;a name=&quot;&#39;</span> <span class="o">+</span> <span class="n">m</span><span class="o">.</span><span class="n">groups</span><span class="p">()[</span><span class="mi">0</span><span class="p">]</span><span class="o">.</span><span class="n">replace</span><span class="p">(</span><span class="s">&quot;%&quot;</span><span class="p">,</span><span class="s">&quot;&quot;</span><span class="p">)</span> <span class="o">+</span> <span class="s">&#39;&quot;&#39;</span><span class="p">,</span> <span class="n">content</span><span class="p">)</span>
<span class="n">content</span> <span class="o">=</span> <span class="n">re</span><span class="o">.</span><span class="n">sub</span><span class="p">(</span><span class="n">navigation</span><span class="p">,</span> <span class="s">&quot;&quot;</span><span class="p">,</span> <span class="n">content</span><span class="p">)</span>
<span class="n">content</span> <span class="o">=</span> <span class="n">head</span> <span class="o">+</span> <span class="s">&quot;&lt;body&gt;&quot;</span> <span class="o">+</span> <span class="n">content</span> <span class="o">+</span> <span class="s">&quot;&lt;/body&gt;&lt;/html&gt;&quot;</span>
<span class="n">download_resources</span><span class="p">(</span><span class="n">content</span><span class="p">)</span></p>
<p><span class="c">#print the final book</span>
<span class="k">print</span> <span class="n">content</span>
</pre></div></p>
]]></description>
         <pubDate>29 May 10 00:00 GMT</pubDate>
         <author>jacqueminv@gmail.com (Valentin Jacquemin)</author>
      </item>    
      <item>
         <title>La semaine prochaine java bien aller avec Jazoon!</title>
         <link>http://www.poxd.org/blog/la_semaine_prochaine_java_bien_aller_avec_jazoon.html</link>
         <guid>http://www.poxd.org/blog/la_semaine_prochaine_java_bien_aller_avec_jazoon.html</guid>
         <description><![CDATA[

<p>La semaine prochaine sera spécialement Java pour moi avec la
conférence <a href="http://jazoon.com">Jazoon</a>. Je n&#8217;ai jamais assisté à une conférence de cette
envergure, je me réjouis un max! Le programme en lui-même est
alléchant avec plusieurs sessions auxquelles je me réjouis d&#8217;assister,
voyons le programme que je pense me&nbsp;faire&#8230;</p>
<h1 id="le-mardi">Le&nbsp;mardi</h1>
<ul>
<li>Java <span class="caps">SE</span> and JavaFX: The Road Ahead par <em>Danny&nbsp;Coward</em></li>
<li>The Java <span class="caps">EE</span> 6 Platform: Powerful, Productive, Extensible par <em>Jerome Dochez</em> et <em>Alexis&nbsp;Moussine-Pouchkine</em></li>
<li><span class="caps">CDI</span>, Seam <span class="amp">&amp;</span> RESTEasy: You haven&#8217;t seen <span class="caps">REST</span> yet par <em>Dan&nbsp;Allen</em></li>
<li>Pour le slot de 14:00-14:50 je ne sais pas du&nbsp;tout</li>
<li>De 15:00-15:50 mon coeur balance entre Construction Techniques for Domain Specific Languages et Server-side OSGi with Apache Sling. La première pour le speaker Neal Ford, la deuxième pour le contenu. Le projet Sling étant un projet que je suis de&nbsp;loin.</li>
<li>A nouveau un peu hésitant pour l&#8217;avant-dernière session mais je pense assister à Servlet 3.0 - Asynchronous, extensibility, ease of development par <em>Rajiv Mordani</em> et <em>Jan&nbsp;Luehe</em></li>
<li>97 Things Every Programmer Should Know par <em>Kevlin&nbsp;Henney</em></li>
</ul>
<h1 id="le-mercredi">Le&nbsp;mercredi</h1>
<ul>
<li>Total Cost of Ownership par <em>Ken&nbsp;Schwaber</em></li>
<li>iPhone/iPad development from the Java Perspective par <em>Ognen&nbsp;Ivanovski</em></li>
<li>What&#8217;s new in Hibernate: a <span class="caps">JPA</span> 2 perspective par <em>Emmanuel&nbsp;Bernard</em></li>
<li>The Java Persistence Criteria <span class="caps">AP</span> par <em>Linda&nbsp;DeMichiel</em></li>
<li>Patterns and Practices in Hibernate par <em>Patrycja&nbsp;Wegrzynowicz</em></li>
<li>How Java Powers Large Online Retail Sites par <em>Robert Brazile</em> et <em>Jason&nbsp;Brazile</em></li>
<li>Au moins une des 3 sessions rookie qui terminent la&nbsp;journée.</li>
</ul>
<h1 id="le-jeudi">Le&nbsp;jeudi</h1>
<ul>
<li>The Gaia satellite and Data Processing par <em>William&nbsp;O&#8217;Mullane</em></li>
<li>Essentials of Testing: The Tools You Need to Know par <em>Bettina Polasek</em> et <em>Marco&nbsp;Cicolini</em></li>
<li>Rapid Application Development with Apache Wicke par <em>Andrew&nbsp;Lombardi</em></li>
<li>Exploring <span class="caps">HTML5</span> With JavaServer Faces 2.0 par <em>Roger&nbsp;Kitain</em></li>
<li>Search, Find, Classify - A short tour through Apache Solr par <em>Sven Maurmann</em> ou Spring <span class="caps">ROO</span> - A New Level of Enterprise Java Productivity par <em>Eberhard&nbsp;Wolff</em></li>
<li>Pour l&#8217;avant dernière on verra sur le&nbsp;moment.</li>
</ul>
<p>Plutôt chargé! On va voir comment tout ça se déroule mais je suis
clairement impatient de découvrir encore un peu plus la communauté
Java <em>en vrai</em>.</p>
<p>Si certains lecteurs de passage s&#8217;y rendent aussi dites-le moi qu&#8217;on
boive un verra&nbsp;là-bas!</p>
]]></description>
         <pubDate>28 May 10 00:00 GMT</pubDate>
         <author>jacqueminv@gmail.com (Valentin Jacquemin)</author>
      </item>    
      <item>
         <title>Correction orthographique en français sous Emacs Carbon</title>
         <link>http://www.poxd.org/blog/correction_orthographique_en_francais_sous_emacs_carbon.html</link>
         <guid>http://www.poxd.org/blog/correction_orthographique_en_francais_sous_emacs_carbon.html</guid>
         <description><![CDATA[

<p>Depuis la migration de ce blog à <a href="http://ringce.com/hyde">hyde</a> j&#8217;écris tous mes billets
sous Emacs. Cette véritable machine à tout faire me convient
parfaitement pour écrire, je le mets en mode plein écran et c&#8217;est&nbsp;parti.</p>
<p>Avant la publication je vérifie les erreurs d&#8217;orthographe qui ont pu
s&#8217;insérer par inadvertance. Emacs fournit de base cette fonctionnalité
grâce à la fonction <code>ispell</code>. Sur mon mac par contre
uniquement le dictionnaire anglais est supporté de base et vu le temps
que j&#8217;ai mis à configurer Emacs pour supporter la correction en
français, je me suis dit qu&#8217;un petit billet pourrait en aider&nbsp;d&#8217;autres&#8230;</p>
<h1 id="verifier-linstallation-de-ispell">Vérifier l&#8217;installation de&nbsp;ispell</h1>
<p><code>ispell</code> n&#8217;est pas réservé à Emacs, <code>ispell</code> est
un outil en ligne de commande sur tout système d&#8217;exploitation
Unix. Emacs utilise donc une interface à cet outil afin de fournir la
correction. Tapez <code>ispell -v</code> sur la ligne de commande afin
de vérifier qu&#8217;il est bien installé. Si par hasard ce n&#8217;était pas le
cas, rendez-vous sur la <a href="http://www.gnu.org/software/ispell/">page dédiée</a> à l&#8217;outil et suivez ensuite
les instructions au sein du fichier <code>README</code> tout devrait
se dérouler sans problème. L&#8217;appel à <code>ispell -v</code> devrait
alors&nbsp;fonctionner.</p>
<h1 id="trouver-le-dictionnaire-francais-pour-ispell">Trouver le dictionnaire français pour&nbsp;ispell</h1>
<p><code>ispell</code> a besoin de dictionnaires pour lancer sa
correction, la première tâche est donc de trouver un dictionnaire
français adapté. Après avoir <em>googlé</em> durant une bonne vingtaine de
minutes sans succès, je me suis connecté au channel
irc <code>#fsf</code> pour y demander de l&#8217;aide. En deux secondes j&#8217;ai
été redirigié sur les <a href="http://packages.debian.org/fr/sid/ifrench-gut">archives des packages de la distribution Linux
Debian</a> fournissant exactement ce dont j&#8217;avais besoin. Comme quoi
Google n&#8217;a pas toujours réponse à tout tout de&nbsp;suite.</p>
<p>Une fois le dictionnaire téléchargé pour la plate-forme adéquate il ne
reste plus qu&#8217;à lancer l&#8217;utilitaire <code>makehash</code>. Ce dernier
compile le dictionnaire dans le format requis
par <code>ispell</code>. Il ne reste plus qu&#8217;à déplacer ces fichiers
compilés. Dans mon cas je les ai déplacé dans le
répertoire <code>/usr/local/lib</code>, dans le vôtre ce sera
peut-être&nbsp;différent.</p>
<p>Retour à la ligne de commande et testez <code>ispell -d
francais</code>. Vous pouvez dorénavant entrez n&#8217;importe quel mot
français et la correction se fera en&nbsp;fonction.</p>
<h1 id="integration-a-emacs">Intégration à&nbsp;Emacs</h1>
<p>Ce n&#8217;est pas encore terminé car même si <code>ispell</code> fonctionne
maintenant bien en ligne de commande ce n&#8217;est peut-être pas encore le
cas sous Emacs. A ma surprise en effet, Emacs bien que proposant la
fonction
<code>ispell</code> pour lancer la correction, utilise au final
<code>aspell</code> qui est un autre outil de correction
similaire. Quelle&nbsp;confusion!</p>
<p>Sous Emacs<sup id="fnref:0"><a href="#fn:0" rel="footnote">1</a></sup>, lancez la commande <code>(setq ispell-program-name
"ispell")</code> ou bien ajoutez-la directement dans le fichier de
configuration
<code>~/.emacs</code>.</p>
<p>Après avoir configuré Emacs pour choisir le dictionnaire français
(<code>ispell-change-dictionary</code>), plus qu&#8217;à lancer la commande
<code>ispell</code> et cette fois-ci le tour est&nbsp;joué!</p>
]]></description>
         <pubDate>20 Feb 10 00:00 GMT</pubDate>
         <author>jacqueminv@gmail.com (Valentin Jacquemin)</author>
      </item>    
      <item>
         <title>Flash va mourir</title>
         <link>http://www.poxd.org/blog/flash_va_mourir.html</link>
         <guid>http://www.poxd.org/blog/flash_va_mourir.html</guid>
         <description><![CDATA[

<p>Durant certains cours ennuyeux il m&#8217;est arrivé de lancer une ou deux <a href="http://www.miniclip.com/games/boom-boom-volleyball/en/">parties de volley</a> avec un ami tout aussi peu motivé par certains cours. On aimait beaucoup ce jeu pour son fun, sa rapidité, la possibilité de s&#8217;affronter en réseau&#8230; Bref quoi de mieux pour faire passer le temps et oublier le prof nous parler des détails obscures du protocol tcp? Dans ce domaine, la technologie flash a permis à Adobe d&#8217;asseoir un certain monopole dans ce genre d&#8217;applications tout comme pour ce qui est d&#8217;embarquer du contenu vidéo ou encore créer des effets très dynamiques. Plus d&#8217;une âme douée de sens artistique s&#8217;en est donnée à coeur joie grâce notamment aux outils fortement orientés designer fournis&nbsp;conjointement.</p>
<p>Oui mais voilà, flash a vécu. Flash va dorénavant devoir laisser sa place&#8230; Pour plusieurs&nbsp;raisons.</p>
<h1 id="ce-qui-va-perdre-flash">Ce qui va perdre&nbsp;flash</h1>
<p>L&#8217;iPhone favorise fortement sa perte en ne le supportant tout simplement pas. Ce marché lucratif attire toujours plus de dévelopeurs, et cela fait toujours plus de dévelopeurs qui ne font pas leur boulot en Flash. C&#8217;est bien triste lorsqu&#8217;on sait combien les applications pour le mobile pommé entrerait bien dans le champs d&#8217;applications des dévelopements&nbsp;flash.</p>
<p>Deuxièmement, la poussée de <a href="http://www.google.com/chrome">Chrome</a> a également son rôle a jouer dans l&#8217;éviction de flash en tant que technologie riche. Les équipes du géant de Mountain View ont tellement favorisé l&#8217;amélioration des performances<sup id="fnref:1"><a href="#fn:1" rel="footnote">1</a></sup> des moteurs Javascript qu&#8217;il est à prévoir dès maintenant les applications les plus folles directement dans le navigateur sans passer par un plugin tiers! Jetez donc un œil par exemple à cet <a href="http://benfirshman.com/projects/jsnes/">émulateur <span class="caps">NES</span></a> ou encore cet <a href="http://www.bytestrom.eu/blog/2009/1120a_jpeg_encoder_for_javascript">encodeur <span class="caps">JPEG</span></a>! Tout ça en&nbsp;Javascript!</p>
<p>Associée à la montée en puissance de Javascript, l&#8217;arrivée de <span class="caps">HTML</span> 5 ne fait pas non plus les affaires d&#8217;Adobe puisque l&#8217;inclusion de vidéos et de clips audio devraient &#8212; si la standardisation va jusqu&#8217;au bout &#8212; une fois de plus évincer l&#8217;un des gros avantage de&nbsp;flash. </p>
<div style="text-transform: small-caps; font-size: 0.8em; text-align:center;">
<img alt="Flash et iPhone ne font pas bon ménage" src="/media/images/flash_dead_on_iphone.PNG"/><p>Flash et iPhone ne font pas bon&nbsp;ménage</p></div>

<p>Enfin <a href="http://fr.wikipedia.org/wiki/WebGL">WebGL</a> pourrait être la goutte faisant déborder le vase; ce nouvel effort de standardisation nous permettant d&#8217;accéder aux composants de la carte graphique laisse entrevoir les applications 3D les plus&nbsp;folles.</p>
<h1 id="a-quelques-nuances-pres">A quelques nuances&nbsp;près</h1>
<p>Qu&#8217;est-ce qui peut bien rester à flash alors? Ne vendons pas la peau de l&#8217;ours avant de l&#8217;avoir tué car si flash est menacé les ingénieurs d&#8217;Adobe ne sont pas bras croisés à rien faire! A commencer par Flex. Framework ayant pour base flash et qui permet par exemple de créer des applications pouvant sortir du navigateur web (ex: <a href="http://parleys.com">parleys.com</a>). Flex donne aussi la possibilité de créer des applications d&#8217;entreprises très attractives avec entre autres de beaux graphiques. Alléchant pour les managers et autres décideurs! Il y a aussi le projet <a href="http://www.openscreenproject.org/about/">open screen project</a> &#8212; vous aussi c&#8217;est la première fois que vous en entendez parler? &#8212; ayant pour but avoué d&#8217;homogénéiser l&#8217;expérience multimédia; du mobile à la&nbsp;tv.</p>
<p>Mais bon finalement le mieux ne serait-il pas tout simplement de fusionner les deux mondes et d&#8217;offrir un runtime flash en javascript? C&#8217;est le but avoué d&#8217;un <a href="http://github.com/tobeytailor/gordon/">projet sur github</a>, vous pouvez déjà jeter un oeil aux premières <a href="http://paulirish.com/work/gordon/demos/">démos</a>. Ainsi, les designers pourraient continuer d&#8217;exercer leurs talents aux travers des excellents outils associés à flash tout en les exécutant sur tout navigateur supportant Javascript. Il est évidemment trop tôt pour savoir ce que cela va donner, mais avouons que l&#8217;idée est fort intéressante! On pourrait lancer des parties en réseau, durant les cours, sur&nbsp;l&#8217;iPhone!</p>
]]></description>
         <pubDate>15 Jan 10 00:00 GMT</pubDate>
         <author>jacqueminv@gmail.com (Valentin Jacquemin)</author>
      </item>    
      <item>
         <title>Hyde: bloguer comme un hacker c'est fun!</title>
         <link>http://www.poxd.org/blog/hyde-bloguer-comme-un-hacker-c-est-fun.html</link>
         <guid>http://www.poxd.org/blog/hyde-bloguer-comme-un-hacker-c-est-fun.html</guid>
         <description><![CDATA[

<p>Wordpress c&#8217;est sympa mais dès lors que l&#8217;on veut par exemple insérer du code Javascript pour un article ou customiser l&#8217;affichage ça devient tout de suite un peu plus galère. Wordpress agit comme boîte noire en arrière plan. J&#8217;en avais marre et je suis allé voir ailleurs pour finalement tomber sur <a href="http://ringce.com/hyde">hyde</a>.</p>
<p>A mon avis hyde permettra a plus d&#8217;un de retrouver le fun de tenir un blog<sup id="fnref:1"><a href="#fn:1" rel="footnote">1</a></sup>. Voici en quelques lignes&nbsp;pourquoi.</p>
<h1 id="plus-de-base-de-donnees">Plus de base de&nbsp;données</h1>
<p>Tout est statique, entièrement basé sur le système de fichier. A chaque nouvelle publication hyde régénère tout votre site en s&#8217;appuyant entre autre sur le moteur de templates <a href="http://www.djangoproject.com/">django</a>. Grâce a django il est très simple de définir des zones réutilisables et de créer une hiérarchie de&nbsp;templates.</p>
<p>Quel avantage? Outre le sentiment de vous sentir original vous serez heureux d&#8217;avoir un effort de maintenance bien moindre pour tout votre blog! On y reviendra lors d&#8217;un prochain&nbsp;billet.</p>
<h1 id="une-plus-grande-liberte">Une plus grande&nbsp;liberté</h1>
<p>Insérer un code Javascript ou personaliser l&#8217;affichage pour un article spécifique<sup id="fnref:2"><a href="#fn:2" rel="footnote">2</a></sup> devient aussi simple que d&#8217;éditer un fichier purement <span class="caps">HTML</span>. Autant le dire tout de suite, c&#8217;est <span class="caps">LA</span> fonctionalite qui m&#8217;a le plus attiré. C&#8217;est vrai, même si je ne suis pas un webdesigner j&#8217;ai souvent envie de changer l&#8217;agencement de mon blog ou simplement de tester des choses. Wordpress me décourageait de le faire. Hyde c&#8217;est une bouffée d&#8217;air frais en ce qui me&nbsp;concerne!</p>
<h1 id="lavenir">L&#8217;avenir</h1>
<p>Hyde n&#8217;en est qu&#8217;a ses prémices. Plusieurs fonctionalités sont en dévelopement et le nombre de <em>fork</em> sur <a href="http://ringce.com/hyde">github</a> va croissant ce qui est encourageant! Je l&#8217;ai moi même <em>forké</em> le jour ou je suis tombé sur un commentaire de Lakshmi Vyas &#8212; initiateur de hyde &#8212; sur un <a href="http://www.oiledmachine.com/posts/2008/12/27/overview-of-jekyll--a-static-site-generator-written-in-ruby.html">article</a> à propos de <a href="http://jekyllrb.com/">Jekyll</a> la source d&#8217;inspiration de hyde developée en&nbsp;ruby.</p>
<p>Parmis ces fonctionalités en dévelopement on notera la création d&#8217;une interface web permettant de publier un nouveau billet, la gestion des catégories et tout ce qui va avec, la personalisation des flux rss et certainement bien d&#8217;autres a&nbsp;venir. </p>
<p>Ce projet me passsionne en ce moment et j&#8217;aime y contribuer. J&#8217;expliquerai prochainement comment démarrer son site avec hyde&#8230; En espérant en séduire plus&nbsp;d&#8217;un!</p>
]]></description>
         <pubDate>09 Jan 10 00:00 GMT</pubDate>
         <author>jacqueminv@gmail.com (Valentin Jacquemin)</author>
      </item>    
      <item>
         <title>Vous faisiez quoi à 12 ans vous?</title>
         <link>http://www.poxd.org/blog/vous-faisiez-quoi-a-12-ans-vous.html</link>
         <guid>http://www.poxd.org/blog/vous-faisiez-quoi-a-12-ans-vous.html</guid>
         <description><![CDATA[

<p>Moi à 12 ans je passais mon temps entre jouer, jouer et
jouer. J&#8217;exagère mais à peine, encore aujourd&#8217;hui si ce que je dois
faire peut prendre une forme ludique je n&#8217;hésiterai&nbsp;pas.</p>
<p>Tout ça pour dire que certains à 12 ans, donnent des présentations
chez Google. Rien que ça! Ce petit bonhomme donne d&#8217;ailleurs une
introduction de très bonne facture à jQuery dans le cadre du <em>Summer
of Code</em> the Google dans lequel d&#8217;ailleurs il a officié - en tout cas
cette année - <a href="http://google-opensource.blogspot.com/2009/08/wrapping-our-fifth-google-summer-of.html">en tant que <em>mentor</em></a>!</p>
<div style="text-align: center;"><p><object width="425"
height="344"><param name="movie"
value="http://www.youtube.com/v/8mwKq7_JlS8&hl=fr&fs=1&"></param><param
name="allowFullScreen" value="true"></param><param
name="allowscriptaccess" value="always"></param><embed
src="http://www.youtube.com/v/8mwKq7_JlS8&hl=fr&fs=1&"
type="application/x-shockwave-flash" allowscriptaccess="always"
allowfullscreen="true" width="425"
height="344"></embed></object></p></div>

<p>Plutôt bluffant non? On peut retrouver le présentateur sur son <a href="http://dmitrizone.com/">site</a> ou
encore sur <a href="twitter">twitter</a>.</p>
]]></description>
         <pubDate>27 Aug 09 00:00 GMT</pubDate>
         <author>jacqueminv@gmail.com (Valentin Jacquemin)</author>
      </item>    
      <item>
         <title>SCBCD je t'aurai!</title>
         <link>http://www.poxd.org/blog/scbcd-je-taurai.html</link>
         <guid>http://www.poxd.org/blog/scbcd-je-taurai.html</guid>
         <description><![CDATA[

<p>C&#8217;est décidé. Cette année je passe la certification <span class="caps">SCBCD</span> autrement dit le
développement de composants <span class="caps">EJB</span>. Passer une certification est un exercice que
j&#8217;apprécie tant il pousse à faire le tour complet d&#8217;une technologie. En tout
cas l&#8217;expérience faite avec les certifications <span class="caps">SCJP</span> et <span class="caps">SCWCD</span> ne m&#8217;ont pas déçu
et m&#8217;ont permis d&#8217;être à l&#8217;aise et d&#8217;avoir le sentiment de maîtriser mon
sujet. Je ne connais pas encore très bien les <span class="caps">EJB</span>, j&#8217;ai eu à maintenir une
application qui en utilisaient mais cela reste un peu flou pour moi pour
l&#8217;instant. Le moment est propice puisque je commence également un nouveau
projet chez Merck Serono. Projet <span class="caps">J2EE</span> utilisant Seam, <span class="caps">JSF</span> et les <span class="caps">EJB</span> 3, je
pourrai de ce fait directement mettre en pratique ce que j&#8217;apprends et
apprendre de ma pratique. Passer une certification est anecdotique dans
l&#8217;apprentissage d&#8217;une technologie mais c&#8217;est motivant. On a envie de bien
réussir l&#8217;examen et de pouvoir ajouter une ligne à son cv n&#8217;est pas
négligeable non plus même si ça ne fait pas&nbsp;tout.</p>
<h1 id="mon-plan-daction">Mon plan&nbsp;d&#8217;action</h1>
<p>Pour y arriver dans un délai court je pense lire rapidement Mastering
Enterprise JavaBeans 3.0, disponible gratuitement sur le net. Parallèlement,
je souhaite exercer mes connaissances en utilisant pour se faire le serveur
Glassfish, implémentation de référence de <span class="caps">SUN</span>. Je pense également passer en
revue les specs (il y en a 3) et tester mes connaissances sur Javablackbelt.
Avec ce beau planning j&#8217;espère passer cette certification d&#8217;ici septembre.
J&#8217;espère vraiment y arriver, celà met de côté mes autres objectifs (<span class="caps">SICP</span> par
exemple, arg!) mais bon c&#8217;est temporaire. Si certains certifiés passent par
là, n&#8217;hésitez pas à donner vos conseils!&nbsp;Ressources:</p>
<ul>
<li>
<p>Les objectifs de la certifications:
<a href="http://www.sun.com/training/catalog/courses/CX-310-091.xml">http://www.sun.com/training/catalog/courses/<span class="caps">CX</span>-310-091.xml</a></p>
</li>
<li>
<p><span class="caps">FAQ</span> de JavaRanch sur le sujet :
<a href="http://faq.javaranch.com/java/ScbcdLinks#scbcd50">http://faq.javaranch.com/java/ScbcdLinks#scbcd50</a></p>
</li>
<li>
<p>Tutoriel de Sun :
<a href="http://java.sun.com/javaee/5/docs/tutorial/doc/bncns.html">http://java.sun.com/javaee/5/docs/tutorial/doc/bncns.html</a></p>
</li>
</ul>
]]></description>
         <pubDate>09 May 09 00:00 GMT</pubDate>
         <author>jacqueminv@gmail.com (Valentin Jacquemin)</author>
      </item>    
      <item>
         <title>Nouveau venu dans la famille des podcasts sur Java</title>
         <link>http://www.poxd.org/blog/nouveau-venu-dans-la-famille-des-podcasts-sur-java.html</link>
         <guid>http://www.poxd.org/blog/nouveau-venu-dans-la-famille-des-podcasts-sur-java.html</guid>
         <description><![CDATA[

<p>Il s&#8217;appelle <a href="http://lescastcodeurs.com/">Les Cast Codeurs Podcast</a> et c&#8217;est le tout nouveau podcast à
propos du monde Java. On y parle également des langages supportés par la
machine virtuelle tels que Groovy mais on nous promet également Scala,
Clojures, etc. Le point particulier? On y parle <strong>en français</strong>, sympa! Le but
suivi est le&nbsp;suivant:</p>
<blockquote>
<ul>
<li>
<p>discussion sur les nouvelles du monde Java avec vos hôtes&nbsp;habituels</p>
</li>
<li>
<p>la sélection des outils de la semaine: un outil que l’on utilise au
quotidien pour coder ou&nbsp;travailler</p>
</li>
<li>
<p>Java, les mains dans le cambouis: une discussion détaillée sur
un sujet peu connu&nbsp;des développeur</p>
</li>
<li>
<p>l’interview: une interview d’un acteur Francophone (si possible) du
monde&nbsp;Java</p>
</li>
</ul>
</blockquote>
<p>Je suis un habitué de <a href="http://javaposse.com/">Java Posse</a> - la référence en la matière - mais
après avoir écouté une bonne partie du 1er épisode je suis séduit. Il leur
manque un générique qui tienne la route, peut-être aussi un poil plus d&#8217;humour
mais saluons l&#8217;initiative! D&#8217;autant plus qu&#8217;avec des chroniqueurs comme
Emmanuel Bernard, Antonio Goncalves, Guillaume Laforge et Vincent Masso on
peut espérer un contenu de très haute qualité! N&#8217;hésitez pas à vous abonner au
podcast en cliquant sur le lien ci-dessous et à faire passer le&nbsp;message!</p>
<p><a href="http://itunes.apple.com/WebObjects/MZStore.woa/wa/viewPodcast?id=312239675"><img alt="" src="http://lescastcodeurs.com/img/itunes.gif" /> Souscrire dans&nbsp;iTunes</a></p>
]]></description>
         <pubDate>15 Apr 09 00:00 GMT</pubDate>
         <author>jacqueminv@gmail.com (Valentin Jacquemin)</author>
      </item>    
      <item>
         <title>Il est temps de se mettre à Scala</title>
         <link>http://www.poxd.org/blog/il-est-temps-de-se-mettre-a-scala.html</link>
         <guid>http://www.poxd.org/blog/il-est-temps-de-se-mettre-a-scala.html</guid>
         <description><![CDATA[

<blockquote>
<p>Addressing developers at the annual Web 2.0 Expo in San Francisco,
California, Payne argued that Scala - not Ruby on Rails or <span class="caps">PHP</span> or Python -
should be the language of choice for the modern web&nbsp;startup.</p>
</blockquote>
<p>Selon Alex Payne, dévelopeur de Twitter, Scala serait donc <span class="caps">LE</span> langage de choix
pour le dévelopement de services internet&#8230; Il faudrait vraiment que j&#8217;y jète
un oeil. [Source: article <a href="http://www.theregister.co.uk/2009/04/01/twitter_on_scala/">theregister</a> titré <em>Twitter jilts Ruby for
Scala</em>]</p>
]]></description>
         <pubDate>02 Apr 09 00:00 GMT</pubDate>
         <author>jacqueminv@gmail.com (Valentin Jacquemin)</author>
      </item>    
      <item>
         <title>Javascript "The Good Parts" en vidéo</title>
         <link>http://www.poxd.org/blog/javascript-the-good-parts-en-video.html</link>
         <guid>http://www.poxd.org/blog/javascript-the-good-parts-en-video.html</guid>
         <description><![CDATA[

<p>Javascript étant l&#8217;un des langages les plus utilisés mais en même temps les
moins bien compris, les conseils d&#8217;<a href="http://www.crockford.com/">un expert</a> sont toujours très utiles.
Je l&#8217;utilise moi-même beaucoup depuis un an maintenant chez Merck Serono. Le
problème avec ce langage (qui parraît être un avantage au départ) étant que
très rapidement on arrive avoir un résultat. Javascript ne fait que très peu
de vérifications sur le code et ne retournera que rarement une erreur. Donc au
final, on est content d&#8217;avoir pu produire rapidement un code fonctionnel mais
l&#8217;objectif d&#8217;un bon développeur ne devrait-il pas être de livrer un code
clair, maintenable et performant? Sans aller très loin, voici une liste des
choses <strong>à savoir</strong> sur&nbsp;Javascript:</p>
<ul>
<li><strong>Déclarer toutes les variables avec le mot-clé var</strong>. L&#8217;omission du mot-
clé créera une variable globale et ce quelque soit l&#8217;emplacement de la&nbsp;déclaration:</li>
</ul>
<div class="syntax"><pre><span class="kd">function</span><span class="p">(){</span>
    <span class="nx">text</span> <span class="o">=</span> <span class="s1">&#39;hello world&#39;</span><span class="p">;</span> <span class="c1">//variable globale!</span>
    <span class="k">return</span> <span class="nx">text</span><span class="p">;</span>
<span class="p">}</span>
</pre></div>

<p>A éviter comme la peste. Une variable globale déclarée dans une fonction
écrasant une autre variable légitimement globale (définie par exemple dans une
librairie externe) sera un pur cauchemard à débugger! Sans parler des attaques
<span class="caps">XSS</span> dont fait mention Doug dans sa présentation.<sup id="fnref:1"><a href="#fn:1" rel="footnote">1</a></sup></p>
<ul>
<li>
<p><strong>Vérifier une condition uniquement avec un triple opérateur.</strong>
C&#8217;est-à-dire === ou !=== . Oui parce qu&#8217;en fait en Javascript : 0 == &#8221; donne
false mais &#8221; == 0 donne true! A ce qu&#8217;en dit Doug, des règles régissent ce
comportement. On va pas chercher à comprendre ces règles: utilisez toujours
=== ou !=== pour les conditions&nbsp;d&#8217;égalité!</p>
</li>
<li>
<p><strong>Le style n&#8217;est pas qu&#8217;une affaire de goût.</strong> Avec les deux codes&nbsp;suivants:</p>
</li>
</ul>
<div class="syntax"><pre><span class="k">return</span>
<span class="p">{</span>
    <span class="nx">content</span><span class="o">:</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">];</span>
<span class="p">}</span>
</pre></div>

<div class="syntax"><pre><span class="k">return</span><span class="p">{</span>
    <span class="nx">content</span><span class="o">:</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">];</span>
<span class="p">}</span>
</pre></div>

<p>On peut penser que ce n&#8217;est qu&#8217;une affaire de goût. Bien nous en garde! Dans
le premier cas, Javascript ajoute un point-virgule après le return et ne lance
aucune&nbsp;erreur!</p>
<p>3 points à garder à l&#8217;esprit lors de développements Javascript mais en
visionnant la vidéo on en découvre d&#8217;autres et certainement qu&#8217;en lisant le
bouquin on va encore plus loin. <a href="http://www.poxd.org/blog/2008/12/14/dom-et-ses-bonnes-pratiques/">Une fois de plus</a>, Doug Crockford concocte
ici une vidéo fort intéressante. Bon&nbsp;visionnage!</p>
]]></description>
         <pubDate>19 Mar 09 00:00 GMT</pubDate>
         <author>jacqueminv@gmail.com (Valentin Jacquemin)</author>
      </item>    
      <item>
         <title>Parfois la solution est juste plus simple que ce que l'on pensait...</title>
         <link>http://www.poxd.org/blog/parfois-la-solution-est-juste-plus-simple-que-ce-que-lon-pensait.html</link>
         <guid>http://www.poxd.org/blog/parfois-la-solution-est-juste-plus-simple-que-ce-que-lon-pensait.html</guid>
         <description><![CDATA[

<p>La lecture de The Pragmatic Programmer from journeyman to master vaut la
peine. Le chapitre que je viens de terminer m&#8217;a une fois de plus permis de
garder à l&#8217;esprit certains points dont on est certainement tous conscients,
mais les mettre par écrit fait parfois toute la&nbsp;différence.</p>
<h2 id="il-doit-y-avoir-un-moyen-plus-facile">Il doit y avoir un moyen plus&nbsp;facile!</h2>
<p>Qui ne s&#8217;est pas retrouvé un jour face un problème technique n&#8217;offrant
visiblement aucune solution? Tourner le problème dans tous les sens ne suffit
parfois pas à le résoudre: on est bloqué! La deadline approche, c&#8217;est la
panique! Il est bon à ce moment-là - voir bien avant si possible - de ce poser
ce genre de&nbsp;questions:</p>
<ul>
<li>
<p>Est-ce qu&#8217;il y a une autre solution plus facile à implémenter? Est-ce
qu&#8217;il est obligé de le résoudre de cette manière? Parfois faire les choses
juste autremement peut être non seulement plus facile à implémenter mais
encore mieux: offrir une solution que le client n&#8217;avait pas forcément imaginée
et qui&nbsp;l&#8217;enchante!</p>
</li>
<li>
<p>Est-ce que je suis en train de passer mon temps sur le vrai problème?
Attention! Les défis techniques peuvent se transformer en vraies de trappes
mangeuses de&nbsp;temps.</p>
</li>
<li>
<p>Pourquoi ce problème est-il un? Pourquoi est-ce si difficile de le
résoudre? Le formuler, à soi ou à un collègue peut ouvrir la porte à une&nbsp;solution.</p>
</li>
<li>
<p>Est-ce que la fonctionnalité sous-jacente nous posant problème à
implémenter est réellement indispensable? &#8220;Instead of outdoing, try
underdoing.&#8221; - <a href="http://gettingreal.37signals.com/ch02_Build_Less.php">Build Less</a> du livre <a href="http://gettingreal.37signals.com/index.php">Getting&nbsp;Real</a></p>
</li>
</ul>
<p>Je ne sais pas pourquoi mais il m&#8217;arrive régulièrement de rester bloqué sur un
problème et de me rendre compte tout d&#8217;un coup que la solution pourrait être
beaucoup plus simple! Mais est-ce que je suis le seul dans ce cas? Une chose
est sûre, ce genre de questions ne peut qu&#8217;aider à s&#8217;en&nbsp;sortir!</p>
]]></description>
         <pubDate>18 Feb 09 00:00 GMT</pubDate>
         <author>jacqueminv@gmail.com (Valentin Jacquemin)</author>
      </item>    
      <item>
         <title>Que conseilleriez-vous à quelqu'un qui voudrait devenir programmeur mais sans aller à l'uni?</title>
         <link>http://www.poxd.org/blog/que-conseilleriez-vous-a-quelquun-qui-voudrait-devenir-programmeur-mais-sans-aller-a-luni.html</link>
         <guid>http://www.poxd.org/blog/que-conseilleriez-vous-a-quelquun-qui-voudrait-devenir-programmeur-mais-sans-aller-a-luni.html</guid>
         <description><![CDATA[

<p>Un changement d&#8217;orientation professionnelle est aujourd&#8217;hui certainement plus
facile qu&#8217;auparavent. La question se pose donc pour les programmeurs
reconvertis mais également à ceux qui n&#8217;ont pas la possibilité d&#8217;accéder à une
formation supérieure (pour cause de manque de financement, de temps, charges
familiales, etc.) ou encore qui n&#8217;en ont tout simplement pas envie! <strong>Quels
conseils donneriez-vous à quelqu&#8217;un voulant devenir programmeur sur le tas
sans passer par une formation universitaire?</strong> Premièrement, ne pas baisser
les bras c&#8217;est tout à fait possible! Le monde online donne accès à une mine
d&#8217;information gigantesque. Le plus dur sera donc peut-être de s&#8217;organiser pour
tirer le meilleur parti possible de ce savoir qui nous tend les bras. Dans ce
sens, il faudra sûrement résister à la tentation de vouloir trop en faire. Le
développement couvre une foule de sujets intéressants, attention donc à ne pas
se disperser. Une tactique peut être de dresser une liste de sujets ((Ne pas
hésiter à demander de l&#8217;aide pour élaborer cette liste)) à suivre afin
d&#8217;assimiler tous les concepts dans l&#8217;ordre. La deuxième étape sera de trouver
les informations pour chaque sujets, cela peut aller d&#8217;un simple tutoriel à un
cours online et gratuit donné &#8212; justement &#8212; par une université. Internet a
grandement encouragé le partage du savoir, autant en&nbsp;profiter!</p>
<h1 id="par-ou-commencer">Par où&nbsp;commencer?</h1>
<p>Voici un extrait d&#8217;une <a href="http://www.reddit.com/goto?id=7qf6f">discussions sur reddit</a>:</p>
<p><img alt="Conversation sur reddit - repère de Hackers" src="http://www.poxd.org/wp-content/uploads/2009/01/reddit_self_learning.png" /></p>
<p><span class="caps">LE</span> livre donc par lequel commencer: <a href="http://mitpress.mit.edu/sicp/"><span class="caps">SICP</span></a>. Rendez-vous sur ce site,
récupérez le livre &#8212; gratuitement &#8212; et étudiez-en le contenu. Etudier,
c&#8217;est-à-dire lire, visionner les <a href="http://groups.csail.mit.edu/mac/classes/6.001/abelson-sussman-lectures/">vidéos </a>et &#8212; surtout &#8212; faire les
exercices, tout les exercices! On n&#8217;est pas à l&#8217;école mais justement raison de
plus! Il faut vraiment assimiler le contenu de ce bouquin. Un autre avantage
de se focaliser sur ce livre est qu&#8217;il devrait susciter votre curiosité et
vous pousser à approfondir vos connaissances dans le développement en général.
Prenez note de chacun de ces domaines mais gardez-les pour plus tard! C&#8217;est
aller (trop) loin que de dire qu&#8217;après avoir lu ce livre, vous serez plus
avancé qu&#8217;un informaticien sortant de l&#8217;université. Par contre, ce sera
certainement une excellente base! C&#8217;est un livre consistant mais gardez
courage et aller jusqu&#8217;au bout<sup id="fnref:1"><a href="#fn:1" rel="footnote">1</a></sup>! Parallèlement à cela, mettez la main à la pâte: <span class="caps">CODER</span>! C&#8217;est en
forgeant qu&#8217;on devient forgeron. Pour se faire trouvez un projet open-source
plutôt que de partir dans votre coin. Trouvez un projet, récupérez le code
source, modifiez, testez, jouez avec. Coder est peut-être la meilleure
formation imaginable mais le plus gros avantage à développer sur un projet
open-source est de <em>cotoyer</em> des développeurs expérimentés et souvent (très)
talentueux &#8212; des geeks passionés. Si vous êtes perdus et que vous ne savez pas
vers quel projet vous tourner, jetez peut-être un oeil à la demande sur le
marché de l&#8217;emploi pour orienter votre choix en rapport à la technologie&nbsp;utilisée.</p>
<p>Troisième et dernier conseil, prenez régulièrement du temps pour parcourir les
blogs de développeurs que vous appréciez, voir au fil du temps que vous
admirez. Ajoutez encore à ces blogs, un ou deux sites communautaires tels que
reddit (section <a href="http://www.reddit.com/r/programming/">programming</a>) ou encore <a href="http://dzone.com/">dzone </a>et tenez-vous ainsi au
courant des tendances actuelles, des expériences d&#8217;autres développeurs ou
encore de l&#8217;état actuel des produits que vous aimez. Mais attention! Fixez-
vous une limite à ce temps pour qu&#8217;il ne déborde pas sur les deux princiaples
activités précédemment&nbsp;citées.</p>
<h3 id="quelques-articles-interessants-de-developpeurs">Quelques articles intéressants de&nbsp;développeurs</h3>
<ul>
<li>
<p><a href="http://www.norvig.com/21-days.html">Teach Yourself Programming in Ten Years</a> par Peter&nbsp;Norvig</p>
</li>
<li>
<p><a href="http://steve.yegge.googlepages.com/practicing-programming">Practicing Programming</a> par Steve&nbsp;Yegge</p>
</li>
<li>
<p><a href="http://www.codinghorror.com/blog/archives/000552.html">How Not To Become a Rockstar Programmer</a> Jeff&nbsp;Atwood</p>
</li>
<li>
<p><a href="http://savvyduck.blogspot.com/2009/01/do-i-need-cs-degree-to-be-software.html">Do I Need a <span class="caps">CS</span> Degree to be a Software&nbsp;Developer?</a></p>
</li>
</ul>
<h1 id="avant-de-nous-quitter">Avant de nous&nbsp;quitter</h1>
<p>Le plus important: programmer doit vous faire plaisir! Si vous ne prenez pas
de plaisir arrêtez, pour être développeur il faut être passionné. Devenir
programmeur se résume donc à étudier, coder, et ce dans un cycle continu.
Suivez-le si la passion vous anime! Voilà pour une liste non exhaustive de
plusieurs choses à faire pour devenir &#8212; à mon avis &#8212; un bon&nbsp;programmeur&#8230;</p>
<p>Qu&#8217;en&nbsp;pensez-vous?</p>
]]></description>
         <pubDate>22 Jan 09 00:00 GMT</pubDate>
         <author>jacqueminv@gmail.com (Valentin Jacquemin)</author>
      </item>    
      <item>
         <title>Tests unitaires JavaScript avec YUI</title>
         <link>http://www.poxd.org/blog/tests-unitaires-javascript-avec-yui.html</link>
         <guid>http://www.poxd.org/blog/tests-unitaires-javascript-avec-yui.html</guid>
         <description><![CDATA[

<p>La méthodologie <span class="caps">TDD</span>, <a href="http://www.poxd.org/blog/2008/12/03/test-driven-development-et-javascript/">on l&#8217;a vu</a>, propose d&#8217;écrire les tests comme première
étape de code. Mais comment s&#8217;y prendre en JavaScript? Jetons un oeil à la
solution proposée par les développeurs Yahoo! Ceux connaissant Java ont
l&#8217;habitude des frameworks tel JUnit ou encore TestNG. Le principe est le même
avec <span class="caps">YUI</span> Test (développé donc par Yahoo!) qui va être utilisé lors de cet
article. Si maintenant nous entrons dans le coeur du sujet, imaginons que nous
ayons à programmer une fonction qui vérifie que l&#8217;entrée d&#8217;un formulaire est
bien un nombre. Si l&#8217;on suit la méthodologie <span class="caps">TDD</span>, on écrit d&#8217;abord le test de
cette fonction. Cela va donner quelque chose comme&nbsp;ça:</p>
<div class="syntax"><pre><span class="kd">var</span> <span class="nx">oTestCase</span> <span class="o">=</span> <span class="k">new</span> <span class="nx"><span class="caps">YAHOO</span></span><span class="p">.</span><span class="nx">tool</span><span class="p">.</span><span class="nx">TestCase</span><span class="p">({</span>
    <span class="nx">name</span><span class="o">:</span> <span class="s2">&quot;Test Common Fonctions&quot;</span><span class="p">,</span>
    <span class="nx">setUp</span> <span class="o">:</span> <span class="kd">function</span> <span class="p">()</span> <span class="p">{</span>
        <span class="k">this</span><span class="p">.</span><span class="nx">data</span> <span class="o">=</span> <span class="p">[</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="s1">&#39; -1&#39;</span><span class="p">,</span> <span class="s1">&#39;+1&#39;</span><span class="p">,</span> <span class="s1">&#39;a234&#39;</span><span class="p">,</span> <span class="s1">&#39;034&#39;</span><span class="p">];</span>
    <span class="p">},</span>
    <span class="nx">tearDown</span> <span class="o">:</span> <span class="kd">function</span> <span class="p">()</span> <span class="p">{</span>
        <span class="k">delete</span> <span class="k">this</span><span class="p">.</span><span class="nx">data</span><span class="p">;</span>
    <span class="p">},</span>
    <span class="nx">testIsNumber</span><span class="o">:</span> <span class="kd">function</span> <span class="p">()</span> <span class="p">{</span>
        <span class="kd">var</span> <span class="nx">n</span><span class="p">,</span> <span class="nx">notN</span><span class="p">,</span> <span class="nx">result</span><span class="p">;</span>
        <span class="nx">n</span> <span class="o">=</span> <span class="k">this</span><span class="p">.</span><span class="nx">data</span><span class="p">[</span><span class="mi">0</span><span class="p">];</span>
        <span class="nx">result</span> <span class="o">=</span> <span class="nx">isNumber</span><span class="p">(</span><span class="nx">n</span><span class="p">);</span>
        <span class="nx"><span class="caps">YAHOO</span></span><span class="p">.</span><span class="nx">util</span><span class="p">.</span><span class="nx">Assert</span><span class="p">.</span><span class="nx">isTrue</span><span class="p">(</span><span class="nx">result</span><span class="p">);</span>
    <span class="p">},</span>
<span class="p">});</span>
</pre></div>

<p>Quelques explications sont peut-être&nbsp;nécessaires:</p>
<ul>
<li>
<p>On utilise ici l&#8217;objet <span class="caps">YAHOO</span>.tool.TestCase qui permet de rassembler nos
tests. Dans l&#8217;idéal il faudrait veiller à garder un objet <em>logique</em>,
c&#8217;est-à-dire ayant un ensemble de tests qui ont un rapport entre eux comme par
exemple le test d&#8217;un fichier javascript&nbsp;spécifique.</p>
</li>
<li>
<p>La propriété _name _permet de savoir quel test a été lancé. On le verra
plus loin, une console nous permet de savoir rapidement si des tests ont
échoués ou&nbsp;réussis.</p>
</li>
<li>
<p>Les fonctions setUp et tearDown permettent de définir et détruire des
objets nécessaires aux&nbsp;tests.</p>
</li>
<li>
<p>Les tests en eux-mêmes commencent par <em>test</em> (ici testIsNumber). Ces
contiennent ce qu&#8217;on appelle des <a href="http://developer.yahoo.com/yui/yuitest/#assertions">assertions</a>, qui en l&#8217;occurence dans le
cas présent va vérifier que la valeur retournée par isNumber vaut bien true.
Dans l&#8217;exemple ci-dessus je ne teste que la première entrée du membre data,
mais c&#8217;est un exemple, ce n&#8217;est pas un test complet. Pour bien faire ses
tests, il faut essayer de tester tous les cas&nbsp;possibles.</p>
</li>
</ul>
<p>Passons maintenant à la deuxième étape: l&#8217;implémentation de notre fonction&nbsp;isNumber:</p>
<div class="syntax"><pre><span class="kd">function</span> <span class="nx">isNumber</span><span class="p">(</span><span class="nx">chain</span><span class="p">)</span> <span class="p">{</span>
    <span class="k">try</span> <span class="p">{</span>
        <span class="nx">intval</span><span class="p">(</span><span class="nx">chain</span><span class="p">);</span>
        <span class="k">return</span> <span class="kc">true</span><span class="p">;</span>
    <span class="p">}</span> <span class="k">catch</span> <span class="p">(</span><span class="nx">e</span><span class="p">)</span> <span class="p">{</span>
        <span class="k">return</span> <span class="kc">false</span><span class="p">;</span>
    <span class="p">}</span>
<span class="p">}</span>
</pre></div>

<p>Nous avons donc notre implémentation de prête. L&#8217;exemple est ici très simple
et j&#8217;espère qu&#8217;il ne déssert par la méthodologie dans le sens que <strong>ce n&#8217;est
pas une perte de temps que de commencer par les tests</strong>. Un code dont on prend
la peine de bien tester devient vraiment robuste et <em>facilement</em> maintenable.
Le développeur garde également confiance en son code et si un nouveau
développeur vient sur son code il peut rapidement se faire la main simplement
en parcourant les tests! Bref, de nombreux avantages&#8230; Maintenant pour lancer
les tests, c&#8217;est comme toujours très simple avec&nbsp;<span class="caps">YUI</span>:</p>
<div class="syntax"><pre><span class="nx"><span class="caps">YAHOO</span></span><span class="p">.</span><span class="nx">tool</span><span class="p">.</span><span class="nx">TestRunner</span><span class="p">.</span><span class="nx">add</span><span class="p">(</span><span class="nx">oTestCase</span><span class="p">);</span>
<span class="kd">var</span> <span class="nx">oLogger</span> <span class="o">=</span> <span class="k">new</span> <span class="nx"><span class="caps">YAHOO</span></span><span class="p">.</span><span class="nx">tool</span><span class="p">.</span><span class="nx">TestLogger</span><span class="p">();</span>
<span class="nx"><span class="caps">YAHOO</span></span><span class="p">.</span><span class="nx">tool</span><span class="p">.</span><span class="nx">TestRunner</span><span class="p">.</span><span class="nx">run</span><span class="p">();</span>
</pre></div>

<p>Et encore uniquement les deux dernières lignes sont nécessaires! En ajoutant
la première on a l&#8217;avantage d&#8217;avoir un affichage plus précis sur une console
comme&nbsp;celle-là:</p>
<p><img alt="Console YUI " src="http://www.poxd.org/wp-content/uploads/2008/12/yui_console.png" /></p>
<p>Simple non? La documentation fera découvrir encore d&#8217;autres utilisations
possibles de <span class="caps">YUI</span> Test mais encore une fois, je ne peux qu&#8217;encourager cette
méthode de développement qui facilitera la vie à bien plus&nbsp;d&#8217;un!</p>
<h2 id="pour-aller-plus-loin">Pour aller plus&nbsp;loin</h2>
<ul>
<li>
<p><a href="http://developer.yahoo.com/yui/yuitest/">La documentation de <span class="caps">YUI</span> Test</a> pour découvrir toutes les possibilités
du&nbsp;framework.</p>
</li>
<li>
<p><a href="http://fr.video.yahoo.com/watch/3737228/10267335">La vidéo</a> (~50 minutes) qui m&#8217;a fait découvrir <span class="caps">YUI</span>&nbsp;Test.</p>
</li>
<li>
<p><a href="http://www.poxd.org/wp-content/uploads/2008/12/yuitestshow.txt">Code source</a> de&nbsp;l&#8217;exemple</p>
</li>
<li>
<p><a href="http://iridescence.no/post/JavaScript-is-Code-Too-Test-It!.aspx">Autre billet parlant de <span class="caps">YUI</span> Test</a> en anglais qui va dans le même&nbsp;sens</p>
</li>
<li>
<p><a href="http://yuiblog.com/blog/2009/01/05/effective-tests/">Writing Effective JavaScript Unit Tests with <span class="caps">YUI</span>&nbsp;Test</a></p>
</li>
</ul>
]]></description>
         <pubDate>18 Dec 08 00:00 GMT</pubDate>
         <author>jacqueminv@gmail.com (Valentin Jacquemin)</author>
      </item>    
      <item>
         <title>DOM et ses bonnes pratiques</title>
         <link>http://www.poxd.org/blog/dom-et-ses-bonnes-pratiques.html</link>
         <guid>http://www.poxd.org/blog/dom-et-ses-bonnes-pratiques.html</guid>
         <description><![CDATA[

<p>J&#8217;ai terminé le visionnage d&#8217;une série <a href="http://fr.video.yahoo.com/watch/111584/996008">de</a> <a href="http://fr.video.yahoo.com/watch/111583/996002">3</a> <a href="http://fr.video.yahoo.com/watch/111584/996008">vidéos</a> concernant
les bonnes pratiques sur du traitement <span class="caps">DOM</span>. Je voulais en garder une trace
parce que ces vidéos contiennent vraiment des choses&nbsp;intéressantes&#8230;</p>
<p><em>Ceci n&#8217;est pas une introduction à <span class="caps">DOM</span>. Si cet acronyme vous est inconnu vous
n&#8217;êtes pas sur le bon article, un bon point de départ: <a href="http://fr.wikipedia.org/wiki/Document_Object_Model">Wikipedia </a></em></p>
<p>Présentateur: <a href="http://www.crockford.com/">Douglas&nbsp;Crockford</a></p>
<h1 id="gestionnaires-devenements">Gestionnaires&nbsp;d&#8217;événements</h1>
<p>Il existe pas moins de 3 méthodes pour affecter une fonction à un type
d&#8217;événement sur un&nbsp;noeud:</p>
<ul>
<li><em>node</em>[&#8220;on&#8221; + type] = <em>fonction</em></li>
<li><em>node._attachEvent(&#8220;on&#8221; + type,  _fonction</em>) - valide uniquement sur&nbsp;<span class="caps">IE</span></li>
<li><em>node._addEventListener(type, _fonction</em>, false) - Recommendation W3c mais
non supporté sur&nbsp;<span class="caps">IE</span></li>
</ul>
<p>Pour bien faire, il faut utiliser les 3! Vive le monde du web&#8230; En plus <span class="caps">IE</span>
possède une variable globale event contenant les données de l&#8217;événement
(source, target, etc.) alors que le <span class="caps">W3C</span> recommande le passage d&#8217;un paramètre
au gestionnaire contenant ces&nbsp;données&#8230;</p>
<h2 id="fuites-memoire">Fuites&nbsp;mémoire</h2>
<p>Toujours prendre bien garde que <span class="caps">IE</span> 6 utilise une stratégie minimaliste
concernant la gestion de la mémoire. Cette stratégie se base sur un entier
incrémenté lorsqu&#8217;une nouvelle référence à un objet se crée et décrémenté
lorsque cette référence est supprimée&#8230; Le problème surgit lorsqu&#8217;une
application met en oeuvre des références circulaire (explications et exemples
sur <a href="http://www.crockford.com/javascript/memory/leak.html">cet article de Crockford</a>). Cette gestion peut facilement occasionner
des fuites mémoires et ce particulièrement lorsque les gestionnaires
d&#8217;événements interviennent. <span class="caps">IE</span> crée une référence cyclique entre le noeud <span class="caps">DOM</span>
sur lequel on attache un gestionnaire et le code de ce gestionnaire lui-même
(dans le cas où ce code utilise le noeud - donc très souvent), c&#8217;est là qu&#8217;est
le problème&#8230; Ce qui fait qu&#8217;il faudra explicitement mettre à null tous les
membres d&#8217;un noeud étant une fonction avant de le retirer (ou de le remplacer,
attention aussi par l&#8217;intermédiaire de innerHTML) du <span class="caps">DOM</span> sous peine de voir
proliférer des zones mémoires occupées et qui le resteront tant que <span class="caps">IE</span> reste&nbsp;ouvert!</p>
<h1 id="tips">Tips</h1>
<p>Pour simple rappel perso je publie ici encore quelques conseils à ne pas&nbsp;oublier:</p>
<ul>
<li>placer les balises javascript le plus bas possible dans le document&nbsp;<span class="caps">HTML</span></li>
<li>placer les imports des fichiers <span class="caps">CSS</span> le plus haut&nbsp;possible</li>
<li>rassembler les fichiers externes autant que possible (une bonne piste:<a href="http://developer.yahoo.com/yui/compressor/">
<span class="caps">YUI</span> Compressor</a> pour les js et les&nbsp;css)</li>
<li>ne pas utiliser&nbsp;document.write</li>
<li>ne pas utiliser les collections de l&#8217;objet document (anchors, forms,&nbsp;etc.)</li>
<li>ne pas utilier&nbsp;document.all</li>
<li>les éléments dans le <span class="caps">DOM</span> sont en <span class="caps">MAJUSCULES</span> (tendance à&nbsp;l&#8217;oublier)</li>
<li>utiliser la méthode setAttribute des noeuds plutôt que d&#8217;affecter la
valeur à la propriété&nbsp;directement</li>
<li>cloner un noeud retourne un noeud qui n&#8217;est pas dans le&nbsp;<span class="caps">DOM</span></li>
</ul>
<p>Quelques indices bon à savoir pour créer une application web toujours plus
performante! <strong>Note:</strong> utiliser un framework comme <a href="http://developer.yahoo.com/yui/"><span class="caps">YUI</span></a> simplifiera
souvent <strong>beaucoup</strong> les&nbsp;choses.</p>
]]></description>
         <pubDate>14 Dec 08 00:00 GMT</pubDate>
         <author>jacqueminv@gmail.com (Valentin Jacquemin)</author>
      </item>    
      <item>
         <title>Conception et développement Spring - 3ème jour</title>
         <link>http://www.poxd.org/blog/conception-et-developpement-spring-3eme-jour.html</link>
         <guid>http://www.poxd.org/blog/conception-et-developpement-spring-3eme-jour.html</guid>
         <description><![CDATA[

<p>Ces 3 jours de formation ont été vraiment sympa. Ils m&#8217;ont permis de surtout
en apprendre au niveau conception par rapport à l&#8217;intitulé du cours. Comme
j&#8217;avais déjà parcouru le livre Spring In Action, les infos révélées en rapport
à Spring lui-même ne m&#8217;ont pas été d&#8217;un grand apport. Merci donc à Logica pour
cette sympathique opportunité! Le 3ème jour a été passé à implémenter la
solution finale du cas d&#8217;authentification avec une intégration d&#8217;Hibernate et
Struts. Je mets le <a href="http://dl.getdropbox.com/u/132511/formation_spring.zip">code source à disposition</a> comme simple référence. Le
zip contient un versioning de chaque étape que l&#8217;on a suivi en cours. Si vous
avez des questions n&#8217;hésitez pas à me&nbsp;contacter!</p>
]]></description>
         <pubDate>12 Dec 08 00:00 GMT</pubDate>
         <author>jacqueminv@gmail.com (Valentin Jacquemin)</author>
      </item>    
      <item>
         <title>JavaFX 1.0 est sorti!</title>
         <link>http://www.poxd.org/blog/javafx-10-est-sorti.html</link>
         <guid>http://www.poxd.org/blog/javafx-10-est-sorti.html</guid>
         <description><![CDATA[

<p>Le domaine des applications riches m&#8217;intéresse toujours plus et j&#8217;ai de la
chance parce qu&#8217;en ce moment l&#8217;activité dans le domaine est chargée! Adobe
prépare Flex 4 et Catalyst, Microsoft s&#8217;ouvre aussi avec Silverlight&#8230; Et
aujourd&#8217;hui Sun s&#8217;y met avec son nouveau-né: JavaFX. Ca m&#8217;intéresse tellement
que j&#8217;en avais<a href="http://vjacquemin.blogspot.com/"> ouvert un blog</a> il y a 6 mois de cela (plus très actif pour
le moment mais j&#8217;avais commencé un petit tuto sur&nbsp;JavaFX). </p>
<p>Donc aujourd&#8217;hui c&#8217;est JavaFX qui est au centre du sujet, que fait <a href="http://javafx.com/about/">valoir Sun</a>
pour ce nouveau venu? Alors en&nbsp;bref:</p>
<ul>
<li>langage s&#8217;exécutant au sein de la machine virtuelle, on parle donc
toujours de langage Java compilé au&nbsp;final</li>
<li>applications multi-supports: desktop, web, tv,&nbsp;mobile</li>
<li><strong>support&nbsp;audio-vidéo</strong></li>
<li>découpage entre développeurs et&nbsp;designers</li>
</ul>
<p>On se trouve donc à la version 1.0 de la plateforme, logique que l&#8217;on se
trouve loin (très loin) de ce qu&#8217;offre Flex par exemple en terme de
composants. Mais le fait que ce soit du java n&#8217;est vraiment pas pour me
déplaire, ce langage m&#8217;a toujours bien plu. Le problème c&#8217;est que sans
composants à mettre en avant il va être difficile de mettre en place des
applications riches en entreprise&#8230; Cependant l&#8217;un des atouts majeurs de Java
est d&#8217;avoir une communauté énorme de plus composée de grands talents. On peut
donc espérer voir arriver bientôt un nombre important de jolies démo. Un autre
point important à relever est la richesse de Java sur lequel se base JavaFX.
Le nombre de librairies venant par exemple d&#8217;Apache est bien là pour démontrer
la richesse de la communauté. Toutes ces librairies sont toujours utilisables
depuis JavaFX, en ce sens Java a un bon coup à jouer. <em>Last but not least</em>, un
nombre impressionnant d&#8217;applications tournent en entreprise sur Java et ce que
ce soit desktop, web ou même mobile. Un point de plus donc qui fait penser que
l&#8217;adoption de JavaFX peut se faire rapidement&#8230; On&nbsp;verra.</p>
<h3 id="pour-aller-plus-loin">Pour aller plus&nbsp;loin:</h3>
<ul>
<li><a href="http://www.javafx.com/">JavaFX</a> : le site officiel avec beaucoup d&#8217;exemples, tutos,&nbsp;etc.</li>
<li><a href="http://blogs.sun.com/chrisoliver/">Chris Oliver&#8217;s Weblog</a> : le tout premier développeur de F3 - ancien
nom de&nbsp;JavaFX</li>
<li><a href="http://learnjavafx.typepad.com/">James Weaver&#8217;s JavaFX Blog</a> : blog d&#8217;un précurseur dans l&#8217;utilisation
de&nbsp;JavaFX</li>
<li><a href="http://silveiraneto.net/">Silvera Neto</a> blog : blog d&#8217;un autre développeur&nbsp;JavaFX</li>
</ul>
]]></description>
         <pubDate>08 Dec 08 00:00 GMT</pubDate>
         <author>jacqueminv@gmail.com (Valentin Jacquemin)</author>
      </item>    
      <item>
         <title>Test Driven Development et JavaScript</title>
         <link>http://www.poxd.org/blog/test-driven-development-et-javascript.html</link>
         <guid>http://www.poxd.org/blog/test-driven-development-et-javascript.html</guid>
         <description><![CDATA[

<p><span class="caps">TDD</span> est une méthodologie bien connue &#8212; devrait en tout cas &#8212; des développeurs,
mais l&#8217;appliquez-vous à votre code JavaScript? Personnellement, moi non. En
tout cas pas jusqu&#8217;à maintenant&#8230; Je dois dire que je n&#8217;y prêtais même pas
attention, je fonçais tête baissée dans le code et ensuite hop je lançais
firebug et essayais de voir ce qui n&#8217;allait pas. Pour moi, le développement
JavaScript n&#8217;était pas vraiment ma tasse de thé mais il est évident qu&#8217;en
procédant de cette manière, il était difficile d&#8217;espérer une autre issue
Voyons donc ce que la méthodologie <span class="caps">TDD</span> peut apporter en terme d&#8217;<strong>efficacité</strong>
et de <strong>professionalisme</strong>. Mais qu&#8217;est-ce que <span class="caps">TDD</span>, quels en sont les
avantages, et comment l&#8217;appliquer au code JavaScript? Je vais essayer de
répondre à ces questions dans cet&nbsp;article.</p>
<h1 id="quest-ce-donc-que-tdd">Qu&#8217;est-ce donc que&nbsp;<span class="caps">TDD</span></h1>
<p><span class="caps">TDD</span> est une méthodologie de développement faisant la part belle aux tests
unitaires. Dans la pratique cela voudra dire que les tests se feront avant le
code à proprement parler. Schématisons tout&nbsp;ça:</p>
<p><img alt="Méthodologie TDD" src="http://www.poxd.org/wp-content/uploads/2008/12/tdd_js.jpg" /></p>
<p>Le processus est très simple &#8212; si l&#8217;on prend une fonctionnalité précise à&nbsp;implémenter:</p>
<ol>
<li>Conception: étape où l&#8217;on définit la fonctionnalité, où l&#8217;on réfléchit à
l&#8217;interface et aux paramètres d&#8217;entrée et de sortie nécessaires à son&nbsp;fonctionnement</li>
<li>Écriture des tests: la réponse à &#8220;<strong>comment mon code doit se comporter</strong>&#8221;
&#8212; suivant ces données en entrée, je m&#8217;attend à cet état en&nbsp;sortie</li>
<li>Code: implémentation de la&nbsp;fonctionnalité</li>
<li>Lancement des tests sur le code: si les tests révèlent une erreur, retour
à l&#8217;étape 3 et ainsi de suite jusqu&#8217;à ce que tous les tests soient&nbsp;réussis</li>
</ol>
<p>Au premier abord, il peut paraître étrange d&#8217;écrire des tests sur du code que
l&#8217;on a même pas commencé à écrire. Mais comme on va le voir, plusieurs
avantages ressortent de cette manière de&nbsp;faire.</p>
<h1 id="ses-avantages">Ses&nbsp;avantages</h1>
<p>Écrivez en premier lieu les tests unitaires de vos fonctionnalités et vous
verrez alors &#8212; dans le désordre &#8212;&nbsp;que:</p>
<ul>
<li>vous aurez plus facilement identifié les tâches à effectuer pour
implémenter vos&nbsp;fonctionnalités</li>
<li>vous aurez une meilleure compréhension de votre&nbsp;code</li>
<li>vous gagnerez du temps au final lorsqu&#8217;il faudra amener des évolutions à
votre&nbsp;application</li>
<li>vous aurez un excellent point de départ lorsqu&#8217;un bug vous sera rapporté
(eh oui il y a toujours des bugs &#8212; dans ce cas soit le test unitaire n&#8217;a pas
couvert totalement le code, soit la conception n&#8217;a pas prévu tous les cas
possibles ou encore une utilisation de la fonctionnalité n&#8217;avait pas été&nbsp;prévue)</li>
</ul>
<p>Sûrement que d&#8217;autres bienfaits ne sont pas sortis de mon cerveau à temps pour
les lister ici mais c&#8217;est déjà pas mal! Ces avantages en valent certainement
la peine encore faut-il essayer cette méthodologie! Dans le cas présent je
voulais l&#8217;appliquer à du code JavaScript. Quelles sont les possibilités de ce&nbsp;côté-là?</p>
<h1 id="yui-test"><span class="caps">YUI</span>&nbsp;Test</h1>
<p><a href="http://developer.yahoo.com/yui/"><span class="caps">YUI</span></a> est un framework javascript développé par <span class="caps">YAHOO</span>! qui fournit de
nombreux composants graphiques mais pas seulement. Bref, si vous ne connaissez
pas je vous encourage vivement à y jeter un oeil, il facilite beaucoup les
choses&#8230; Au passage, lire les sources du framework peut être une très bonne
idée dans le but d&#8217;améliorer ses compétences dans ce langage. Le framework
lui-même contient une batterie de tests complète pour chaque composant, rien
de tel pour se former! Ce framework fournit les bases nécessaires pour se
lancer de l&#8217;écriture de tests unitaires javascript. Par l&#8217;intermédiare des
classes <span class="caps">YAHOO</span>.tool.TestCase, <span class="caps">YAHOO</span>.tool.TestRunner et <span class="caps">YAHOO</span>.tool.TestLogger
tout est prêt pour se lancer! Il permet de plus de simuler des événement
utilisateurs comme un clic de la souris. Last but not least, ce framework est
compatible avec la majorité des browsers, donc plus (ou presque) de soucis à
se&nbsp;faire!</p>
]]></description>
         <pubDate>03 Dec 08 00:00 GMT</pubDate>
         <author>jacqueminv@gmail.com (Valentin Jacquemin)</author>
      </item>    
      <item>
         <title>Conception et développement Spring - 2ème jour</title>
         <link>http://www.poxd.org/blog/conception-et-developpement-spring-2eme-jour.html</link>
         <guid>http://www.poxd.org/blog/conception-et-developpement-spring-2eme-jour.html</guid>
         <description><![CDATA[

<p>Après le 1er jour, nous avons pu voir comment séparer convenablement les
couches d&#8217;une application et une première piste pour modulariser celle-ci.
Modularisation grace au modèle de conception Factory Method. Durant le
deuxième jour, nous avons vu comment aller plus loin avec l&#8217;introduction de
l&#8217;inversion de&nbsp;contrôle.</p>
<h1 id="inversion-de-controle">Inversion de&nbsp;contrôle</h1>
<p>Ces trois lettres ont été longtemps à la mode sur la
toile: IoC ou <a href="http://en.wikipedia.org/wiki/Inversion_of_control">Inversion of Control</a>. Ce modèle est la base du container de
Spring et bien que je connaissais déjà Spring avant cette formation, j&#8217;ai eu
un véritable plaisir à suivre la méthodologie adoptée, à savoir implémenter
les concepts de Spring nous-mêmes pour découvrir les avantages à l&#8217;utiliser.
Lors du premier jour, l&#8217;abstraction au moyen du modèle Factory Method a permis
de bien délimiter les différentes couches applicatives et de maintenir une
certaine indépendance entre&nbsp;elles.</p>
<blockquote>
<p>Avant d&#8217;arriver concrètement à l&#8217;inversion de contrôle il nous a fallu élever
à un niveau encore supérieur nos factories. Une Factory Application. Suite à
cette refactorisation, nous nous retrouvons avec plus qu&#8217;une seule Factory
utilisée pour récupérer chaque couche applicative (cf.&nbsp;schéma).</p>
</blockquote>
<p>L&#8217;inversion de contrôle trouve tout son sens à partir de là. Puisqu&#8217;il est
possible d&#8217;avoir une seule Factory pour chaque module, pourquoi ne pas en
externaliser l&#8217;implémentation et la gestion afin de développer nos
applications de manière modulaire? C&#8217;est ce que Spring fait (entre&nbsp;autre).</p>
<p>Le reste de la journée a été passée à implémenter l&#8217;étude de cas en utilisant
Spring et en intégrant une Datasource. L&#8217;objectif de cette retrospective n&#8217;est
pas de montrer du code mais plutôt d&#8217;insister sur la conception. Je publierai
plus tard un billet conernant l&#8217;utilisation de base de&nbsp;Spring.</p>
<h1 id="osgi"><span class="caps">OSGI</span></h1>
<p>Notre prof n&#8217;a fait qu&#8217;une toute petite parenthèse sur <span class="caps">OSGI</span> mais c&#8217;est un
élément qu&#8217;il me faut aborder et creuser à l&#8217;avenir. Encore un acronyme très à
la mode actuellement. Voici un extrait de ce que nous dit <a href="http://fr.wikipedia.org/wiki/OSGi">Wikipedia</a> sur
le&nbsp;sujet:</p>
<blockquote>
<p>une plate-forme de services basée sur le langage <a href="http://fr.wikipedia.org/wiki/Java_%28langage%29" title="Java (langage)">Java</a> qui peut être
gérée de manière distante. Le cœur de cette spécification est un framework
(cadriciel) qui définit un modèle de gestion de cycle de vie d’une
application, un référentiel (registry) de services, un environnement
d&#8217;exécution et des modules. Basés sur ce framework, un grand nombre de couches
(Layers) <span class="caps">OSGI</span>, d’<span class="caps">API</span> et de services ont été&nbsp;définis</p>
</blockquote>
<p>Plutôt pas mal dans l&#8217;objectif de modularisation d&#8217;applications&#8230; A&nbsp;investiguer&#8230;</p>
<p>Ce deuxième jour nous a donc appris ce que faisait Spring en le mettant en
oeuvre par nous-même pour ensuite commencer à réellement l&#8217;utiliser. L&#8217;étude
de cas est utilisable en fin de journée mais uniquement en interrogeant une
base de données au travers de <span class="caps">JDBC</span>. Le dernier jour, nous avons appris à
intégrer deux frameworks ultra-connus: Hibernate et&nbsp;Struts.</p>
]]></description>
         <pubDate>30 Nov 08 00:00 GMT</pubDate>
         <author>jacqueminv@gmail.com (Valentin Jacquemin)</author>
      </item>    
      <item>
         <title>Conception et développement Spring - 1er jour</title>
         <link>http://www.poxd.org/blog/conception-et-dveloppement-spring-1er-jour.html</link>
         <guid>http://www.poxd.org/blog/conception-et-dveloppement-spring-1er-jour.html</guid>
         <description><![CDATA[

<p>Paris m&#8217;accueille parée de bleu pour cette formation Spring que j&#8217;espérais
enrichissante. Le 1er jour ne m&#8217;aura pas déçu! Le formateur nous a donné pour
commencer les différents points développés durant cette&nbsp;formation:</p>
<ol>
<li>Paysage web&nbsp;actuel</li>
<li>Fondamentaux Spring (2ème&nbsp;jour)</li>
<li>Intégration de différents frameworks au moyen de Spring (2ème et 3ème&nbsp;jour)</li>
</ol>
<h1 id="paysage-actuel">Paysage&nbsp;actuel</h1>
<p>Autrement dit quels frameworks sont à notre diposition actuellement pour
réaliser nos applications web ((Je focalise bien sûr ici sur les solutions
Java <span class="caps">JEE</span>))? Le bilan est une longue liste partageable en 3&nbsp;couches:</p>
<ul>
<li>Présentation: Struts 1.x/ Struts 2.x - Jsf - Gwt -&nbsp;Cocoon</li>
<li>Persistance: Hibernate - iBatis - <span class="caps">EJB</span> -&nbsp;<span class="caps">JDBC</span></li>
<li><span class="caps">EAI</span>: <span class="caps">JMS</span> -&nbsp;<span class="caps">WS</span></li>
</ul>
<p>L&#8217;idée ici est de montrer que le paysage est plutôt chargé et que si nous
désirons utiliser plusieurs de ces frameworks (ou d&#8217;autres) il serait pratique
de pouvoir facilement les emboîter. Bon c&#8217;est pas trop difficile à deviner,
dans notre cas Spring sera la solution dédiée. Solution qui s&#8217;affirme plus
clairement de jour en jour à (pratiquement) toute solution <span class="caps">JEE</span>. Voici donc la
première chose à retenir: Spring est (quasi de-facto) le socle de base d&#8217;une
solution <span class="caps">JEE</span> utilisant plusieurs frameworks de différentes&nbsp;couches.</p>
<h1 id="objectif-modulaire">Objectif:&nbsp;modulaire</h1>
<p>Le formateur nous le fait comprendre rapidement: <strong>une solution non modulaire
est une solution destinée à l&#8217;échec</strong>. Et attention, la modularité technique
(apportée grâce au modèle <span class="caps">MVC</span>) n&#8217;est pas une finalité! Ce que nous désirons
ici en tant que concepteur d&#8217;applications c&#8217;est d&#8217;avoir également une
modularité fonctionnelle. Autrement dit la possibilité de réutiliser certains
services sur plusieurs applications avec le moins de codage possible (Plug and
Play). Le bienfait de raisonner de cette manière? Le code produit devient
facilement réutilisable et la maintenance sera un régal comparé à ce que l&#8217;on
peut trouver sur certains projets&#8230; En effet passer par exemple de Hibernate
v2 à v3 nous demandera de modifier uniquement le module persistance de notre
application sans impacter le restant du code. De plus, d&#8217;un côté fonctionnel,
nous pourrons par exemple réutiliser un service d&#8217;authentification de manière
transparente sur une autre application&#8230; Et donc de ce fait, une meilleure
visibilité, une meilleure productivité et une réelle valeur ajoutée grâce aux
différents services&nbsp;réutilisables.</p>
<h1 id="etude-de-cas">Etude de&nbsp;cas</h1>
<p>Durant cette formation, nous mettons en oeuvre une étude de cas chère aux
français: la gestion des congés (bon au final on s&#8217;est penché uniquement sur
le module d&#8217;authentification). Nous avons ainsi débuté la conception de cette
étude de cas en utilisant une distribution d&#8217;Eclipse que je ne connaissais pas
personnellement, <a href="http://topcased-mm.gforge.enseeiht.fr/website/index.html">topcased</a>. Cette distribution est fourni avec une
perspective <span class="caps">UML</span> gratuite et open-source permettant de créer tous les
diagrammes <span class="caps">UML</span> utiles à la conception d&#8217;applications. Pour cette phase de
conception je découvre encore un nouvel élément: Le <a href="http://jargonf.org/wiki/2TUP">cycle en Y</a>. J&#8217;y
reviendrai plus tard&#8230; Comme décrit dans ce cycle, les livrables peuvent être
dispatchés sur une architecture distribuée. Sur ce point, le formateur nous a
précisé quelque chose d&#8217;intéressant concernant les machines virtuelles Java et
leur capacité à monter en charge. En effet, un réflex lorsqu&#8217;une application à
de la peine à tourner pourrait être de rajouter des ressources physiques (<span class="caps">RAM</span>
et/ou processeur). Il faut cependant garder à l&#8217;esprit qu&#8217;une <span class="caps">JVM</span> ne pourra
pas dépasser un certain plafond puisque le Garbage Collector effectuera son
boulot sur une quantité de mémoire toujours plus grande et prendra ainsi
toujours plus de temps à le faire. Ce plafond atteint, il ne servira à rien de
lui donner plus de mémoire, la seule solution alors est d&#8217;ajouter un (ou
plusieurs) nouveaux serveurs. A tenir en compte lorsqu&#8217;un serveur vendu avec
une licence de plusieurs milliers de francs est&nbsp;choisi&#8230;</p>
<h2 id="conception">Conception</h2>
<p>L&#8217;approche lors de cette formation a été à mon avis optimale. L&#8217;idée était de
découvrir Spring en débutant par mettre en place son fonctionnement de base
nous-même afin d&#8217;en discerner le comportement et par la même occassion les
bénéfices d&#8217;une telle architecture. Après un
bref résumé du modèle <span class="caps">MVC</span> et de son utilité dans la conception d&#8217;applications,
la première étape dans cette découverte a été de mettre en place le modèle de
conception <a href="http://fr.wikipedia.org/wiki/Fabrique_(patron_de_conception)">Factory Method</a>. Nous nous sommes ainsi retrouvés avec une
factory sur les couches persistance et service comme le montre le schéma ci-
contre. En mettant en place ce modèle nous garantissons la possibilité de
changer d&#8217;implémentation de façon centralisée. De plus, il devient possible en
suivant cette architecture de reprendre la couche service, persistance et
entité et de réutiliser ce <strong>module</strong> dans une autre application. Nous avons
donc là une <strong>modularité fonctionnelle</strong>! On approche une solution modulaire
mais comme nous le verrons prochainement on peut encore faire mieux et c&#8217;est
lors du 2ème jour de cette formation qu&#8217;on l&#8217;a&nbsp;vu.</p>
]]></description>
         <pubDate>17 Nov 08 00:00 GMT</pubDate>
         <author>jacqueminv@gmail.com (Valentin Jacquemin)</author>
      </item>    
      <item>
         <title>Exercice SICP 1.10</title>
         <link>http://www.poxd.org/blog/exercice-sicp-110.html</link>
         <guid>http://www.poxd.org/blog/exercice-sicp-110.html</guid>
         <description><![CDATA[

<p>J&#8217;ai terminé la lecture du premier chapitre de <span class="caps">SICP</span> et j&#8217;ai commencé à
m&#8217;attaquer aux exercices qui se sont entassés au fur et à mesure de ma
progression. Initialement, je pensais les faire directement durant ma lecture
mais ma flemme ajoutée à mon envie d&#8217;avancer dans la lecture du bouquin m&#8217;y
ont découragé. L&#8217;avantage de devoir revenir maintenant sur les exercices c&#8217;est
que j&#8217;ai la possibilité de revoir - par la pratique cette fois-ci - les
concepts que j&#8217;ai passivement lu dans le livre. A mon avis celà devrait graver
d&#8217;autant mieux la matière dans mon esprit&#8230;. Soit mais bon maintenant le
titre de ce billet n&#8217;attendait ni plus ni moins la solution de l&#8217;exercice
1.10! Donc nous y voilà, je mets ici ma solution parce qu&#8217;elle m&#8217;a pris pas
mal de ligne à l&#8217;expliquer et je ne veux pas trop poluer ma page dédiée aux
exercices de <span class="caps">SICP</span>&#8230; Cet exercice propose de prédire le résultat de la
<a href="http://fr.wikipedia.org/wiki/Fonction_d%27Ackermann">fonction d&#8217;Ackerman</a><a href="http://">n</a> (générateur de grands nombres très rapide grâce
à la récursivité) au vu de certains paramètres donnés. La fonction d&#8217;Ackermann
est fournie par le&nbsp;livre:</p>
<div class="syntax"><pre><span class="p">(</span><span class="k">define </span><span class="p">(</span><span class="nf">A</span> <span class="nv">x</span> <span class="nv">y</span><span class="p">)</span>
    <span class="p">(</span><span class="k">cond </span><span class="p">(</span> <span class="p">(</span><span class="nb">= </span><span class="nv">y</span> <span class="mi">0</span><span class="p">)</span> <span class="mi">0</span><span class="p">)</span>
            <span class="p">(</span> <span class="p">(</span><span class="nb">= </span><span class="nv">x</span> <span class="mi">0</span><span class="p">)</span> <span class="p">(</span><span class="nb">* </span><span class="mi">2</span> <span class="nv">y</span><span class="p">))</span>
            <span class="p">(</span> <span class="p">(</span><span class="nb">= </span><span class="nv">y</span> <span class="mi">1</span><span class="p">)</span> <span class="mi">2</span><span class="p">)</span>
    <span class="p">(</span><span class="k">else </span><span class="p">(</span><span class="nf">A</span> <span class="p">(</span><span class="nb">- </span><span class="nv">x</span> <span class="mi">1</span><span class="p">)</span> <span class="p">(</span><span class="nf">A</span> <span class="nv">x</span> <span class="p">(</span><span class="nb">- </span><span class="nv">y</span> <span class="mi">1</span><span class="p">))))))</span>
</pre></div>

<p>Mon objectif a été de résoudre qu&#8217;un seul des trois exercices&nbsp;proposés:</p>
<div class="syntax"><pre><span class="p">(</span><span class="nf">A</span> <span class="mi">2</span> <span class="mi">4</span><span class="p">)</span>

<p><span class="p">(</span><span class="nf">A</span> <span class="mi">1</span> <span class="p">(</span><span class="nf">A</span> <span class="mi">2</span> <span class="mi">3</span><span class="p">))</span></p>
<p><span class="p">(</span><span class="nf">A</span> <span class="mi">2</span> <span class="mi">3</span><span class="p">)</span> <span class="nv">=</span> <span class="mi">16</span></p>
<p><span class="p">(</span><span class="nf">A</span> <span class="mi">1</span> <span class="p">(</span><span class="nf">A</span> <span class="mi">2</span> <span class="mi">2</span><span class="p">))</span></p>
<p><span class="p">(</span><span class="nf">A</span> <span class="mi">2</span> <span class="mi">2</span><span class="p">)</span> <span class="nv">=</span> <span class="mi">4</span></p>
<p><span class="p">(</span><span class="nf">A</span> <span class="mi">1</span> <span class="p">(</span><span class="nf">A</span> <span class="mi">2</span> <span class="mi">1</span><span class="p">))</span></p>
<p><span class="p">(</span><span class="nf">A</span> <span class="mi">1</span> <span class="mi">2</span><span class="p">)</span></p>
<p><span class="p">(</span><span class="nf">A</span> <span class="mi">1</span> <span class="mi">2</span><span class="p">)</span></p>
<p><span class="p">(</span><span class="nf">A</span> <span class="mi">0</span> <span class="p">(</span><span class="nf">A</span> <span class="mi">1</span> <span class="mi">1</span><span class="p">))</span></p>
<p><span class="p">(</span><span class="nf">A</span> <span class="mi">0</span> <span class="mi">2</span><span class="p">)</span></p>
<p><span class="mi">4</span></p>
<p><span class="p">(</span><span class="nf">A</span> <span class="mi">1</span> <span class="mi">4</span><span class="p">)</span> <span class="nv">=</span> <span class="mi">16</span></p>
<p><span class="p">(</span><span class="nf">A</span> <span class="mi">0</span> <span class="p">(</span><span class="nf">A</span> <span class="mi">1</span> <span class="mi">3</span><span class="p">))</span></p>
<p><span class="p">(</span><span class="nf">A</span> <span class="mi">1</span> <span class="mi">3</span><span class="p">)</span></p>
<p><span class="p">(</span><span class="nf">A</span> <span class="mi">0</span> <span class="p">(</span><span class="nf">A</span> <span class="mi">1</span> <span class="mi">2</span><span class="p">))</span></p>
<p><span class="p">(</span><span class="nf">A</span> <span class="mi">0</span> <span class="mi">4</span><span class="p">)</span> <span class="nv">=</span> <span class="mi">8</span></p>
<p><span class="p">(</span><span class="nf">A</span> <span class="mi">1</span> <span class="mi">16</span><span class="p">)</span> <span class="nv">=</span> <span class="mi">2</span> <span class="nv">^16</span> <span class="nv">=</span> <span class="mi">65536</span>
</pre></div></p>
<p>En espérant être assez clair, j&#8217;ai procédé la fonction en suivant l
&#8216;<a href="http://en.wikipedia.org/wiki/Applicative-"><em>applicative-order</em></a> pour ne pas finir avec une ligne immense mais plutôt
remplacer chaque appel de fonction avec la valeur calculée. Ce qui finalement
nous amène à (A 1 16). A ce moment-là, j&#8217;aurais pu continuer le processing
jusque trouver la solution mais on peut constater une abstraction lorsque la
fonction d&#8217;Ackerman est appelée suivant le motif <em>(A 1 n)</em>:</p>
<ul>
<li>(A 1 2) =&nbsp;4</li>
<li>(A 1 3) =&nbsp;8</li>
<li>(A 1 4) =&nbsp;16</li>
</ul>
<p>Autrement dit, (A 1 n) = 2 ^ n et donc (A 1 16) = 2 ^ 16 = 65536. Trouver ce
motif permet en plus de répondre à la 2ème partie de la&nbsp;question:</p>
<pre><code>(define (f n) (A 0 n)) = 2*n

(define (g n) (A 1 n)) = 2^n

(define (h n) (A 2 n)) = 2 ^ 2 ^ 2 ... n fois
</code></pre>
<p>La dernière se retrouve également dans la preuve de (A 2&nbsp;4):</p>
<ul>
<li>
<p>(A 2 3) = 16 = 2 ^ 2 ^&nbsp;2</p>
</li>
<li>
<p>(A 2 2) = 4 = 2 ^&nbsp;2</p>
</li>
<li>
<p>(A 2 1) = 2 = 2 ^ 1 (cas spécial dans la&nbsp;fonction)</p>
</li>
</ul>
<p>Si ce genre d&#8217;exercices vous intéressent, je ne peux que vous conseiller la
lecture de&nbsp;<span class="caps">SICP</span>!</p>
<p>order_evaluation#Applicative_order</p>
]]></description>
         <pubDate>27 Oct 08 00:00 GMT</pubDate>
         <author>jacqueminv@gmail.com (Valentin Jacquemin)</author>
      </item>    
      <item>
         <title>Traitement de fichiers PDF en python et un client satisfait</title>
         <link>http://www.poxd.org/blog/traitement-de-fichiers-pdf-en-python-et-un-client-satisfait.html</link>
         <guid>http://www.poxd.org/blog/traitement-de-fichiers-pdf-en-python-et-un-client-satisfait.html</guid>
         <description><![CDATA[

<p>Si vous lisez ce blog, vous savez que j&#8217;aime bien Java et Flex. Mais lorsqu&#8217;on
a besoin de faire des traitements typiquement automatisés et accédant au
système ou ne demandant aucune interaction graphique avec l&#8217;utilisateur ces
langages ne sont certainement pas les mieux adaptés. Je ne vais pas m&#8217;étendre
sur cette assertion maintenant&#8230; Ca pourrait faire le sujet d&#8217;un autre billet
tiens&#8230; Mon choix personnel du moment pour ce type d&#8217;action porte sur Python.
((Python is a dynamic object-oriented programming language that can be used
for many kinds of software development. - <a href="www.python.org">www.python.org</a>)) Le but ici
n&#8217;est pas de défendre les atouts de Python. Ceux-ci sont déjà largement
reconnus par les développeurs. Le nombre de projets open-source l&#8217;atteste tout
comme le classement <a href="http://www.tiobe.com/index.php/content/paperinfo/tpci/index.html"><span class="caps">TIOBE</span></a> évoqué il y a <a href="http://www.poxd.org/2008/07/10/netbeans-et-python/">quelques temps</a>. Récemment
j&#8217;ai eu la joie de faire un petit développement en freelancing ayant pour but
un simple traitement de fichiers <span class="caps">PDF</span>. Python a une nouvelle fois pleinement
répondu à mes attentes. Ce que j&#8217;aime principalement lorsque je développe en
Python c&#8217;est sa simplicité et de ce fait la rapidité de développement
associée, le nombre de librairies disponibles ou encore un code naturellement
facile à lire. Pour ce projet, le workflow était le&nbsp;suivant:</p>
<ol>
<li>
<p>Lister tous les fichiers <span class="caps">PDF</span> du dossier&nbsp;courant</p>
</li>
<li>
<p>Parser chaque fichier et récupérer le texte le plus haut dans la première&nbsp;page</p>
</li>
<li>
<p>Enregistrer le fichier avec cette&nbsp;valeur</p>
</li>
</ol>
<p>Très simple en apparence. Mais c&#8217;est sans compter sur le fait que les fichiers
<span class="caps">PDF</span> ont une structure disons pas très naturelle. J&#8217;ai donc du passer un
certain temps à comprendre cette structure. Pour ce faire j&#8217;ai utilisé la
libraire <a href="http://www.unixuser.org/~euske/python/pdfminer/index.html">PDFMiner</a> codée par <a href="http://cs.nyu.edu/yusuke/">Yusuke Shinyama</a> qui a fait un excellent
boulot en l&#8217;occurence. Après avoir atteint ces 3 objectifs j&#8217;ai simplement du
me pencher sur les possibilités de python à compiler le tout en exécutable
Mac&#8230; Et là c&#8217;est <a href="http://stackoverflow.com/questions/2933/an-executable-python-app">stackoverflow qui m&#8217;a aidé</a>&#8230; <a href="http://svn.pythonmac.org/py2app/py2app/trunk/doc/index.html">py2app</a> m&#8217;a permis
de compiler le tout et hop le tour est joué! Sur ce, l&#8217;expérience python m&#8217;a
une fois de plus convaincu mais qu&#8217;est-ce qu&#8217;en a pensé mon client? Aussi
clair qu&#8217;un code&nbsp;Python:</p>
<blockquote>
<p>Test réussi! C&#8217;est parfait. Je vous remercie beaucoup de l&#8217;excellente&nbsp;collaboration.</p>
</blockquote>
<p>Ca fait toujours plaisir&nbsp;:D</p>
]]></description>
         <pubDate>11 Oct 08 00:00 GMT</pubDate>
         <author>jacqueminv@gmail.com (Valentin Jacquemin)</author>
      </item>    
      <item>
         <title>Apprentissage de Flex</title>
         <link>http://www.poxd.org/blog/apprentissage-de-flex.html</link>
         <guid>http://www.poxd.org/blog/apprentissage-de-flex.html</guid>
         <description><![CDATA[

<p>Alors que j&#8217;ai bien de la peine à avancer ma progression en ce qui concerne
<a href="http://www.poxd.org/2008/06/16/structure-and-interpretation-of-computer-programs/"><span class="caps">SICP</span></a> (la pile d&#8217;exercices est effrayante, j&#8217;ai stoppé la lecture du
bouquin..), j&#8217;ai commencé mon apprentissage de Flex. Par chance je suis bien
plus sérieux de coté-là. Allez savoir pourquoi&#8230; Enfin bref, je ne veux pas
lâcher <span class="caps">SICP</span> ça c&#8217;est sûr (la lecture en est très instructive) mais comme
j&#8217;aime à le faire, j&#8217;ai commencé à reporter ce que j&#8217;apprends sur Flex dans un
document que <a href="http://docs.google.com/Doc?id=dhbjj3rb_4685m6f8vx">je mets à disposition de qui voudra</a> (en ~anglais). Je le
mets à jour à mesure de mon avancement, n&#8217;hésitez donc pas à le consulter
régulièrement. Ce sont des notes en vrac mais qui peuvent être utiles pour
tout nouvel arrivant sur Flex, enfin je l&#8217;espère! Quelques resources à ceux
qui voudraient également se lancer dans cette&nbsp;aventure:</p>
<ul>
<li><a href="http://www.insideria.com/2008/02/lffs1-meet-the-authors-meet-fl.html">La série <span class="caps">LFFS</span></a> sur <a href="http://www.insideria.com/">InsideRIA</a></li>
<li><a href="http://www.adobe.com/devnet/flex/videotraining/">Flex in a Week</a> conçu par&nbsp;Adobe</li>
</ul>
<p>Et bien sûr comme toujours, je suis preneur de tout conseils ou suggestions
dans cet&nbsp;apprentissage.</p>
]]></description>
         <pubDate>24 Sep 08 00:00 GMT</pubDate>
         <author>jacqueminv@gmail.com (Valentin Jacquemin)</author>
      </item>    
      <item>
         <title>Stackoverflow en version publique</title>
         <link>http://www.poxd.org/blog/stackoverflow-en-version-publique.html</link>
         <guid>http://www.poxd.org/blog/stackoverflow-en-version-publique.html</guid>
         <description><![CDATA[

<p>L&#8217;info cours sur la toile: l&#8217;ouverture d&#8217;une nouvelle plateforme <em>programming
Q&amp;A</em> complètement ouverte et gratuite. Cette nouvelle plateforme a pour nom
stackoverflow et a été initiée par (non des moindres) les auteurs des blogs
<a href="http://www.codinghorror.com">Coding Horror</a> et<a href="http://www.joelonsoftware.com"> Joel on Software</a>, j&#8217;ai nommé <a href="http://www.codinghorror.com/blog/archives/000021.html">Jeff Atwood</a> et<a href="http://fr.wikipedia.org/wiki/Joel_Spolsky">
Joel Spolsky.</a> Ce genre de plateforme tient son existence principalement à
la communauté qui la suit. Dès lors j&#8217;espère vraiment que soutient il y aura
et que le genre de &#8220;souci&#8221; que Joel décrit <a href="http://www.joelonsoftware.com/items/2008/09/15.html">dans son billet</a> disparaîtra
bel et bien, autrement dit, dès qu&#8217;une question se profile&#8230; Je ne tape non
plus google.com (avec ses inconvénients lors de questions précises..) mais
plutôt stackoverflow.com! L&#8217;idée est très bonne et les initiateurs sont des
gars très talentueux, on peut donc se dire qu&#8217;on est entre de bonnes mains et
que si espoir il devait y avoir, on est en tout cas bien parti pour que ça
prenne bonne&nbsp;forme.</p>
<p><img alt="" src="http://www.poxd.org/wp-content/uploads/img/2008-09-16_1114.png" /> </p>
<p>A ma première impression, je vois un design épuré,
une navigation conviviale et rapide. Je vois également que les auteurs
s&#8217;impliquent au niveau du contenu de la plateforme et ca c&#8217;est plutôt pas
mal&#8230; Il ne reste donc plus qu&#8217;à voir comment va réagir la communauté et si
l&#8217;engouement passé, un réel groupement de développeurs va venir enrichir le
contenu de&nbsp;ce:</p>
<blockquote>
<p>synthesize aspects of Wikis, Blogs, Forums, and Digg/Reddit in a way that is
somewhat&nbsp;original</p>
</blockquote>
<p>On croise les&nbsp;doigts!</p>
]]></description>
         <pubDate>16 Sep 08 00:00 GMT</pubDate>
         <author>jacqueminv@gmail.com (Valentin Jacquemin)</author>
      </item>    
      <item>
         <title>Netbeans et PHP</title>
         <link>http://www.poxd.org/blog/netbeans-et-php.html</link>
         <guid>http://www.poxd.org/blog/netbeans-et-php.html</guid>
         <description><![CDATA[

<p>Non je n&#8217;ai toujours pas jeté un oeil au support <span class="caps">PHP</span> (ni python d&#8217;ailleurs)
proposé par Netbeans. Et pourtant <a href="http://www.poxd.org/?p=78">j&#8217;encourageais</a> à le faire il y a
peu&#8230;. Bref c&#8217;est pas grave, une séance de rattrapage est proposée par les
éditeurs de <a href="http://netbeans.tv">Netbeans <span class="caps">TV</span></a> avec ce&nbsp;screencast:</p>
<p>En moins de 10 minutes, on y aborde l&#8217;intégration d&#8217;un projet <span class="caps">PHP</span>
(wordpress) couplée à la gestion de sa base de données (MySQL) mais aussi du
debugging et la traditionnelle completion syntaxique. Ca vaut vraiment le coup
de le visionner en plus accompagné par un accent indien toujours aussi&nbsp;sympa!</p>
]]></description>
         <pubDate>02 Sep 08 00:00 GMT</pubDate>
         <author>jacqueminv@gmail.com (Valentin Jacquemin)</author>
      </item>    
      <item>
         <title>Les atouts de Flex selon Ward</title>
         <link>http://www.poxd.org/blog/les-atouts-de-flex-selon-ward.html</link>
         <guid>http://www.poxd.org/blog/les-atouts-de-flex-selon-ward.html</guid>
         <description><![CDATA[

<p>Une <a href="http://www.uiresourcecenter.com/rich-internet-applications/articles/the-ria-puzzle.html?s=2_1">interview</a> très intéressante à lire si vous vous intéressez au
développement Flex mais que vous ne savez pas trop quels en sont les
avantages. <a href="http://www.jamesward.com/wordpress/2008/07/16/the-ria-puzzle/">James Ward</a> répond au <span class="caps">CEO</span> d&#8217;<a href="http://www.effectiveui.com/redirect.php?source=uirc">EffectiveUI</a> en mentionnant par
exemple deux cas d&#8217;utilisations en entreprise. Il met également en avant les
résultats d&#8217;une étude en cours d&#8217;élaboration par les gaillards d&#8217;Adobe : 30%
de temps de gagné en choisissant Flex! Certainement à prendre avec des
pincettes. <span class="caps">MAIS</span>! Oui mais.. Quelques lignes plus haut, Ward explique que le
temps perdu à débugger de l&#8217;<span class="caps">AJAX</span>, on le récupère directement sur Flex puisque
le framework gère lui-même les communications client/serveur. Or&#8230; Le temps
de débuggage quantifié est égal à&#8230; 30%! Vous en avez marre de débugger de
l&#8217;<span class="caps">AJAX</span>? Il serait peut-être temps de jeter un oeil à&nbsp;Flex&#8230;</p>
<p><img alt="" src="http://www.digitalbucket.net/Public/Download.ashx?q=edfd82fec6f30d1ca20b0dbcc90d2b91" /></p>
<h3 id="thinking-in-flex">Thinking in&nbsp;Flex!</h3>
<p>Toujours dans l&#8217;actualité Flex, le blog <a href="http://codemoiunmouton.wordpress.com/">Code moi un mouton</a> nous apprend
une <a href="http://codemoiunmouton.wordpress.com/2008/07/09/soiree-java-avec-james-ward/">bonne nouvelle</a>:</p>
<blockquote>
<p><strong>Scoop:</strong> James Ward et Bruce Eckel (l’auteur de Thinking in Java)
préparent un livre de 120 pages qui s’adresse à tous les développeurs qui
souhaitent apprendre Flex. Ca sent le&nbsp;best-seller…</p>
</blockquote>
<p>Pour ceux qui ont parcouru <a href="http://www.mindview.net/Books/TIJ/">Thinking in Java</a> (j&#8217;ai pu faire mes débuts
avec cet excellent bouquin) et qui souhaite en apprendre un peu plus sur Flex,
je sens que ca va être le point de départ idéal! Je me réjouis! Et pour finir
en beauté avec le monde Flash/Flex (du moins avec ce post), voici le dernier
clip de Radiohead réalisé en flash et ce sans caméra(!):  <a href="http://www.insideria.com/2008/07/impressive-data-visualization.html?sdid=DKANW">Quelques
explications ici</a> et <a href="http://blog.papervision3d.org/2008/07/15/radiohead%e2%80%99s-house-of-cards/">ici</a>.</p>
]]></description>
         <pubDate>21 Jul 08 00:00 GMT</pubDate>
         <author>jacqueminv@gmail.com (Valentin Jacquemin)</author>
      </item>    
      <item>
         <title>Netbeans et Python</title>
         <link>http://www.poxd.org/blog/netbeans-et-python.html</link>
         <guid>http://www.poxd.org/blog/netbeans-et-python.html</guid>
         <description><![CDATA[

<p><a href="http://www.netbeans.org/">Netbeans</a> est déjà un excellent <span class="caps">IDE</span> pour le langage Java, C/C++ et Ruby.
Il est certainement trop peu utilisé (moi y compris) face au quasi standard
Eclipse&#8230; Mais l&#8217;actualité récente le concernant devrait encourager plus d&#8217;un
à au moins l&#8217;essayer. Ses créateurs lui ajoutent en effet régulièrement <a href="http://www.artima.com/lejava/articles/javaone_2008_gregg_sporar.html">le
support de nouveaux langages</a>. </p>
<div style="text-align:center;"><img src="http://python.org/images/python-logo.gif" alt="python"/></div>

<p>Déjà avec la sortie de la version 6, Netbeans a apporté un
<a href="http://www.netbeans.org/kb/61/ide/javascript-editor.html">support à JavaScript</a> largement apprécié par la communauté.. La version
6.5 <a href="http://wiki.netbeans.org/NewAndNoteWorthyMilestone1NB65#section-NewAndNoteWorthyMilestone1NB65-PHP">prédit le support</a> de Php et avant-hier, <a href="http://www.infoq.com/news/2008/07/sun_python">InfoQ</a> a <a href="http://www.sauria.com/blog/2008/07/08/python-in-netbeans-nbpython/">diffusée
l&#8217;annonce</a> du support prévu de <a href="http://www.python.org">Python</a>! </p>
<p>Prenant forme d&#8217;un projet opensource, il est possible de retrouver les développeurs de ce projet sur le
site: <a href="https://nbpython.dev.java.net/" title="https://nbpython.dev.java.net/">https://nbpython.dev.java.net/</a> &#8230; Vous noterez que leur logo est
bien laid :) Excellent nouvelle que voilà, je me réjouis de voir ce que cela
va donner. C&#8217;est en tout cas une raison de plus de tester Netbeans. Python est
un langage qui monte avec constance et qui, comme le mentionne l&#8217;article
d&#8217;InfoQ, <a href="http://developers.slashdot.org/article.pl?sid=08/01/09/1819221">passe gentiment devant</a> <a href="http://www.perl.org/">Perl</a>. De plus, ce qui n&#8217;est pas
négligeable c&#8217;est que ce langage est très agréable à utiliser et possède une
forte communauté. Pour preuve Google a récemment lancé sa plateforme
<a href="http://code.google.com/appengine/">AppEngine</a> basée sur ce&nbsp;langage. </p>
<p>Si vous ne connaissez pas encore ce
langage, jetez-vous dessus! Le meilleur départ: <a href="http://www.diveintopython.org/">Dive Into Python</a>.
Dernière chose, Sun a lancé en parallèle un nouveau <em><a href="http://developers.sun.com/python/">Developper Center</a></em>
sur ce qui tourne autour de python, à ne pas&nbsp;manquer!</p>
]]></description>
         <pubDate>10 Jul 08 00:00 GMT</pubDate>
         <author>jacqueminv@gmail.com (Valentin Jacquemin)</author>
      </item>    
      <item>
         <title>Structure and Interpretation of Computer Programs</title>
         <link>http://www.poxd.org/blog/structure-and-interpretation-of-computer-programs.html</link>
         <guid>http://www.poxd.org/blog/structure-and-interpretation-of-computer-programs.html</guid>
         <description><![CDATA[

<p>J&#8217;ai recommencé la lecture de <a href="http://mitpress.mit.edu/sicp/full-text/book/book.html">Structure and Interpretation of Computer
Programs</a> et à l&#8217;image d&#8217;<a href="http://eli.thegreenplace.net/2007/06/19/introducing-the-sicp-reading-notes/">Eli Bendersky</a> je me fixe les objectifs
suivants:<img alt="" src="http://www.poxd.org/wp-content/uploads/2008/06/cover.jpg" /></p>
<ol>
<li>
<p>Lire le livre (ça doit être la 3ème fois que je le recommence ;)&nbsp;)</p>
</li>
<li>
<p>Visionner les <a href="http://www.swiss.ai.mit.edu/classes/6.001/abelson-sussman-lectures/">vidéos</a> du&nbsp;cours</p>
</li>
<li>
<p>Faire le maximum des exercices contenus dans le&nbsp;livre</p>
</li>
<li>
<p>Je mets cet objectif entre parenthèse: faire l&#8217;un des <a href="http://mitpress.mit.edu/sicp/psets/index.html"><em>assignements</em></a>
du&nbsp;cours</p>
</li>
</ol>
<p>Ce livre introduit de nombreux concepts et a été utilisé jusque très récemment
par le <span class="caps">MIT</span> comme support de cours. Grâce à cette lecture, j&#8217;espère développer
ma compréhension des langages fonctionnels mais aussi atteindre les attentes
du livre, expliquées dans la&nbsp;préface:</p>
<blockquote>
<p><strong>First</strong>, we want to establish the idea that a computer language is not
just a way of getting a computer to perform operations&#8230; Programs must be
written for people to read, and only incidentally for machines to execute.
<strong>Second</strong>, the techniques used to control the intellectual complexity of
large software&nbsp;systems</p>
</blockquote>
<p>Tout ce qui se rapporte à cet exercice se trouvera sous la catégorie <span class="caps">SICP</span>; en
mettant cela par écrit, j&#8217;espère me donner du courage et atteindre une bonne
fois pour toute cet objectif!&nbsp;Go!</p>
]]></description>
         <pubDate>16 Jun 08 00:00 GMT</pubDate>
         <author>jacqueminv@gmail.com (Valentin Jacquemin)</author>
      </item>    
      <item>
         <title>Building GWT Comet based web app using Grizzly Comet</title>
         <link>http://www.poxd.org/blog/building-gwt-comet-based-web-app-using-grizzly-comet.html</link>
         <guid>http://www.poxd.org/blog/building-gwt-comet-based-web-app-using-grizzly-comet.html</guid>
         <description><![CDATA[

<p>J&#8217;ai <a href="http://www.poxd.org/2007/11/19/java-et-le-web-20/">parlé il y a quelque temps</a> des difficultés de Java à fournir la
possibilité de mettre en place une architecture web riche&#8230; JavaOne étant
terminé, on retrouve maintenant ici et là les différentes présentations
disponibles sur le net et concernant ce sujet d&#8217;actualité, l&#8217;une d&#8217;elles
semble être particulièrement intéressante. J&#8217;ai nommé: <a href="https://www28.cplan.com/cc191/session_details.jsp?isid=294922&amp;ilocation_id=191-1&amp;ilanguage=english">Writing Real-Time Web
Applications, Using Google Web Toolkit and Comet</a>. Il est possible de
retrouver les slides de la présentations en cliquant <a href="http://weblogs.java.net/blog/jfarcand/archive/Grizzly_GWT_BOF-4922.pdf">sur ce lien</a>. La
présenation se base sur l&#8217;utilisation de l&#8217;outil de google <a href="http://code.google.com/webtoolkit/"><span class="caps">GWT</span></a> et du
serveur de Sun GlassFish couplé à <a href="http://weblogs.java.net/blog/jfarcand/archive/2006/07/the_grizzly_com.html">Grizzly Comet</a>.&nbsp;Enjoy!</p>
]]></description>
         <pubDate>21 May 08 00:00 GMT</pubDate>
         <author>jacqueminv@gmail.com (Valentin Jacquemin)</author>
      </item>    
      <item>
         <title>Package java.lang.reflect</title>
         <link>http://www.poxd.org/blog/package-javalangreflect.html</link>
         <guid>http://www.poxd.org/blog/package-javalangreflect.html</guid>
         <description><![CDATA[

<p>Après avoir substantiellement passé en revu le package <a href="http://www.poxd.org/2008/04/01/package-javalang/">java.lang</a>, je vais
me porter sur java.lang.reflect durant ce post. Comme son nom l&#8217;indique, nous
retrouvons dans ce package tout l&#8217;attirail nécessaire pour jouer avec la
<em>reflection</em>. Autrement dit, en ciblant un objet donné, nous pourrons
découvrir chacun de ses&nbsp;membres.</p>
<h3 id="a-quoi-ca-sert">A quoi ça sert&nbsp;?</h3>
<p>Concrètement, la <em>reflection</em> trouve son utilité par exemple
dans les éditeurs de développement (<span class="caps">IDE</span>). Comme l&#8217;image ci-dessous le montre,
ces outils nous permettent de découvrir la structure d&#8217;une classe mais aussi
où est-ce qu&#8217;elle se trouve dans la hierarchie objet. Ceci souvent au moyen
d&#8217;un arbre et ce que ce soit en cours de développement mais encore, de manière
avantageuse, en cours de&nbsp;débugage. </p>
<p><img alt="eclipse_refl" src="http://www.poxd.org/wp-content/uploads/2008/05/eclipse-refl.png" /></p>
<p>Il existe d&#8217;autres utilisations à la reflection comme par exemple dans les processus de sérialisation, dans
l&#8217;utilisation d&#8217;objets métiers distribués (<span class="caps">EJB</span>), les containers web et
d&#8217;inversion de contrôle etc. Mais dans la pratique comment font donc ces <span class="caps">IDE</span>
pour nous décrire la structure de nos objets? C&#8217;est ce que nous allons
découvrir maintenant avec la suite de cet&nbsp;article.</p>
<h3 id="les-classes-de-bases">Les classes de&nbsp;bases</h3>
<p>En plus des classes se trouvant dans ce package, il nous faudra également
faire appel à une classe étant dans le package java.lang: <a href="http://java.sun.com/javase/6/docs/api/java/lang/Class.html">Class</a>. Je n&#8217;en
avais pas encore parlé, voici donc le moment venu&#8230; Class représente une
classe (ou une interface) tournant dans la machine virtuelle. Les objets Class
sont créés automatiquement par la <span class="caps">JVM</span> au moyen du <a href="http://java.sun.com/javase/6/docs/api/java/lang/ClassLoader.html">ClassLoader </a>(faisant
aussi parti du package java.lang) au chargement. Il nous faut en premier lieu
utiliser cette classe avant de pouvoir profiter du contenu de
java.lang.reflect: <code>Class lClazz = Class.forName(className);</code> Suite à
l&#8217;exécution de cette ligne de code nous pouvons être certains qu&#8217;un objet
Class correspondant est créé. En effet, le ClassLoader ne va pas charger
toutes les classes de la librairie (ouf!) mais uniquement celles qui sont
utilisées dans&nbsp;l&#8217;application.</p>
<p><img alt="reflect" src="http://www.poxd.org/wp-content/uploads/2008/05/reflect1.png" /></p>
<p>Comme exemple j&#8217;ai créé une petite application<sup id="fnref:1"><a href="#fn:1" rel="footnote">1</a></sup> listant tous les membres d&#8217;une classe entrée par&nbsp;l&#8217;utilisateur.</p>
<p>champ texte par exemple org.poxd.Reflect ou n&#8217;importe quelle classe du&nbsp;<span class="caps">JDK</span></p>
<p>Comme vous pouvez le constater dans les sources après avoir l&#8217;objet Class tout
est accessible grâce aux classes <a href="http://java.sun.com/javase/6/docs/api/java/lang/reflect/Constructor.html">Constructor</a>, <a href="http://java.sun.com/javase/6/docs/api/java/lang/reflect/Field.html">Field</a>, <a href="http://java.sun.com/javase/6/docs/api/java/lang/reflect/Method.html">Method </a>et
<a href="http://java.sun.com/javase/6/docs/api/java/lang/reflect/Modifier.html">Modifiers </a>de l&#8217;<span class="caps">API</span> java.lang.reflect. A noter que grâce à la reflection,
il est possible de contourner les modificateurs d&#8217;accès! Pour davantage
d&#8217;informations, je vous invite à lire <em><a href="http://progx.org/index.php?section=replies&amp;newsid=572">Accès privé&#8230; pas tant que ça</a></em>.</p>
<p>Voilà pour les bases de la reflection. Maintenant un peu plus intéressant,
découvrons l&#8217;utilisation des Proxy et leur importance au sein d&#8217;un certain&nbsp;framework.</p>
<h3 id="proxy">Proxy</h3>
<p>La classe <a href="http://java.sun.com/javase/6/docs/api/java/lang/reflect/Proxy.html">Proxy</a> offre la possibilité de créer des <a href="http://fr.wikipedia.org/wiki/Proxy_%28patron_de_conception%29">proxy
dynamiques</a>. Autrement dit, elle permet d&#8217;ajouter une couche entre un
objet <em>target</em> et son créateur. Pourquoi rajouter une couche direz-vous&#8230; Eh
bien pour le découvrir entrons dans les entrailles du framework <a href="http://www.springframework.org/">Spring</a><sup id="fnref:2"><a href="#fn:2" rel="footnote">2</a></sup>. L&#8217;un des modules de Spring permet de faire de
la programmation par aspect (<span class="caps">AOP</span> pour Aspect Oriented Programming) ce qui
offre la possibilité de créer des classes avec une meilleure granularité.
Voici par exemple la configuration <span class="caps">XML</span> permettant d&#8217;afficher un message sur la
console avant l&#8217;appel de certaines&nbsp;méthodes: </p>
<div class="syntax"><pre><span class="nt">&lt;bean</span> <span class="na">id=</span><span class="s">&quot;kwikEMart&quot;</span> 
    <span class="na">class=</span><span class="s">&quot;org.springframework.aop.framework.ProxyFactoryBean&quot;</span><span class="nt">&gt;</span>
    <span class="c">&lt;!-- interface interface implémentée par l&#39;objet _target_ --&gt;</span>
    <span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">&quot;proxyInterfaces&quot;</span><span class="nt">&gt;</span>
        <span class="nt">&lt;value&gt;</span>org.poxd.store.KwikEMArt<span class="nt">&lt;/value&gt;</span>
    <span class="nt">&lt;/property&gt;</span> 
    <span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">&quot;interceptorNames&quot;</span><span class="nt">&gt;</span> 
        <span class="nt">&lt;list&gt;</span> 
            <span class="nt">&lt;value&gt;</span>welcomeAdvice<span class="nt">&lt;/value&gt;</span> 
        <span class="nt">&lt;/list&gt;</span> 
    <span class="nt">&lt;/property&gt;</span> 
    <span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">&quot;target&quot;</span><span class="nt">&gt;</span>
        <span class="nt">&lt;ref</span><span class="err">=&quot;kwikEMartTarget&quot;</span><span class="nt">/&gt;</span>
    <span class="nt">&lt;/property&gt;</span>
<span class="nt">&lt;/bean&gt;</span> `
</pre></div>

<p>Nous n&#8217;avons ici qu&#8217;une partie du travail à effectuer mais il y a ce qu&#8217;il
nous faut. Ce bout de code <span class="caps">XML</span> permet à Spring de créer un <em>ProxyFactoryBean</em>.
Cette classe offre la possibilité d&#8217;ajouter des <em>interceptors</em> dans le
<em>workflow</em> de votre application. Dans notre cas, le bean correspondant à
welcomeAdvice sera appelé (suivant une règle définie ailleurs) par exemple
avant l&#8217;invocation de la méthode start de notre application pour afficher un
message de&nbsp;bienvenue_._</p>
<p><img alt="proxy" src="http://www.poxd.org/wp-content/uploads/2008/05/proxy1.gif" /> </p>
<p>A la base nous avons toujours notre classe ne contenant aucun
appel à welcomAdvice. C&#8217;est Spring qui va rajouter cet appel avant de
poursuivre avec la classe que nous avons développé au départ. Pour ce faire,
Spring utilise un Proxy. L&#8217;image ci-contre démontre bien le fonctionnement.
Avant que le proxy <em>invoke</em> l&#8217;objet <em>target</em> il peut faire n&#8217;importe quelle
opération (dans notre cas appeler welcomeAdvice)! Et de notre côté,
l&#8217;architecture n&#8217;est pas touchée, nos classes ont un <em>focus</em> bien&nbsp;défini.</p>
<p>Voilà en pour ce qui concerne le package java.lang.ref. En attendant que je me
penche sur une partie du <span class="caps">JDK</span>, les commentaires sont les&nbsp;bienvenus!</p>
]]></description>
         <pubDate>09 May 08 00:00 GMT</pubDate>
         <author>jacqueminv@gmail.com (Valentin Jacquemin)</author>
      </item>    
      <item>
         <title>Teach Yourself Programming in ten years</title>
         <link>http://www.poxd.org/blog/teach-yourself-programming-in-ten-years.html</link>
         <guid>http://www.poxd.org/blog/teach-yourself-programming-in-ten-years.html</guid>
         <description><![CDATA[

<p>Je suis retombé récemment sur cet article extrêmement intéressant: <a href="http://norvig.com/21-days.html"><em>Teach
yourself programming in ten years</em></a>. Passé l&#8217;introduction, Peter Norvig
expose plusieurs points qui selon lui sont la recette du succès pour devenir
un bon programmeur. Peter Norvig est actuellement Directeur de Recherche chez
Google <span class="caps">US</span>, il est donc légitime de faire confiance en ses dire. Les voici en&nbsp;résumé:</p>
<ul>
<li>Avoir du plaisir! Programmer parce qu&#8217;on aime ça. Et le faire avec
suffisamment d&#8217;envie pour pouvoir le faire encore dix&nbsp;après.</li>
<li>Avoir un échange avec d&#8217;autres programmeurs. Lire le code d&#8217;autres
développeurs . Et aujourd&#8217;hui avec la multitude de projets open sources (qui a
dit Java?) il n&#8217;y a pas d&#8217;excuse pour trouver du code écrit par des&nbsp;professionnels.</li>
<li>Coder, coder, coder et encore coder! En effet, n&#8217;oublions pas que c&#8217;est en
forgeant que l&#8217;on devient&nbsp;forgeron.</li>
<li>Obtenir un titre universitaire permettra de postuler sur des emplois
demandant un papier et permettra également d&#8217;avoir une compréhension plus
profonde du sujet. Cependant l&#8217;expérience ne s&#8217;acquiert ni en lisant des
livres, ni en assistant à des cours. Il est donc possible de devenir un
programmeur professionnel en ayant uniquement une formation de base et en
développant ses compétences par la pratique. L&#8217;expérience de Peter Norvig nous
apprend que l&#8217;un des meilleures programmeurs qu&#8217;il ait eu l&#8217;occasion
d&#8217;embaucher était de niveau pré-universitaire (l&#8217;un des créateurs de netscape
entre&nbsp;autre).</li>
<li>Travailler avec d&#8217;autres&nbsp;programmeurs</li>
<li>Travailler sur des projets <a href="http://www.poxd.org/2008/01/28/lunion-fait-la-forcelunion-fait-la-force/">_après _d&#8217;autres programmeurs</a>.</li>
<li>Apprendre au moins une demi douzaine de langages. Un supportant
l&#8217;abstraction de class (Java, Python..), un supportant l&#8217;abstraction
fonctionnelle (Lisp, Haskel), un supportant l&#8217;abstraction syntactique (Lisp),
un supportant les spécifications déclaratives (C++ templates), un supportant
les coroutines (Scheme) et enfin un supportant le parallélisme&nbsp;(Sisal).</li>
<li>Prendre part dans l&#8217;effort de standardisation d&#8217;un langage. Même dans un
contexte local, sur un projet personnel par&nbsp;exemple.</li>
</ul>
<p>J&#8217;ai pris la liberté de ne pas mentionner tous les points mentionnés dans
l&#8217;article. Mais rien qu&#8217;avec cette liste, il y aura certainement toujours
quelque chose à faire, à améliorer. C&#8217;est aussi cela qui est passionnant avec
l&#8217;informatique. Se dire que l&#8217;on n&#8217;aura jamais fait le tour du sujet, qu&#8217;il
sera toujours possible d&#8217;en apprendre et de nourrir abondamment sa
curiosité&#8230; Ca ca me&nbsp;plait!</p>
]]></description>
         <pubDate>20 Apr 08 00:00 GMT</pubDate>
         <author>jacqueminv@gmail.com (Valentin Jacquemin)</author>
      </item>    
      <item>
         <title>Une aide bienvenue pour se certifier SCWCD</title>
         <link>http://www.poxd.org/blog/une-aide-bienvenue-pour-se-certifier-scwcd-2.html</link>
         <guid>http://www.poxd.org/blog/une-aide-bienvenue-pour-se-certifier-scwcd-2.html</guid>
         <description><![CDATA[

<p>Une seconde édition du livre <a href="http://www.oreilly.com/catalog/9780596516680/?CMP=NLC-HF707&amp;ATT=0408"><em>Head First Servlets and <span class="caps">JSP</span></em></a> est&nbsp;sortie!</p>
<p>Si vous êtes à la recherche d&#8217;une aide adéquate pour obtenir le niveau de la
certification <span class="caps">SCWCD</span>, ce livre est parfait! Cette seconde édition couvre la
spécification 5 de Java Entreprise alors que la précédente portait sur la
version 1.4. Par contre pour ceux qui sont déjà certifié sur la version 4 je
ne pense pas qu&#8217;il y ait un grand intérêt à la passer du fait que les ajouts
ont surtout été fait au niveau du langage et moins sur les specs&nbsp;Servlet/<span class="caps">JSP</span>.</p>
<p>Faisant partie de la série Head First (existe aussi en français sous le nom
<em><a href="http://www.oreilly.fr/tags/t%C3%AAte-la-premi%C3%A8re">Tête la Première</a></em> - cet ouvrage n&#8217;est pas traduit), la lecture est non
seulement facile, elle aide énormément à la mémorisation et à la
compréhension. Les auteurs se sont en effet mis au courant des dernières
avancées en recherche cognitive et on peut dire que c&#8217;est sacrément&nbsp;efficace!</p>
<p>Et si vous êtes curieux n&#8217;hésitez pas à jeter un oeil aux <a href="http://www.oreilly.com/store/series/headfirst.html">autres livres de la
série</a> qui abordent des sujets plus intéressant les uns que les&nbsp;autres!</p>
]]></description>
         <pubDate>16 Apr 08 00:00 GMT</pubDate>
         <author>jacqueminv@gmail.com (Valentin Jacquemin)</author>
      </item>    
      <item>
         <title>Package java.lang</title>
         <link>http://www.poxd.org/blog/package-javalang.html</link>
         <guid>http://www.poxd.org/blog/package-javalang.html</guid>
         <description><![CDATA[

<p>La <a href="http://java.sun.com/javase/6/docs/api/">bibliotheque Java</a> est vaste, tres vaste. Sans conteste cela lui
procure une grande richesse puisque de ce fait il est possible de quasiment
tout faire avec. Il devient cependant de plus en plus difficile de s&#8217;y
retrouver a mesure que le langage evolue. Ces evolutions sont bien regulees
par le <em>Java Community Process</em> mais n&#8217;empeche que les fonctionnalites sont
toujours plus&nbsp;nombreuses!</p>
<p>Je vais tenter par une serie de plusieurs articles de parcourir quelques-uns
des packages de Java afin de montrer les differentes classes disponibles. Bien
sur ce ne sera qu&#8217;un survol mais toujours utile, que l&#8217;on decouvre le langage
ou que l&#8217;on ait davantage l&#8217;habitude d&#8217;utiliser Java (enfin&nbsp;j&#8217;espere).</p>
<p>Pour bien commencer, prenons les choses par le debut: <a href="http://java.sun.com/javase/6/docs/api/java/lang/package-summary.html">java.lang</a>. Ce
package est automatiquement importe lorsque l&#8217;on developpe en Java. Toutes les
classes presentes dans ce package sont tres souvent utilisees dans les
programmes et le compilateur nous facilite la vie en faisant lui-meme le lien
lorsqu&#8217;il en rencontre une&nbsp;utilisation.</p>
<h3 id="wrapper-types">Wrapper&nbsp;types</h3>
<p>On retrouve ainsi la definition des types de Java (<em>Boolean</em>, <em>Byte</em>,
<em>Character</em>&#8230; et le venerable <em>Object</em> sans qui rien ne serait possible). On
les nomme generalement _<a href="http://en.wikipedia.org/wiki/Wrapper_type">Wrapper types</a> _pour faire ressortir que ce n&#8217;est
que la correspondance des types natifs (ou primitifs) qui sont utilises
lorsque l&#8217;on fait par&nbsp;exemple:</p>
<div class="syntax"><pre><span class="kt">int</span> <span class="n">theResponse</span> <span class="o">=</span> <span class="mi">42</span><span class="o">;</span>
</pre></div>

<p>Lorsque l&#8217;on code sur Java a partir de la version 5, une fonctionnalite
existante peut faire completement oublier ce concept: l&#8217;autoboxing. En effet,
precedemment le code suivant ne compilait&nbsp;pas:</p>
<div class="syntax"><pre><span class="n">Integer</span> <span class="n">laReponseATteVosQuestion</span> <span class="o">=</span> <span class="mi">42</span><span class="o">;</span>
</pre></div>

<h3 id="threading">Threading</h3>
<p>Tous les outils de concurrences ne se trouvent pas dans ce package. Cependant,
le socle de base de la programmation multi-threading est integre dans
<em>java.lang</em>. On y trouve la classe de base: <a href="http://java.sun.com/javase/6/docs/api/java/lang/Thread.html">java.lang.Thread</a> mais aussi
par exemple <a href="http://java.sun.com/javase/6/docs/api/java/lang/ThreadLocal.html">java.lang.ThreadLocal</a> qui est utilisee afin d&#8217;implementer le
pattern <a href="http://www.ibm.com/developerworks/java/library/j-threads3.html">Thread Local Session</a>.</p>
<p>On peut tres bien n&#8217;utiliser que la classe <em>Thread</em> pour les besoins
concurrents. Nous verrons cependant lorsque nous aborderons le package
<a href="http://java.sun.com/javase/6/docs/api/java/util/concurrent/package-frame.html">java.util.concurrent</a> qu&#8217;il existe plusieurs outils supplementaires qui
facilitent la vie du developpeur lorsqu&#8217;il met le pied dans le monde du multi-&nbsp;threading.</p>
<h3 id="acces-systeme">Acces&nbsp;systeme</h3>
<p>Enfin, plusieurs classes de ce package permettent de faire appel au systeme
sur lequel tourne&nbsp;Java.</p>
<p>La classe <a href="http://java.sun.com/javase/6/docs/api/java/lang/System.html">System</a> contient uniquement des membres statiques permettant par
exemple de recuperer le flux de sortie de Java (le flux utilise pour afficher
des donnees a l&#8217;ecran, la console), le temps actuel en millisecondes ou en
nanosecondes, recuperer une variable d&#8217;environnement, enregistrer une
propriete systeme, charger une classe ou une librairie dynamiquement ou encore
enregistrer un <em>SecurityManager</em>&nbsp;personnalise.</p>
<p>La classe <a href="http://java.sun.com/javase/6/docs/api/java/lang/Runtime.html">Runtime</a> est elle davantage liee au &#8220;systeme&#8221; de Java. Il est
ainsi possible de l&#8217;utiliser afin de recuperer la memoire disponible dans la
machine virtuelle, lancer le <em>Garbage Collector</em> (aussi possible depuis la
classe <em>System</em> qui fait en fait une redirection sur la classe <em>Runtime</em>) et
enfin avant de mentionner la derniere classe, Runtime permet d&#8217;executer un
nouveau processus&nbsp;systeme&#8230;</p>
<p>La classe <a href="http://java.sun.com/javase/6/docs/api/java/lang/Process.html">Process</a> liee donc a Runtime mais aussi a <a href="http://java.sun.com/javase/6/docs/api/java/lang/ProcessBuilder.html">ProcessBuilder</a>
represente un processus natif. Une utilisation de ce genre de classe peut bien
evidemment limiter la portabilite de l&#8217;application; il faut par consequent
bien reflechir quant a son&nbsp;utilisation.</p>
<p>Par exemple, pour une application graphique permettant d&#8217;executer des imports
de donnees sur une base Oracle il existe l&#8217;outil bien connu <a href="http://www.oracle.com/technology/products/database/utilities/htdocs/sql_loader_overview.html">Sql Loader</a>
qui permet de charger les donner en ligne de commande. Il sera possible
d&#8217;appeler directement depuis le code Java l&#8217;executable d&#8217;Oracle de cette&nbsp;maniere:</p>
<div class="syntax"><pre><span class="n">Process</span> <span class="n">p</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ProcessBuilder</span><span class="o">(</span><span class="s">&quot;sqlldr&quot;</span><span class="o">,</span> 
                    <span class="s">&quot;userid=root control=control.ctl&quot;</span><span class="o">).</span><span class="na">start</span><span class="o">();</span>
</pre></div>

<p>Ensuite les flux de sortie, d&#8217;entree et d&#8217;erreur sont disponibles et doivent
etre recuperes afin de pouvoir communiquer avec le processus&nbsp;lance.</p>
<p>Autour de tout cela je n&#8217;ai pas pris le temps de parler de l&#8217;ensemble
d&#8217;exceptions et d&#8217;erreurs se trouvant dans le package mais comme je l&#8217;ai dit
dans l&#8217;introduction, ce n&#8217;est et ne sera qu&#8217;un&nbsp;aperçu!</p>
]]></description>
         <pubDate>01 Apr 08 00:00 GMT</pubDate>
         <author>jacqueminv@gmail.com (Valentin Jacquemin)</author>
      </item>    
      <item>
         <title>La charte des droits du programmeur</title>
         <link>http://www.poxd.org/blog/la-charte-des-droits-du-programmeur.html</link>
         <guid>http://www.poxd.org/blog/la-charte-des-droits-du-programmeur.html</guid>
         <description><![CDATA[

<ol>
<li>
<p>Tout programmeur <a href="http://www.necus.com/necus/media/press_releases/template.cfm?DID=1947">doit avoir un affichage double&nbsp;écran</a></p>
</li>
<li>
<p>Tout programmeur doit avoir une station&nbsp;performante</p>
</li>
<li>
<p>Tout programmeur doit se procurer lui-même sa souris et son clavier&nbsp;personnels</p>
</li>
<li>
<p>Tout programmeur doit avoir une chaise&nbsp;confortable</p>
</li>
<li>
<p>Tout programmeur doit avoir une connexion rapide à&nbsp;Internet</p>
</li>
<li>
<p>Tout programmeur doit avoir un environnement de travail&nbsp;calme.</p>
</li>
</ol>
<p>Dans ma courte expérience professionnelle, tout ce que je peux dire c&#8217;est
qu&#8217;en Suisse on est bien traité! Un commentaire intéressant sur l&#8217;original de
cette charte: &#8220;mettre des écouteurs, parfois même sans aucune musique (<a href="http://notes.torrez.org/">Andre
Torrez</a>)&#8221; permet simplement de remplir les conditions de l&#8217;article numéro 6
de la charte ;) &#8230; Ayant travaillé à Lyon durant 3 mois, les conditions m&#8217;ont
amené à tenter l&#8217;expérience avec succès! [source : <a href="http://www.codinghorror.com/blog/archives/000666.html">coding horror</a>]</p>
]]></description>
         <pubDate>09 Mar 08 00:00 GMT</pubDate>
         <author>jacqueminv@gmail.com (Valentin Jacquemin)</author>
      </item>    
      <item>
         <title>L'union fait la force</title>
         <link>http://www.poxd.org/blog/lunion-fait-la-force.html</link>
         <guid>http://www.poxd.org/blog/lunion-fait-la-force.html</guid>
         <description><![CDATA[

<p>Il est toujours intéressant de parcourir du code source créé par d&#8217;autres
personnes, c&#8217;est à mes yeux une excellente formation pour devenir un bon
développeur. Je peux le vérifier en ce moment puisque je travaille sur la
résolutions d&#8217;incidents sur une application web ayant pour base principale
<a href="http://struts.apache.org">Struts</a>. J&#8217;ai été vraiment impressionné par le nombre de classes utilisées
simplement pour supporter les opérations ajout, récupération,mise à jour et
suppression de données (<a href="http://en.wikipedia.org/wiki/Create%2C_read%2C_update_and_delete"><span class="caps">CRUD</span></a>). A la décharge de l&#8217;équipe ayant créé cette
application, il faut avouer que le modèle de Struts encourage à créer une
classe par <strong>action</strong>. Personnellement, je pense que la philosophie objet est
respectée si l&#8217;on décide de regrouper les opérations <span class="caps">CRUD</span> dans une seule et
même classe. Le nombre de classes va ainsi diminuer et rendre plus de clarté à
l&#8217;environnement et l&#8217;objectif de chaque classe sera toujours bien défini. De
plus pour ne rien gâcher, Struts propose lui-même cette solution! La classe
<a href="http://struts.apache.org/1.3.8/apidocs/org/apache/struts/actions/DispatchAction.html">DispatchAction</a> permet en effet au développeur de regrouper plusieurs
actions en une-seule. Cette classe se trouvant dans la hiérarchie de la
standard <a href="http://struts.apache.org/1.3.8/apidocs/org/apache/struts/action/Action.html">Action</a> n&#8217; est donc pas très différente de celle-ci. En reprenant
ce qu&#8217;explique la javadoc de cette nouvelle recrue, voici comment doter
davantage de fonctionnalités à une&nbsp;action:</p>
<ul>
<li>
<p>la déclaration de la classe dans le fichier struts-config est quelque peu
différente:<code><action path="/saveSubscription"
type="org.apache.struts.actions.DispatchAction" name="subscriptionForm"
scope="request" input="/subscription.jsp" parameter="method"/></code> Le type de
l&#8217;action correspond à la nouvelle classe et l&#8217;attribut <em>parameter</em> tient
également un rôle particulier dans cette situation. C&#8217;est ce paramètre qui va
être utilisé afin de définir quelle action sera&nbsp;exécutée.</p>
</li>
<li>
<p>définir une méthode par action suivant le modèle suivant: <code>public
ActionForward delete(ActionMapping mapping, ActionForm form,
HttpServletRequest request, HttpServletResponse response) throws Exception</code></p>
</li>
<li>
<p>la dernière chose à faire est de faire passer le paramètre &#8216;method&#8217; (la
valeur de l&#8217;attribut <em>parameter</em> de la 1ère étape) avec comme valeur le nom de
l&#8217;action. Pour ce faire il n&#8217;y a qu&#8217;à passer par un lien ou un champ caché
dans un&nbsp;formulaire!</p>
</li>
</ul>
<p>Le résultat devient tout de même beaucoup plus agréable! La productivité va
également sûrement être favorisée du fait qu&#8217;il n&#8217;y aura plus à jongler entre
plusieurs classes pour changer d&#8217;opération sur un certain objet&#8230; Et le
développeur qui devra passer plus tard sur un code plus compact en sera très
reconnaissant&nbsp;;)</p>
]]></description>
         <pubDate>28 Jan 08 00:00 GMT</pubDate>
         <author>jacqueminv@gmail.com (Valentin Jacquemin)</author>
      </item>    
      <item>
         <title>Amazon Web Service</title>
         <link>http://www.poxd.org/blog/amazon-web-service.html</link>
         <guid>http://www.poxd.org/blog/amazon-web-service.html</guid>
         <description><![CDATA[

<p>Les applications aujourd&#8217;hui connectées à Internet peuvent interroger des
services web afin d&#8217;obtenir des données externes aux objets de l&#8217;application.
Il est ainsi possible d&#8217;interroger des miliers de bases de données en&nbsp;ligne.</p>
<p>Nous avions par exemple vu l&#8217;application Delicious Library. L&#8217;appel d&#8217;un
service web se fait au moment où on lance une recherche à propos d&#8217;un média.
En entrant un simple mot vous obtenez une liste de livre, cd, dvd ou encore de
jeux vidéos correspondant à votre recherche. L&#8217;application utilise le service
web de la plateforme amazon et par cet article je vais démontrer la facilité
avec laquelle il est possible d&#8217;interroger se service web en Java. C&#8217;est&nbsp;parti!</p>
<p>Il faut tout d&#8217;abord créer un compte sur la plateforme depuis cet url :
<a href="http://www.amazon.com/gp/browse.html?node=3435361">http://www.amazon.com/gp/browse.html?node=3435361</a></p>
<p>Après inscription il est possible d&#8217;obtenir un identifiant (acces key id)
nécessaire à l&#8217;interrogation du service web. Il nous manque plus que le lien
reliant notre application et le service web. L&#8217;utilitaire en ligne de commande
wsimport va nous créer ce lien. Cet outil est intégré au <span class="caps">JDK</span>. Donc si
l&#8217;environnement est bien configuré il sera possible de directement lancer cet
utilitaire depuis le prompt. Sinon il faudra vérifier que le répertoire <span class="caps">JDK</span>
est bien référencé dans le _PATH _de&nbsp;l&#8217;environnement.</p>
<p>Utilisons donc cet utilitaire pour nous créer les classes nécessaires à
l&#8217;interrogation du service web. Pour cela rien de plus simple : <code>wsimport
http://www.amazon.com/gp/browse.html?node=3435361 -d src -p org.poxd.gen</code>
Après exécution de cette ligne dans le shell (prompt <span class="caps">DOS</span> ou shell unix) un
ensemble de classes sont créées. Celles-ci feront tout le travail
d&#8217;interrogation sur le service&nbsp;web.</p>
<p>Suite à la création de ces classes, nous allons les utiliser afin d&#8217;interroger
amazon pour nous retourner les résultats de livres pour un auteur renseigné
par l&#8217;utilisateur dans une application graphique. L&#8217;aspect graphique peut en
rebuter plus d&#8217;un lorsqu&#8217;il faut s&#8217;attaquer à la librairie swing qui a
mauvaise réputation. Cependant en utilisant Netbeans il devient très facile
d&#8217;arranger des composants ensembles grâce à Matisse son _GUI Builder. _En 2
minutes on peut se créer une fenêtre contenant une liste, un champ de texte,
un bouton, une barre de menu et une gestion complète du positionnement et de
la taille de la fenêtre qui vont être mémorisées à la fermeture de
l&#8217;application pour les restaurer au prochain démarrage. Voici le rendu de mon
application&nbsp;:</p>
<p><img alt="aws-gui" src="http://www.poxd.org/wp-content/uploads/poxd.files.wordpress.com/2007/12/sans-titre.jpg" /></p>
<p>Netbeans s&#8217;appuie sur l&#8217;Application framework développé par Sun ce qui tend à
rendre les choses plus facile pour ce genre de développement. Tout ce qui est
de la gestion de l&#8217;internationalisation, des actions, du modèle de Swing est
plus accessible à tout&nbsp;développeur.</p>
<p>Maintenant si nous retournons à notre application nous allons y intégrer
l&#8217;appel au service web d&#8217;amazon en passant par nos classes générées par
wsimport. Pour récupérer donc une liste de livres correspondant à un auteur le
tout est aussi simple que&nbsp;ça:</p>
<div class="syntax"><pre><span class="n">AWSECommerceService</span> <span class="n">service</span> <span class="o">=</span> <span class="k">new</span> <span class="n">AWSECommerceService</span><span class="o">();</span>
<span class="n">AWSECommerceServicePortType</span> <span class="n">portType</span> <span class="o">=</span> 
            <span class="n">service</span><span class="o">.</span><span class="na">getAWSECommerceServicePort</span><span class="o">();</span>
<span class="n">ItemSearchRequest</span> <span class="n">request</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ItemSearchRequest</span><span class="o">();</span> 
<span class="n">Holder</span><span class="o">&lt;</span><span class="n">OperationRequest</span><span class="o">&gt;</span> <span class="n">operationrequest</span> <span class="o">=</span> 
            <span class="k">new</span> <span class="n">Holder</span><span class="o">&lt;</span><span class="n">OperationRequest</span><span class="o">&gt;();</span>
<span class="n">Holder</span><span class="o">&lt;</span><span class="n">java</span><span class="o">.</span><span class="na">util</span><span class="o">.</span><span class="na">List</span><span class="o">&lt;</span><span class="n">Items</span><span class="o">&gt;&gt;</span> <span class="n">items</span> <span class="o">=</span> 
            <span class="k">new</span> <span class="n">Holder</span><span class="o">&lt;</span><span class="n">java</span><span class="o">.</span><span class="na">util</span><span class="o">.</span><span class="na">List</span><span class="o">&lt;</span><span class="n">Items</span><span class="o">&gt;&gt;();</span>
<span class="n">request</span><span class="o">.</span><span class="na">setSearchIndex</span><span class="o">(</span><span class="s">&quot;Books&quot;</span><span class="o">);</span> 
<span class="n">request</span><span class="o">.</span><span class="na">setAuthor</span><span class="o">(</span><span class="s">&quot;tevis&quot;</span><span class="o">);</span> 
<span class="n">ItemSearch</span> <span class="n">search</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ItemSearch</span><span class="o">();</span> 
<span class="n">search</span><span class="o">.</span><span class="na">setAWSAccessKeyId</span><span class="o">(</span><span class="n"><span class="caps">AWSID</span></span><span class="o">);</span>
<span class="n">search</span><span class="o">.</span><span class="na">getRequest</span><span class="o">().</span><span class="na">add</span><span class="o">(</span><span class="n">request</span><span class="o">);</span> 
<span class="n">List</span> <span class="n">result</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ArrayList</span><span class="o">();</span>
<span class="n">portType</span><span class="o">.</span><span class="na">itemSearch</span><span class="o">(</span><span class="s">&quot;&quot;</span><span class="o">,</span> <span class="n"><span class="caps">AWSID</span></span><span class="o">,</span> <span class="n"><span class="caps">AWSID</span></span><span class="o">,</span> <span class="s">&quot;&quot;</span><span class="o">,</span> <span class="s">&quot;&quot;</span><span class="o">,</span> <span class="s">&quot;&quot;</span><span class="o">,</span> <span class="n">request</span><span class="o">,</span>
<span class="n">search</span><span class="o">.</span><span class="na">getRequest</span><span class="o">(),</span> <span class="n">operationrequest</span><span class="o">,</span> <span class="n">items</span><span class="o">);</span>
</pre></div>

<p>La variable <span class="caps">AWSID</span> étant la clé fournie par amazon après création d&#8217;un compte. A ce moment-là, la liste
<em>result _contient toutes les informations dont on peut avoir besoin! Tout est
accessible depuis son membre _value</em>. Pour de plus amples informations sur ce
qui est possible et comment je vous laisse consulter le centre de ressources
d&#8217;amazon. Voici en quelques minutes ce que l&#8217;on peut obtenir conjointement
avec les services web d&#8217;Amazon et Netbeans&nbsp;6.</p>
<p><img alt="result-aws" src="http://www.poxd.org/wp-content/uploads/poxd.files.wordpress.com/2007/12/result.jpg" /></p>
<p>Vous pouvez trouver les sources <a href="http://digitalbucket.net/Public/Download.ashx?q=9f5316edbe182634c7f80eb879642cda">ici</a>.</p>
]]></description>
         <pubDate>12 Dec 07 00:00 GMT</pubDate>
         <author>jacqueminv@gmail.com (Valentin Jacquemin)</author>
      </item>    
      <item>
         <title>Java et le web 2.0</title>
         <link>http://www.poxd.org/blog/java-et-le-web-20.html</link>
         <guid>http://www.poxd.org/blog/java-et-le-web-20.html</guid>
         <description><![CDATA[

<p>Un <a href="http://www.ibm.com/developerworks/web/library/wa-aj-web2jee/?S_TACT=105AGX54&amp;S_CMP=A1109&amp;ca=dnw-843">article intéressante</a> concernant java et les appels asynchrones est
consultable sur&nbsp;developerwors.</p>
<p>Il met bien à l&#8217;index les lacunes de l&#8217;architecture Servlet de Java en ce qui
concerne le buzz du moment : le web 2.0. Mais ce qu&#8217;il y a d&#8217;intéressant c&#8217;est
que l&#8217;article propose des pistes sur lesquelles se diriger lorsque l&#8217;on veut
créer une gestion asynchrones de requêtes. Il est parlé entre autre de du
projet <a href="http://mina.apache.org/">Apache <span class="caps">MINA</span></a> , <a href="http://www.eecs.harvard.edu/~mdw/proj/seda/"><span class="caps">SEDA</span></a>, mais également du pattern <a href="http://www.webtide.com/downloads/whitePaperWhyAjax.html"><span class="caps">COMET</span></a>.
Très bon tour d&#8217;horizon et d&#8217;idées à consulter. Un benchmark est de plus
utilisé afin de prouver l&#8217;apport des appels asynchrones par rapport à la
démarche synchrone traditionnelle à Java. Il propose de nombreuses ressources;
à aller&nbsp;consulter!</p>
<p>Pour info l&#8217;article parle également de 2 solutions proposées par les
conteneurs Tomcat et Jetty qui permettent une communication asynchrone :
<a href="http://tomcat.apache.org/tomcat-6.0-doc/aio.html">Apache Tomcat 6 Comet <span class="caps">API</span></a> et <a href="http://docs.codehaus.org/display/JETTY/Continuations">Jetty Continuations</a>.</p>
]]></description>
         <pubDate>19 Nov 07 00:00 GMT</pubDate>
         <author>jacqueminv@gmail.com (Valentin Jacquemin)</author>
      </item>    
      <item>
         <title>Adobe AIR</title>
         <link>http://www.poxd.org/blog/adobe-air.html</link>
         <guid>http://www.poxd.org/blog/adobe-air.html</guid>
         <description><![CDATA[

<p>Un article très intéressant concernant les <a href="http://www.devx.com/RichInternetApps/Article/35208/">applications desktop riches</a>
(<span class="caps">RIA</span>) est parru sur&nbsp;DevX.com</p>
<p>Cet article compare 3 technologies ayant pour but la création de ce genre
d&#8217;application. Silverlight, Adobe <span class="caps">AIR</span> (anciennement connu sous le nom Apollo)
et JavaFX sont mis côte à côte pour la création d&#8217;un même widget, un&nbsp;chronomètre.</p>
<p>Il est comme toujours évident qu&#8217;une technologie ne répondra pas à tous les
besoins. Mais concernant le développement d&#8217;application riche je me dis que je
vais peut-être bien me pencher davantage sur Adobe <span class="caps">AIR</span> quant on voit le
résultat du chronomètre sous cette technologie et le développement y ayant
mené. Ainsi le widget n&#8217;a aucune décoration et supporte la transparence. C&#8217;est
la différence principale mise en avant dans l&#8217;article. Peut-être qu&#8217;il y a
possibilité d&#8217;y arriver avec les autres technologies (en Java c&#8217;est possible
d&#8217;ôter la décoration donc en JavaFX sûrement aussi) mais <span class="caps">AIR</span> le fait très
simplement. Au niveau du déploiement les 3 technologies me semblent
défendables; il n&#8217;est en tout cas pas difficile d&#8217;effectuer cette opération
sur aucune des 3&nbsp;technologies.</p>
]]></description>
         <pubDate>08 Oct 07 00:00 GMT</pubDate>
         <author>jacqueminv@gmail.com (Valentin Jacquemin)</author>
      </item>    
      <item>
         <title>Multithreaded Java GUI Programming</title>
         <link>http://www.poxd.org/blog/multithreaded-java-gui-programming.html</link>
         <guid>http://www.poxd.org/blog/multithreaded-java-gui-programming.html</guid>
         <description><![CDATA[

<p>J&#8217;ai lu récemment <a href="http://www.informit.com/articles/article.aspx?p=787119&amp;seqNum=1">cet article</a> sur InformIT. J&#8217;ai cependant une petite
précision à faire. Il est en effet important de connaître la structure de
swing au niveau threading avant de faire passer une application monothread à
une application multithread. Ce n&#8217;est pas aussi simple que l&#8217;article semble le&nbsp;montrer.</p>
<p>Au départ de toute application, swing ou pas, la machine virtuelle démarre un
thread de lancement. Ce thread a pour nom le <em>main-thread</em>, c&#8217;est donc au sein
de celui-ci qu&#8217;est lancé la méthode <em>main</em> de votre application. Ensuite votre
code peut initialiser, lancer, tuer des threads à souhait. Mais lorsque vous
développez une application graphique avec le framework swing, un thread
additionnel est lancé. Il se nomme l&#8217;<em>Event Dispatch Thread (_abbrévié _EDT)</em>.
Ce thread a pour but de gérer les interactions de l&#8217;utilisateur et l&#8217;affichage
des composants graphiques de votre application. Ce qui est important c&#8217;est que
ce thread n&#8217;ait à faire que des tâches très courtes afin que votre application
ne gèle pas mais également que tout changement d&#8217;apparence de votre
application passe par&nbsp;lui.</p>
<p>Si maintenant nous revenons à l&#8217;article de Monsieur <a href="http://www.informit.com/authors/bio.aspx?a=ff0e7b03-51ce-4983-9e3f-68485b1e8ceb">Morris</a> nous pouvons
voir en page 3 que pour lui passer une application swing en multithreading est
aussi simple que de créer un thread lors d&#8217;un clic de bouton et le lancer. Ce
pourrait en effet paraître très facile! Mais il faut faire très attention en
suivant cette méthode&#8230; En effet si vous mettez à jour votre application
depuis le thread lancé il peut vous arriver malheur et ce qu&#8217;il fait dans&nbsp;l&#8217;article.</p>
<p>En revenant à notre description (très rapide) de l&#8217;architecture swing nous
nous rappelons de l&#8217;<span class="caps">EDT</span>. Tout ce qui concerne un changement graphique doit
passer par ce thread puisque c&#8217;est lui gère <strong>tout</strong> (redimensionnement,
rafraîchissement, disposition&#8230;) ! Il existe plusieurs méthodes dans l&#8217;<span class="caps">API</span> de
java qui permettent d&#8217;ajouter une tâche à effectuer dans l&#8217;<span class="caps">EDT</span>:
<a href="http://java.sun.com/javase/6/docs/api/javax/swing/SwingUtilities.html#invokeLater(java.lang.Runnable)">SwingUtilities.invokeLater(Runnable r)</a> et
<a href="http://java.sun.com/javase/6/docs/api/javax/swing/SwingUtilities.html#invokeAndWait(java.lang.Runnable)">SwingUtilities.invokeAndWait(Runnable&nbsp;r)</a></p>
<p>Je vous laisse consulter la documentation pour connaître leur spécificités.
Tout cela pour dire qu&#8217;il ne faut pas oublier de passer par l&#8217;<span class="caps">EDT</span> pour changer
l&#8217;aspect de votre application pour ne pas avoir de&nbsp;surprise.</p>
]]></description>
         <pubDate>02 Oct 07 00:00 GMT</pubDate>
         <author>jacqueminv@gmail.com (Valentin Jacquemin)</author>
      </item>    
      <item>
         <title>Les objets de conditions</title>
         <link>http://www.poxd.org/blog/les-objets-de-conditions.html</link>
         <guid>http://www.poxd.org/blog/les-objets-de-conditions.html</guid>
         <description><![CDATA[

<p>La <span class="caps">JDK</span> 5 a apporté de nombreuses fonctionnalités au niveau du développement
multi-threading. Aujourd&#8217;hui j&#8217;aimerais discuter un peu des objets de&nbsp;conditions.</p>
<p>Un objet de condition permet de définir une condition (non pas vrai?) à
remplir avant de continuer le processus définit par votre programme. Imaginons
que vous développiez une application de gestion de stock pour le garage
Marielo du centre du patelin. Angelo, le gérant, veut pouvoir gérer son stock
depuis la maison mais également que ses employés puissent le mettre à jour
directement avec les clients lors d&#8217;un devis ou d&#8217;une commande spécifique.
Maintenant passons par-dessus toute l&#8217;analyse, que vous avez d&#8217;ailleurs
parfaitement effectuée avec Angelo lui-même, pour arriver au coeur de votre
application: la méthode <em>removePieceFromStock(Piece p, int quantity)</em>. Dans
cette méthode l&#8217;utilisation d&#8217;objets de conditions devient évidente. En effet
dans le cas ou plusieurs clients (de votre application donc) appellent cette
méthode il vous faudra vérifier que votre stock contient bien le nombre de
pièces à commander. S&#8217;il s&#8217;avère que le nombre de pièces est suffisant vous
pouvez alors les retirer. Avant de vérifier le nombre de pièces en stock vous
aurez obtenu un verrou sur l&#8217;objet courant du fait que cette méthode modifie
l&#8217;état de votre stock. Maintenant si vous obtenez le verrou pour l&#8217;objet et
que votre condition échoue&#8230; Vous devez libérer le verrou de l&#8217;objet afin que
le stock puisse à nouveau être fourni en pièce(s) qu&#8217;il vous&nbsp;faut.</p>
<p>Avant la <span class="caps">JDK</span> 5 la seule possibilité d&#8217;utiliser un objet de condition était
d&#8217;en créer soi-même et de gérer les accès depuis plusieurs threads. Autant
dire que sans être un expert du genre les erreurs de conception ou du moins
les performances pouvaient s&#8217;en ressentir très&nbsp;facilement.</p>
<p>Le package java.util.concurrent.lock fournit 2 classes particulièrement utiles
dans notre situation. Je veux parler de Lock et de Condition. L&#8217;interface Lock
définit un objet de verrou (plusieurs implémentations existent au sein du
<span class="caps">JDK</span>). La classe Condition quant à elle représente un objet de condition. Un
objet Lock comporte de nombreux avantages par rapport à une conception mettant
en oeuvre uniquement des méthodes ou des blocs <em>synchronized</em> mais la
définition de ces avantages n&#8217;est pas le but de ce post. Je vous laisse vous
référer à la javadoc pour obtenir une description complète sur ces éléments de
la librairie. Sommairement, il faut savoir qu&#8217;un objet Lock peut avoir
plusieurs Conditions et que ces Conditions permettent de stopper le
déroulement de votre programme lorsqu&#8217;une condition n&#8217;est pas remplie et de
reprendre à cet endroit lorsqu&#8217;un autre thread signale que la condition peut
avoir changé. Le principe est le même que celui des méthodes wait/notify de la
classe Thread. Le premier avantage est pour ma part une meilleure lisibilité
du code de l&#8217;application puisque l&#8217;on connaît directement l&#8217;objet de la
condition à&nbsp;remplir.</p>
<p>Pour finir, voici une solution possible au développement pour&nbsp;Angelo:</p>
<div class="syntax"><pre><span class="kd">public</span> <span class="kt">void</span> <span class="nf">removePieceFromStock</span><span class="o">(</span><span class="n">Piece</span> <span class="n">p</span><span class="o">,</span> <span class="kt">int</span> <span class="n">quantity</span><span class="o">)</span> <span class="o">{</span> 
    <span class="k">try</span> <span class="o">{</span> 
            <span class="n">lock</span><span class="o">.</span><span class="na">lock</span><span class="o">();</span> <span class="c1">//acquiert le verrou </span>
            <span class="k">while</span><span class="o">(</span><span class="n">getQuantity</span><span class="o">(</span><span class="n">p</span><span class="o">)</span> <span class="o">&lt;</span> <span class="n">quantity</span><span class="o">)</span>
                <span class="n">insuffisantCondition</span><span class="o">.</span><span class="na">await</span><span class="o">();</span> <span class="c1">//libère le verrou </span>
                                              <span class="c1">//retire le nombre de </span>
                                              <span class="c1">//pièces du stock </span>
        <span class="o">}</span> <span class="k">finally</span> <span class="o">{</span> <span class="n">lock</span><span class="o">.</span><span class="na">unlock</span><span class="o">();</span> <span class="c1">//libère le verrou } }</span>
    <span class="cm">/**</span>
<span class="cm">    une autre méthode permettra de rajouter des pièces au stock; </span>
<span class="cm">    dans cette méthode il faudra signaler que la condition change </span>
<span class="cm">    en appelant la méthode insuffisantCondition.signalAll() ou </span>
<span class="cm">    insuffisantCondition.signal() ce qui permettra de relancer un</span>
<span class="cm">    thread en attente sur cette condition - à noter qu&#39;il est </span>
<span class="cm">    impératif d&#39;obtenir le verrou qui possède la condition afin </span>
<span class="cm">    de signaler un changement d&#39;état </span>
<span class="cm">    **/</span>
<span class="o">}</span>
</pre></div>

]]></description>
         <pubDate>26 Sep 07 00:00 GMT</pubDate>
         <author>jacqueminv@gmail.com (Valentin Jacquemin)</author>
      </item>
   </channel>
</rss>